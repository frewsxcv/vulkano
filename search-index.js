var searchIndex = {};
searchIndex['vulkano'] = {"items":[[4,"OomError","vulkano","Error type returned by most Vulkan functions.",null,null],[13,"OutOfHostMemory","","There is no memory available on the host (ie. the CPU, RAM, etc.).",0,null],[13,"OutOfDeviceMemory","","There is no memory available on the device (ie. video memory).",0,null],[0,"buffer","","Location in memory that contains data.",null,null],[3,"Buffer","vulkano::buffer","",null,null],[3,"Usage","","Describes how a buffer is going to be used. This is **not** an optimization.",null,null],[12,"transfer_source","","",1,null],[12,"transfer_dest","","",1,null],[12,"uniform_texel_buffer","","",1,null],[12,"storage_texel_buffer","","",1,null],[12,"uniform_buffer","","",1,null],[12,"storage_buffer","","",1,null],[12,"index_buffer","","",1,null],[12,"vertex_buffer","","",1,null],[12,"indirect_buffer","","",1,null],[3,"BufferSlice","","A subpart of a buffer.",null,null],[3,"BufferView","","Represents a way for the GPU to interpret buffer data.",null,null],[8,"BufferResource","","",null,null],[10,"size","","Returns the size of the buffer in bytes.",2,{"inputs":[{"name":"bufferresource"}],"output":{"name":"usize"}}],[10,"gpu_access","","Instructs the resource that it is going to be used by the GPU soon in the future. The\nfunction should block if the memory is currently being accessed by the CPU.",2,{"inputs":[{"name":"bufferresource"},{"name":"bool"},{"name":"usize"},{"name":"usize"},{"name":"queue"},{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"new","","Creates a new buffer.",3,{"inputs":[{"name":"buffer"},{"name":"arc"},{"name":"usage"},{"name":"s"},{"name":"sh"}],"output":{"name":"result"}}],[11,"array","","Creates a new buffer with a number of elements.",3,{"inputs":[{"name":"buffer"},{"name":"arc"},{"name":"usize"},{"name":"usage"},{"name":"s"},{"name":"sh"}],"output":{"name":"result"}}],[11,"raw","","Creates a new buffer of the given size without checking whether the type is correct.",3,{"inputs":[{"name":"buffer"},{"name":"arc"},{"name":"usize"},{"name":"usage"},{"name":"s"},{"name":"sh"}],"output":{"name":"result"}}],[11,"device","","Returns the device used to create this buffer.",3,{"inputs":[{"name":"buffer"}],"output":{"name":"arc"}}],[11,"size","","Returns the size of the buffer in bytes.",3,{"inputs":[{"name":"buffer"}],"output":{"name":"usize"}}],[11,"usage_transfer_src","","True if the buffer can be used as a source for buffer transfers.",3,{"inputs":[{"name":"buffer"}],"output":{"name":"bool"}}],[11,"usage_transfer_dest","","True if the buffer can be used as a destination for buffer transfers.",3,{"inputs":[{"name":"buffer"}],"output":{"name":"bool"}}],[11,"usage_uniform_texel_buffer","","True if the buffer can be used as",3,{"inputs":[{"name":"buffer"}],"output":{"name":"bool"}}],[11,"usage_storage_texel_buffer","","True if the buffer can be used as",3,{"inputs":[{"name":"buffer"}],"output":{"name":"bool"}}],[11,"usage_uniform_buffer","","True if the buffer can be used as",3,{"inputs":[{"name":"buffer"}],"output":{"name":"bool"}}],[11,"usage_storage_buffer","","True if the buffer can be used as",3,{"inputs":[{"name":"buffer"}],"output":{"name":"bool"}}],[11,"usage_index_buffer","","True if the buffer can be used as a source for index data.",3,{"inputs":[{"name":"buffer"}],"output":{"name":"bool"}}],[11,"usage_vertex_buffer","","True if the buffer can be used as a source for vertex data.",3,{"inputs":[{"name":"buffer"}],"output":{"name":"bool"}}],[11,"usage_indirect_buffer","","True if the buffer can be used as an indirect buffer.",3,{"inputs":[{"name":"buffer"}],"output":{"name":"bool"}}],[11,"len","","Returns the number of elements in the buffer.",3,{"inputs":[{"name":"buffer"}],"output":{"name":"usize"}}],[11,"requires_fence","","",3,{"inputs":[{"name":"buffer"}],"output":{"name":"bool"}}],[11,"requires_semaphore","","",3,{"inputs":[{"name":"buffer"}],"output":{"name":"bool"}}],[11,"sharing_mode","","",3,{"inputs":[{"name":"buffer"}],"output":{"name":"sharingmode"}}],[11,"size","","",3,{"inputs":[{"name":"buffer"}],"output":{"name":"usize"}}],[11,"gpu_access","","",3,{"inputs":[{"name":"buffer"},{"name":"bool"},{"name":"usize"},{"name":"usize"},{"name":"queue"},{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"read","","Gives a read access to the content of the buffer.",3,{"inputs":[{"name":"buffer"},{"name":"u64"}],"output":{"name":"read"}}],[11,"try_read","","Tries to give a read access to the content of the buffer.",3,{"inputs":[{"name":"buffer"}],"output":{"name":"option"}}],[11,"write","","Gives a write access to the content of the buffer.",3,{"inputs":[{"name":"buffer"},{"name":"u64"}],"output":{"name":"write"}}],[11,"try_write","","Tries to give a write access to the content of the buffer.",3,{"inputs":[{"name":"buffer"}],"output":{"name":"option"}}],[11,"read","","",3,{"inputs":[{"name":"buffer"},{"name":"u64"}],"output":{"name":"read"}}],[11,"try_read","","",3,{"inputs":[{"name":"buffer"}],"output":{"name":"option"}}],[11,"write","","",3,{"inputs":[{"name":"buffer"},{"name":"u64"}],"output":{"name":"write"}}],[11,"try_write","","",3,{"inputs":[{"name":"buffer"}],"output":{"name":"option"}}],[11,"internal_object","","",3,{"inputs":[{"name":"buffer"}],"output":{"name":"buffer"}}],[11,"drop","","",3,{"inputs":[{"name":"buffer"}],"output":null}],[11,"clone","","",1,{"inputs":[{"name":"usage"}],"output":{"name":"usage"}}],[11,"fmt","","",1,{"inputs":[{"name":"usage"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"all","","Builds a `Usage` with all values set to true. Can be used for quick prototyping.",1,{"inputs":[{"name":"usage"}],"output":{"name":"usage"}}],[11,"clone","","",4,{"inputs":[{"name":"bufferslice"}],"output":{"name":"bufferslice"}}],[11,"buffer","","Returns the buffer that this slice belongs to.",4,{"inputs":[{"name":"bufferslice"}],"output":{"name":"arc"}}],[11,"offset","","Returns the offset of that slice within the buffer.",4,{"inputs":[{"name":"bufferslice"}],"output":{"name":"usize"}}],[11,"size","","Returns the size of that slice in bytes.",4,{"inputs":[{"name":"bufferslice"}],"output":{"name":"usize"}}],[11,"usage_transfer_src","","True if the buffer can be used as a source for buffer transfers.",4,{"inputs":[{"name":"bufferslice"}],"output":{"name":"bool"}}],[11,"usage_transfer_dest","","True if the buffer can be used as a destination for buffer transfers.",4,{"inputs":[{"name":"bufferslice"}],"output":{"name":"bool"}}],[11,"usage_uniform_texel_buffer","","True if the buffer can be used as",4,{"inputs":[{"name":"bufferslice"}],"output":{"name":"bool"}}],[11,"usage_storage_texel_buffer","","True if the buffer can be used as",4,{"inputs":[{"name":"bufferslice"}],"output":{"name":"bool"}}],[11,"usage_uniform_buffer","","True if the buffer can be used as",4,{"inputs":[{"name":"bufferslice"}],"output":{"name":"bool"}}],[11,"usage_storage_buffer","","True if the buffer can be used as",4,{"inputs":[{"name":"bufferslice"}],"output":{"name":"bool"}}],[11,"usage_index_buffer","","True if the buffer can be used as a source for index data.",4,{"inputs":[{"name":"bufferslice"}],"output":{"name":"bool"}}],[11,"usage_vertex_buffer","","True if the buffer can be used as a source for vertex data.",4,{"inputs":[{"name":"bufferslice"}],"output":{"name":"bool"}}],[11,"usage_indirect_buffer","","True if the buffer can be used as",4,{"inputs":[{"name":"bufferslice"}],"output":{"name":"bool"}}],[11,"len","","Returns the number of elements in this slice.",4,{"inputs":[{"name":"bufferslice"}],"output":{"name":"usize"}}],[11,"internal_object","","",4,{"inputs":[{"name":"bufferslice"}],"output":{"name":"buffer"}}],[11,"from","","",4,{"inputs":[{"name":"bufferslice"},{"name":"arc"}],"output":{"name":"bufferslice"}}],[11,"from","","",4,{"inputs":[{"name":"bufferslice"},{"name":"bufferslice"}],"output":{"name":"bufferslice"}}],[0,"command_buffer","vulkano","Commands that the GPU will execute (includes draw commands).",null,null],[3,"DynamicState","vulkano::command_buffer","The dynamic state to use for a draw command.",null,null],[12,"line_width","","",5,null],[3,"PrimaryCommandBufferBuilder","","A prototype of a primary command buffer.",null,null],[3,"PrimaryCommandBufferBuilderInlineDraw","","Object that you obtain when calling `draw_inline` or `next_subpass_inline`.",null,null],[3,"PrimaryCommandBufferBuilderSecondaryDraw","","Object that you obtain when calling `draw_secondary` or `next_subpass_secondary`.",null,null],[3,"PrimaryCommandBuffer","","Represents a collection of commands to be executed by the GPU.",null,null],[3,"SecondaryGraphicsCommandBufferBuilder","","A prototype of a secondary compute command buffer.",null,null],[3,"SecondaryGraphicsCommandBuffer","","Represents a collection of commands to be executed by the GPU.",null,null],[3,"SecondaryComputeCommandBufferBuilder","","A prototype of a secondary compute command buffer.",null,null],[3,"SecondaryComputeCommandBuffer","","Represents a collection of commands to be executed by the GPU.",null,null],[3,"CommandBufferPool","","A pool from which command buffers are created from.",null,null],[11,"new","","Builds a new primary command buffer and start recording commands in it.",6,{"inputs":[{"name":"primarycommandbufferbuilder"},{"name":"arc"}],"output":{"name":"result"}}],[11,"update_buffer","","Writes data to a buffer.",6,{"inputs":[{"name":"primarycommandbufferbuilder"},{"name":"b"},{"name":"t"}],"output":{"name":"primarycommandbufferbuilder"}}],[11,"fill_buffer","","Fills a buffer with data.",6,{"inputs":[{"name":"primarycommandbufferbuilder"},{"name":"arc"},{"name":"usize"},{"name":"usize"},{"name":"u32"}],"output":{"name":"primarycommandbufferbuilder"}}],[11,"copy_buffer","","",6,{"inputs":[{"name":"primarycommandbufferbuilder"},{"name":"arc"},{"name":"arc"}],"output":{"name":"primarycommandbufferbuilder"}}],[11,"execute_commands","","Executes secondary compute command buffers within this primary command buffer.",6,{"inputs":[{"name":"primarycommandbufferbuilder"},{"name":"i"}],"output":{"name":"primarycommandbufferbuilder"}}],[11,"draw_inline","","Start drawing on a framebuffer.\nThis function returns an object that can be used to submit draw commands on the first\nsubpass of the renderpass.",6,{"inputs":[{"name":"primarycommandbufferbuilder"},{"name":"arc"},{"name":"arc"},{"name":"clearvalues"}],"output":{"name":"primarycommandbufferbuilderinlinedraw"}}],[11,"draw_secondary","","Start drawing on a framebuffer.\nThis function returns an object that can be used to submit secondary graphics command\nbuffers that will operate on the first subpass of the renderpass.",6,{"inputs":[{"name":"primarycommandbufferbuilder"},{"name":"arc"},{"name":"arc"},{"name":"clearvalues"}],"output":{"name":"primarycommandbufferbuildersecondarydraw"}}],[11,"build","","Finish recording commands and build the command buffer.",6,{"inputs":[{"name":"primarycommandbufferbuilder"}],"output":{"name":"result"}}],[11,"draw","","Calls `vkCmdDraw`.",7,{"inputs":[{"name":"primarycommandbufferbuilderinlinedraw"},{"name":"arc"},{"name":"v"},{"name":"dynamicstate"},{"name":"descriptorsets"}],"output":{"name":"primarycommandbufferbuilderinlinedraw"}}],[11,"draw_indexed","","Calls `vkCmdDrawIndexed`.",7,{"inputs":[{"name":"primarycommandbufferbuilderinlinedraw"},{"name":"arc"},{"name":"v"},{"name":"ib"},{"name":"dynamicstate"},{"name":"descriptorsets"}],"output":{"name":"primarycommandbufferbuilderinlinedraw"}}],[11,"next_subpass_inline","","Switches to the next subpass of the current renderpass.",7,{"inputs":[{"name":"primarycommandbufferbuilderinlinedraw"}],"output":{"name":"primarycommandbufferbuilderinlinedraw"}}],[11,"next_subpass_secondary","","Switches to the next subpass of the current renderpass.",7,{"inputs":[{"name":"primarycommandbufferbuilderinlinedraw"}],"output":{"name":"primarycommandbufferbuildersecondarydraw"}}],[11,"draw_end","","Finish drawing this renderpass and get back the builder.",7,{"inputs":[{"name":"primarycommandbufferbuilderinlinedraw"}],"output":{"name":"primarycommandbufferbuilder"}}],[11,"next_subpass_inline","","Switches to the next subpass of the current renderpass.",8,{"inputs":[{"name":"primarycommandbufferbuildersecondarydraw"}],"output":{"name":"primarycommandbufferbuilderinlinedraw"}}],[11,"next_subpass_secondary","","Switches to the next subpass of the current renderpass.",8,{"inputs":[{"name":"primarycommandbufferbuildersecondarydraw"}],"output":{"name":"primarycommandbufferbuildersecondarydraw"}}],[11,"execute_commands","","Executes secondary graphics command buffers within this primary command buffer.",8,{"inputs":[{"name":"primarycommandbufferbuildersecondarydraw"},{"name":"i"}],"output":{"name":"primarycommandbufferbuildersecondarydraw"}}],[11,"draw_end","","Finish drawing this renderpass and get back the builder.",8,{"inputs":[{"name":"primarycommandbufferbuildersecondarydraw"}],"output":{"name":"primarycommandbufferbuilder"}}],[11,"submit","","Submits the command buffer to a queue so that it is executed.",9,{"inputs":[{"name":"primarycommandbuffer"},{"name":"queue"}],"output":{"name":"result"}}],[11,"new","","Builds a new secondary command buffer and start recording commands in it.",10,{"inputs":[{"name":"secondarygraphicscommandbufferbuilder"},{"name":"arc"}],"output":{"name":"result"}}],[11,"build","","Finish recording commands and build the command buffer.",10,{"inputs":[{"name":"secondarygraphicscommandbufferbuilder"}],"output":{"name":"result"}}],[11,"new","","Builds a new secondary command buffer and start recording commands in it.",11,{"inputs":[{"name":"secondarycomputecommandbufferbuilder"},{"name":"arc"}],"output":{"name":"result"}}],[11,"update_buffer","","Writes data to a buffer.",11,{"inputs":[{"name":"secondarycomputecommandbufferbuilder"},{"name":"b"},{"name":"t"}],"output":{"name":"secondarycomputecommandbufferbuilder"}}],[11,"fill_buffer","","Fills a buffer with data.",11,{"inputs":[{"name":"secondarycomputecommandbufferbuilder"},{"name":"arc"},{"name":"usize"},{"name":"usize"},{"name":"u32"}],"output":{"name":"secondarycomputecommandbufferbuilder"}}],[11,"build","","Finish recording commands and build the command buffer.",11,{"inputs":[{"name":"secondarycomputecommandbufferbuilder"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"dynamicstate"}],"output":{"name":"dynamicstate"}}],[11,"fmt","","",5,{"inputs":[{"name":"dynamicstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"none","","",5,{"inputs":[{"name":"dynamicstate"}],"output":{"name":"dynamicstate"}}],[11,"default","","",5,{"inputs":[{"name":"dynamicstate"}],"output":{"name":"dynamicstate"}}],[11,"new","","Creates a new pool.",12,{"inputs":[{"name":"commandbufferpool"},{"name":"arc"},{"name":"queuefamily"}],"output":{"name":"result"}}],[11,"device","","Returns the device this command pool was created with.",12,{"inputs":[{"name":"commandbufferpool"}],"output":{"name":"arc"}}],[11,"queue_family","","Returns the queue family on which command buffers of this pool can be executed.",12,{"inputs":[{"name":"commandbufferpool"}],"output":{"name":"queuefamily"}}],[11,"internal_object","","",12,{"inputs":[{"name":"commandbufferpool"}],"output":{"name":"commandpool"}}],[11,"drop","","",12,{"inputs":[{"name":"commandbufferpool"}],"output":null}],[0,"descriptor_set","vulkano","Collection of resources accessed by the pipeline.",null,null],[3,"EmptyPipelineDesc","vulkano::descriptor_set","Dummy implementation of `PipelineLayoutDesc` that describes an empty pipeline.",null,null],[3,"DescriptorWrite","","",null,null],[12,"binding","","",13,null],[12,"array_element","","",13,null],[12,"content","","",13,null],[3,"DescriptorDesc","","Describes a single descriptor.",null,null],[12,"binding","","Offset of the binding within the descriptor.",14,null],[12,"ty","","What kind of resource can later be bind to this descriptor.",14,null],[12,"array_count","","How many array elements this descriptor is made of.",14,null],[12,"stages","","Which shader stages are going to access this descriptor.",14,null],[3,"ShaderStages","","Describes which shader stages have access to a descriptor.",null,null],[12,"vertex","","",15,null],[12,"tessellation_control","","",15,null],[12,"tessellation_evaluation","","",15,null],[12,"geometry","","",15,null],[12,"fragment","","",15,null],[12,"compute","","",15,null],[3,"DescriptorSet","","An actual descriptor set with the resources that are binded to it.",null,null],[3,"DescriptorSetLayout","","Describes the layout of all descriptors within a descriptor set.",null,null],[3,"PipelineLayout","","A collection of `DescriptorSetLayout` structs.",null,null],[3,"DescriptorPool","","Pool from which descriptor sets are allocated from.",null,null],[4,"DescriptorBind","","",null,null],[13,"UniformBuffer","","",16,null],[4,"DescriptorType","","Describes what kind of resource may later be bind to a descriptor.",null,null],[13,"Sampler","","",17,null],[13,"CombinedImageSampler","","",17,null],[13,"SampledImage","","",17,null],[13,"StorageImage","","",17,null],[13,"UniformTexelBuffer","","",17,null],[13,"StorageTexelBuffer","","",17,null],[13,"UniformBuffer","","",17,null],[13,"StorageBuffer","","",17,null],[13,"UniformBufferDynamic","","",17,null],[13,"StorageBufferDynamic","","",17,null],[13,"InputAttachment","","",17,null],[8,"PipelineLayoutDesc","","Types that describe the layout of a pipeline (descriptor sets and push constants).",null,null],[16,"DescriptorSets","","Represents a collection of `DescriptorSet` structs. A parameter of this type must be\npassed when you add a draw command to a command buffer that uses this layout.",18,null],[16,"DescriptorSetLayouts","","Represents a collection of `DescriptorSetLayout` structs. A parameter of this type must\nbe passed when creating a `PipelineLayout` struct.",18,null],[16,"PushConstants","","Not yet implemented. Useless for now.",18,null],[10,"decode_descriptor_sets","","Turns the `DescriptorSets` associated type into something vulkano can understand.",18,{"inputs":[{"name":"pipelinelayoutdesc"},{"name":"descriptorsets"}],"output":{"name":"vec"}}],[10,"decode_descriptor_set_layouts","","Turns the `DescriptorSetLayouts` associated type into something vulkano can understand.",18,{"inputs":[{"name":"pipelinelayoutdesc"},{"name":"descriptorsetlayouts"}],"output":{"name":"vec"}}],[11,"is_compatible_with","","",18,{"inputs":[{"name":"pipelinelayoutdesc"},{"name":"p"}],"output":{"name":"bool"}}],[8,"DescriptorSetDesc","","Types that describe a single descriptor set.",null,null],[16,"Write","","Represents a modification of a descriptor set. A parameter of this type must be passed\nwhen you modify a descriptor set.",19,null],[16,"Init","","",19,null],[10,"descriptors","","Returns the list of descriptors contained in this set.",19,{"inputs":[{"name":"descriptorsetdesc"}],"output":{"name":"vec"}}],[10,"decode_write","","Turns the `Write` associated type into something vulkano can understand.",19,{"inputs":[{"name":"descriptorsetdesc"},{"name":"write"}],"output":{"name":"vec"}}],[10,"decode_init","","Turns the `Init` associated type into something vulkano can understand.",19,{"inputs":[{"name":"descriptorsetdesc"},{"name":"init"}],"output":{"name":"vec"}}],[11,"is_compatible_with","","",19,{"inputs":[{"name":"descriptorsetdesc"},{"name":"s"}],"output":{"name":"bool"}}],[8,"AbstractDescriptorSet","","Implemented on all `DescriptorSet` objects. Hides the template parameters.",null,null],[8,"AbstractDescriptorSetLayout","","Implemented on all `DescriptorSetLayout` objects. Hides the template parameters.",null,null],[11,"default","","",20,{"inputs":[{"name":"emptypipelinedesc"}],"output":{"name":"emptypipelinedesc"}}],[11,"clone","","",20,{"inputs":[{"name":"emptypipelinedesc"}],"output":{"name":"emptypipelinedesc"}}],[11,"fmt","","",20,{"inputs":[{"name":"emptypipelinedesc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"decode_descriptor_set_layouts","","",20,{"inputs":[{"name":"emptypipelinedesc"},{"name":"descriptorsetlayouts"}],"output":{"name":"vec"}}],[11,"decode_descriptor_sets","","",20,{"inputs":[{"name":"emptypipelinedesc"},{"name":"descriptorsets"}],"output":{"name":"vec"}}],[11,"clone","","",16,{"inputs":[{"name":"descriptorbind"}],"output":{"name":"descriptorbind"}}],[11,"clone","","",17,{"inputs":[{"name":"descriptortype"}],"output":{"name":"descriptortype"}}],[11,"fmt","","",17,{"inputs":[{"name":"descriptortype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"all_graphics","","Creates a `ShaderStages` struct will all graphics stages set to `true`.",15,{"inputs":[{"name":"shaderstages"}],"output":{"name":"shaderstages"}}],[11,"compute","","Creates a `ShaderStages` struct will the compute stage set to `true`.",15,{"inputs":[{"name":"shaderstages"}],"output":{"name":"shaderstages"}}],[11,"new","","",21,{"inputs":[{"name":"descriptorset"},{"name":"arc"},{"name":"arc"},{"name":"init"}],"output":{"name":"result"}}],[11,"uninitialized","","",21,{"inputs":[{"name":"descriptorset"},{"name":"arc"},{"name":"arc"}],"output":{"name":"result"}}],[11,"write","","Modifies a descriptor set.",21,{"inputs":[{"name":"descriptorset"},{"name":"write"}],"output":null}],[11,"unchecked_write","","Modifies a descriptor set without checking that the writes are correct.",21,{"inputs":[{"name":"descriptorset"},{"name":"vec"}],"output":null}],[11,"internal_object","","",21,{"inputs":[{"name":"descriptorset"}],"output":{"name":"descriptorset"}}],[11,"new","","",22,{"inputs":[{"name":"descriptorsetlayout"},{"name":"arc"},{"name":"s"}],"output":{"name":"result"}}],[11,"description","","",22,{"inputs":[{"name":"descriptorsetlayout"}],"output":{"name":"s"}}],[11,"internal_object","","",22,{"inputs":[{"name":"descriptorsetlayout"}],"output":{"name":"descriptorsetlayout"}}],[11,"new","","Creates a new `PipelineLayout`.",23,{"inputs":[{"name":"pipelinelayout"},{"name":"arc"},{"name":"p"},{"name":"descriptorsetlayouts"}],"output":{"name":"result"}}],[11,"description","","",23,{"inputs":[{"name":"pipelinelayout"}],"output":{"name":"p"}}],[11,"internal_object","","",23,{"inputs":[{"name":"pipelinelayout"}],"output":{"name":"pipelinelayout"}}],[11,"new","","",24,{"inputs":[{"name":"descriptorpool"},{"name":"arc"}],"output":{"name":"result"}}],[0,"device","vulkano","Communication channel with a physical device.",null,null],[3,"Device","vulkano::device","Represents a Vulkan context.",null,null],[3,"Queue","","Represents a queue where commands can be submitted.",null,null],[4,"DeviceCreationError","","Error that can be returned when creating a device.",null,null],[13,"OutOfHostMemory","","There is no memory available on the host (ie. the CPU, RAM, etc.).",25,null],[13,"OutOfDeviceMemory","","There is no memory available on the device (ie. video memory).",25,null],[11,"new","","Builds a new Vulkan device for the given physical device.",26,{"inputs":[{"name":"device"},{"name":"physicaldevice"},{"name":"features"},{"name":"i"},{"name":"l"}],"output":{"name":"result"}}],[11,"wait","","Waits until all work on this device has finished. You should never need to call\nthis function, but it can be useful for debugging or benchmarking purposes.",26,{"inputs":[{"name":"device"}],"output":{"name":"result"}}],[11,"physical_device","","Returns the physical device that was used to create this device.",26,{"inputs":[{"name":"device"}],"output":{"name":"physicaldevice"}}],[11,"enabled_features","","Returns the features that are enabled in the device.",26,{"inputs":[{"name":"device"}],"output":{"name":"features"}}],[11,"fmt","","",26,{"inputs":[{"name":"device"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"internal_object","","",26,{"inputs":[{"name":"device"}],"output":{"name":"device"}}],[11,"drop","","",26,{"inputs":[{"name":"device"}],"output":null}],[11,"eq","","",25,{"inputs":[{"name":"devicecreationerror"},{"name":"devicecreationerror"}],"output":{"name":"bool"}}],[11,"ne","","",25,{"inputs":[{"name":"devicecreationerror"},{"name":"devicecreationerror"}],"output":{"name":"bool"}}],[11,"fmt","","",25,{"inputs":[{"name":"devicecreationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",25,{"inputs":[{"name":"devicecreationerror"}],"output":{"name":"devicecreationerror"}}],[11,"description","","",25,{"inputs":[{"name":"devicecreationerror"}],"output":{"name":"str"}}],[11,"fmt","","",25,{"inputs":[{"name":"devicecreationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",25,{"inputs":[{"name":"devicecreationerror"},{"name":"error"}],"output":{"name":"devicecreationerror"}}],[11,"device","","Returns the device this queue belongs to.",27,{"inputs":[{"name":"queue"}],"output":{"name":"arc"}}],[11,"family","","Returns the family this queue belongs to.",27,{"inputs":[{"name":"queue"}],"output":{"name":"queuefamily"}}],[11,"wait","","Waits until all work on this queue has finished.",27,{"inputs":[{"name":"queue"}],"output":{"name":"result"}}],[11,"internal_object","","",27,{"inputs":[{"name":"queue"}],"output":{"name":"queue"}}],[0,"formats","vulkano","Declares all the formats of data and images supported by Vulkan.",null,null],[3,"Undefined","vulkano::formats","",null,null],[3,"R4G4UnormPack8","","",null,null],[3,"R4G4B4A4UnormPack16","","",null,null],[3,"B4G4R4A4UnormPack16","","",null,null],[3,"R5G6B5UnormPack16","","",null,null],[3,"B5G6R5UnormPack16","","",null,null],[3,"R5G5B5A1UnormPack16","","",null,null],[3,"B5G5R5A1UnormPack16","","",null,null],[3,"A1R5G5B5UnormPack16","","",null,null],[3,"R8Unorm","","",null,null],[3,"R8Snorm","","",null,null],[3,"R8Uscaled","","",null,null],[3,"R8Sscaled","","",null,null],[3,"R8Uint","","",null,null],[3,"R8Sint","","",null,null],[3,"R8Srgb","","",null,null],[3,"R8G8Unorm","","",null,null],[3,"R8G8Snorm","","",null,null],[3,"R8G8Uscaled","","",null,null],[3,"R8G8Sscaled","","",null,null],[3,"R8G8Uint","","",null,null],[3,"R8G8Sint","","",null,null],[3,"R8G8Srgb","","",null,null],[3,"R8G8B8Unorm","","",null,null],[3,"R8G8B8Snorm","","",null,null],[3,"R8G8B8Uscaled","","",null,null],[3,"R8G8B8Sscaled","","",null,null],[3,"R8G8B8Uint","","",null,null],[3,"R8G8B8Sint","","",null,null],[3,"R8G8B8Srgb","","",null,null],[3,"B8G8R8Unorm","","",null,null],[3,"B8G8R8Snorm","","",null,null],[3,"B8G8R8Uscaled","","",null,null],[3,"B8G8R8Sscaled","","",null,null],[3,"B8G8R8Uint","","",null,null],[3,"B8G8R8Sint","","",null,null],[3,"B8G8R8Srgb","","",null,null],[3,"R8G8B8A8Unorm","","",null,null],[3,"R8G8B8A8Snorm","","",null,null],[3,"R8G8B8A8Uscaled","","",null,null],[3,"R8G8B8A8Sscaled","","",null,null],[3,"R8G8B8A8Uint","","",null,null],[3,"R8G8B8A8Sint","","",null,null],[3,"R8G8B8A8Srgb","","",null,null],[3,"B8G8R8A8Unorm","","",null,null],[3,"B8G8R8A8Snorm","","",null,null],[3,"B8G8R8A8Uscaled","","",null,null],[3,"B8G8R8A8Sscaled","","",null,null],[3,"B8G8R8A8Uint","","",null,null],[3,"B8G8R8A8Sint","","",null,null],[3,"B8G8R8A8Srgb","","",null,null],[3,"A8B8G8R8UnormPack32","","",null,null],[3,"A8B8G8R8SnormPack32","","",null,null],[3,"A8B8G8R8UscaledPack32","","",null,null],[3,"A8B8G8R8SscaledPack32","","",null,null],[3,"A8B8G8R8UintPack32","","",null,null],[3,"A8B8G8R8SintPack32","","",null,null],[3,"A8B8G8R8SrgbPack32","","",null,null],[3,"A2R10G10B10UnormPack32","","",null,null],[3,"A2R10G10B10SnormPack32","","",null,null],[3,"A2R10G10B10UscaledPack32","","",null,null],[3,"A2R10G10B10SscaledPack32","","",null,null],[3,"A2R10G10B10UintPack32","","",null,null],[3,"A2R10G10B10SintPack32","","",null,null],[3,"A2B10G10R10UnormPack32","","",null,null],[3,"A2B10G10R10SnormPack32","","",null,null],[3,"A2B10G10R10UscaledPack32","","",null,null],[3,"A2B10G10R10SscaledPack32","","",null,null],[3,"A2B10G10R10UintPack32","","",null,null],[3,"A2B10G10R10SintPack32","","",null,null],[3,"R16Unorm","","",null,null],[3,"R16Snorm","","",null,null],[3,"R16Uscaled","","",null,null],[3,"R16Sscaled","","",null,null],[3,"R16Uint","","",null,null],[3,"R16Sint","","",null,null],[3,"R16Sfloat","","",null,null],[3,"R16G16Unorm","","",null,null],[3,"R16G16Snorm","","",null,null],[3,"R16G16Uscaled","","",null,null],[3,"R16G16Sscaled","","",null,null],[3,"R16G16Uint","","",null,null],[3,"R16G16Sint","","",null,null],[3,"R16G16Sfloat","","",null,null],[3,"R16G16B16Unorm","","",null,null],[3,"R16G16B16Snorm","","",null,null],[3,"R16G16B16Uscaled","","",null,null],[3,"R16G16B16Sscaled","","",null,null],[3,"R16G16B16Uint","","",null,null],[3,"R16G16B16Sint","","",null,null],[3,"R16G16B16Sfloat","","",null,null],[3,"R16G16B16A16Unorm","","",null,null],[3,"R16G16B16A16Snorm","","",null,null],[3,"R16G16B16A16Uscaled","","",null,null],[3,"R16G16B16A16Sscaled","","",null,null],[3,"R16G16B16A16Uint","","",null,null],[3,"R16G16B16A16Sint","","",null,null],[3,"R16G16B16A16Sfloat","","",null,null],[3,"R32Uint","","",null,null],[3,"R32Sint","","",null,null],[3,"R32Sfloat","","",null,null],[3,"R32G32Uint","","",null,null],[3,"R32G32Sint","","",null,null],[3,"R32G32Sfloat","","",null,null],[3,"R32G32B32Uint","","",null,null],[3,"R32G32B32Sint","","",null,null],[3,"R32G32B32Sfloat","","",null,null],[3,"R32G32B32A32Uint","","",null,null],[3,"R32G32B32A32Sint","","",null,null],[3,"R32G32B32A32Sfloat","","",null,null],[3,"R64Uint","","",null,null],[3,"R64Sint","","",null,null],[3,"R64Sfloat","","",null,null],[3,"R64G64Uint","","",null,null],[3,"R64G64Sint","","",null,null],[3,"R64G64Sfloat","","",null,null],[3,"R64G64B64Uint","","",null,null],[3,"R64G64B64Sint","","",null,null],[3,"R64G64B64Sfloat","","",null,null],[3,"R64G64B64A64Uint","","",null,null],[3,"R64G64B64A64Sint","","",null,null],[3,"R64G64B64A64Sfloat","","",null,null],[3,"B10G11R11UfloatPack32","","",null,null],[3,"E5B9G9R9UfloatPack32","","",null,null],[3,"D16Unorm","","",null,null],[3,"X8_D24UnormPack32","","",null,null],[3,"D32Sfloat","","",null,null],[3,"S8Uint","","",null,null],[3,"D16Unorm_S8Uint","","",null,null],[3,"D24Unorm_S8Uint","","",null,null],[3,"D32Sfloat_S8Uint","","",null,null],[3,"BC1_RGBUnormBlock","","",null,null],[3,"BC1_RGBSrgbBlock","","",null,null],[3,"BC1_RGBAUnormBlock","","",null,null],[3,"BC1_RGBASrgbBlock","","",null,null],[3,"BC2UnormBlock","","",null,null],[3,"BC2SrgbBlock","","",null,null],[3,"BC3UnormBlock","","",null,null],[3,"BC3SrgbBlock","","",null,null],[3,"BC4UnormBlock","","",null,null],[3,"BC4SnormBlock","","",null,null],[3,"BC5UnormBlock","","",null,null],[3,"BC5SnormBlock","","",null,null],[3,"BC6HUfloatBlock","","",null,null],[3,"BC6HSfloatBlock","","",null,null],[3,"BC7UnormBlock","","",null,null],[3,"BC7SrgbBlock","","",null,null],[3,"ETC2_R8G8B8UnormBlock","","",null,null],[3,"ETC2_R8G8B8SrgbBlock","","",null,null],[3,"ETC2_R8G8B8A1UnormBlock","","",null,null],[3,"ETC2_R8G8B8A1SrgbBlock","","",null,null],[3,"ETC2_R8G8B8A8UnormBlock","","",null,null],[3,"ETC2_R8G8B8A8SrgbBlock","","",null,null],[3,"EAC_R11UnormBlock","","",null,null],[3,"EAC_R11SnormBlock","","",null,null],[3,"EAC_R11G11UnormBlock","","",null,null],[3,"EAC_R11G11SnormBlock","","",null,null],[3,"ASTC_4x4UnormBlock","","",null,null],[3,"ASTC_4x4SrgbBlock","","",null,null],[3,"ASTC_5x4UnormBlock","","",null,null],[3,"ASTC_5x4SrgbBlock","","",null,null],[3,"ASTC_5x5UnormBlock","","",null,null],[3,"ASTC_5x5SrgbBlock","","",null,null],[3,"ASTC_6x5UnormBlock","","",null,null],[3,"ASTC_6x5SrgbBlock","","",null,null],[3,"ASTC_6x6UnormBlock","","",null,null],[3,"ASTC_6x6SrgbBlock","","",null,null],[3,"ASTC_8x5UnormBlock","","",null,null],[3,"ASTC_8x5SrgbBlock","","",null,null],[3,"ASTC_8x6UnormBlock","","",null,null],[3,"ASTC_8x6SrgbBlock","","",null,null],[3,"ASTC_8x8UnormBlock","","",null,null],[3,"ASTC_8x8SrgbBlock","","",null,null],[3,"ASTC_10x5UnormBlock","","",null,null],[3,"ASTC_10x5SrgbBlock","","",null,null],[3,"ASTC_10x6UnormBlock","","",null,null],[3,"ASTC_10x6SrgbBlock","","",null,null],[3,"ASTC_10x8UnormBlock","","",null,null],[3,"ASTC_10x8SrgbBlock","","",null,null],[3,"ASTC_10x10UnormBlock","","",null,null],[3,"ASTC_10x10SrgbBlock","","",null,null],[3,"ASTC_12x10UnormBlock","","",null,null],[3,"ASTC_12x10SrgbBlock","","",null,null],[3,"ASTC_12x12UnormBlock","","",null,null],[3,"ASTC_12x12SrgbBlock","","",null,null],[4,"Format","","An enumeration of all the possible formats.",null,null],[13,"Undefined","","",28,null],[13,"R4G4UnormPack8","","",28,null],[13,"R4G4B4A4UnormPack16","","",28,null],[13,"B4G4R4A4UnormPack16","","",28,null],[13,"R5G6B5UnormPack16","","",28,null],[13,"B5G6R5UnormPack16","","",28,null],[13,"R5G5B5A1UnormPack16","","",28,null],[13,"B5G5R5A1UnormPack16","","",28,null],[13,"A1R5G5B5UnormPack16","","",28,null],[13,"R8Unorm","","",28,null],[13,"R8Snorm","","",28,null],[13,"R8Uscaled","","",28,null],[13,"R8Sscaled","","",28,null],[13,"R8Uint","","",28,null],[13,"R8Sint","","",28,null],[13,"R8Srgb","","",28,null],[13,"R8G8Unorm","","",28,null],[13,"R8G8Snorm","","",28,null],[13,"R8G8Uscaled","","",28,null],[13,"R8G8Sscaled","","",28,null],[13,"R8G8Uint","","",28,null],[13,"R8G8Sint","","",28,null],[13,"R8G8Srgb","","",28,null],[13,"R8G8B8Unorm","","",28,null],[13,"R8G8B8Snorm","","",28,null],[13,"R8G8B8Uscaled","","",28,null],[13,"R8G8B8Sscaled","","",28,null],[13,"R8G8B8Uint","","",28,null],[13,"R8G8B8Sint","","",28,null],[13,"R8G8B8Srgb","","",28,null],[13,"B8G8R8Unorm","","",28,null],[13,"B8G8R8Snorm","","",28,null],[13,"B8G8R8Uscaled","","",28,null],[13,"B8G8R8Sscaled","","",28,null],[13,"B8G8R8Uint","","",28,null],[13,"B8G8R8Sint","","",28,null],[13,"B8G8R8Srgb","","",28,null],[13,"R8G8B8A8Unorm","","",28,null],[13,"R8G8B8A8Snorm","","",28,null],[13,"R8G8B8A8Uscaled","","",28,null],[13,"R8G8B8A8Sscaled","","",28,null],[13,"R8G8B8A8Uint","","",28,null],[13,"R8G8B8A8Sint","","",28,null],[13,"R8G8B8A8Srgb","","",28,null],[13,"B8G8R8A8Unorm","","",28,null],[13,"B8G8R8A8Snorm","","",28,null],[13,"B8G8R8A8Uscaled","","",28,null],[13,"B8G8R8A8Sscaled","","",28,null],[13,"B8G8R8A8Uint","","",28,null],[13,"B8G8R8A8Sint","","",28,null],[13,"B8G8R8A8Srgb","","",28,null],[13,"A8B8G8R8UnormPack32","","",28,null],[13,"A8B8G8R8SnormPack32","","",28,null],[13,"A8B8G8R8UscaledPack32","","",28,null],[13,"A8B8G8R8SscaledPack32","","",28,null],[13,"A8B8G8R8UintPack32","","",28,null],[13,"A8B8G8R8SintPack32","","",28,null],[13,"A8B8G8R8SrgbPack32","","",28,null],[13,"A2R10G10B10UnormPack32","","",28,null],[13,"A2R10G10B10SnormPack32","","",28,null],[13,"A2R10G10B10UscaledPack32","","",28,null],[13,"A2R10G10B10SscaledPack32","","",28,null],[13,"A2R10G10B10UintPack32","","",28,null],[13,"A2R10G10B10SintPack32","","",28,null],[13,"A2B10G10R10UnormPack32","","",28,null],[13,"A2B10G10R10SnormPack32","","",28,null],[13,"A2B10G10R10UscaledPack32","","",28,null],[13,"A2B10G10R10SscaledPack32","","",28,null],[13,"A2B10G10R10UintPack32","","",28,null],[13,"A2B10G10R10SintPack32","","",28,null],[13,"R16Unorm","","",28,null],[13,"R16Snorm","","",28,null],[13,"R16Uscaled","","",28,null],[13,"R16Sscaled","","",28,null],[13,"R16Uint","","",28,null],[13,"R16Sint","","",28,null],[13,"R16Sfloat","","",28,null],[13,"R16G16Unorm","","",28,null],[13,"R16G16Snorm","","",28,null],[13,"R16G16Uscaled","","",28,null],[13,"R16G16Sscaled","","",28,null],[13,"R16G16Uint","","",28,null],[13,"R16G16Sint","","",28,null],[13,"R16G16Sfloat","","",28,null],[13,"R16G16B16Unorm","","",28,null],[13,"R16G16B16Snorm","","",28,null],[13,"R16G16B16Uscaled","","",28,null],[13,"R16G16B16Sscaled","","",28,null],[13,"R16G16B16Uint","","",28,null],[13,"R16G16B16Sint","","",28,null],[13,"R16G16B16Sfloat","","",28,null],[13,"R16G16B16A16Unorm","","",28,null],[13,"R16G16B16A16Snorm","","",28,null],[13,"R16G16B16A16Uscaled","","",28,null],[13,"R16G16B16A16Sscaled","","",28,null],[13,"R16G16B16A16Uint","","",28,null],[13,"R16G16B16A16Sint","","",28,null],[13,"R16G16B16A16Sfloat","","",28,null],[13,"R32Uint","","",28,null],[13,"R32Sint","","",28,null],[13,"R32Sfloat","","",28,null],[13,"R32G32Uint","","",28,null],[13,"R32G32Sint","","",28,null],[13,"R32G32Sfloat","","",28,null],[13,"R32G32B32Uint","","",28,null],[13,"R32G32B32Sint","","",28,null],[13,"R32G32B32Sfloat","","",28,null],[13,"R32G32B32A32Uint","","",28,null],[13,"R32G32B32A32Sint","","",28,null],[13,"R32G32B32A32Sfloat","","",28,null],[13,"R64Uint","","",28,null],[13,"R64Sint","","",28,null],[13,"R64Sfloat","","",28,null],[13,"R64G64Uint","","",28,null],[13,"R64G64Sint","","",28,null],[13,"R64G64Sfloat","","",28,null],[13,"R64G64B64Uint","","",28,null],[13,"R64G64B64Sint","","",28,null],[13,"R64G64B64Sfloat","","",28,null],[13,"R64G64B64A64Uint","","",28,null],[13,"R64G64B64A64Sint","","",28,null],[13,"R64G64B64A64Sfloat","","",28,null],[13,"B10G11R11UfloatPack32","","",28,null],[13,"E5B9G9R9UfloatPack32","","",28,null],[13,"D16Unorm","","",28,null],[13,"X8_D24UnormPack32","","",28,null],[13,"D32Sfloat","","",28,null],[13,"S8Uint","","",28,null],[13,"D16Unorm_S8Uint","","",28,null],[13,"D24Unorm_S8Uint","","",28,null],[13,"D32Sfloat_S8Uint","","",28,null],[13,"BC1_RGBUnormBlock","","",28,null],[13,"BC1_RGBSrgbBlock","","",28,null],[13,"BC1_RGBAUnormBlock","","",28,null],[13,"BC1_RGBASrgbBlock","","",28,null],[13,"BC2UnormBlock","","",28,null],[13,"BC2SrgbBlock","","",28,null],[13,"BC3UnormBlock","","",28,null],[13,"BC3SrgbBlock","","",28,null],[13,"BC4UnormBlock","","",28,null],[13,"BC4SnormBlock","","",28,null],[13,"BC5UnormBlock","","",28,null],[13,"BC5SnormBlock","","",28,null],[13,"BC6HUfloatBlock","","",28,null],[13,"BC6HSfloatBlock","","",28,null],[13,"BC7UnormBlock","","",28,null],[13,"BC7SrgbBlock","","",28,null],[13,"ETC2_R8G8B8UnormBlock","","",28,null],[13,"ETC2_R8G8B8SrgbBlock","","",28,null],[13,"ETC2_R8G8B8A1UnormBlock","","",28,null],[13,"ETC2_R8G8B8A1SrgbBlock","","",28,null],[13,"ETC2_R8G8B8A8UnormBlock","","",28,null],[13,"ETC2_R8G8B8A8SrgbBlock","","",28,null],[13,"EAC_R11UnormBlock","","",28,null],[13,"EAC_R11SnormBlock","","",28,null],[13,"EAC_R11G11UnormBlock","","",28,null],[13,"EAC_R11G11SnormBlock","","",28,null],[13,"ASTC_4x4UnormBlock","","",28,null],[13,"ASTC_4x4SrgbBlock","","",28,null],[13,"ASTC_5x4UnormBlock","","",28,null],[13,"ASTC_5x4SrgbBlock","","",28,null],[13,"ASTC_5x5UnormBlock","","",28,null],[13,"ASTC_5x5SrgbBlock","","",28,null],[13,"ASTC_6x5UnormBlock","","",28,null],[13,"ASTC_6x5SrgbBlock","","",28,null],[13,"ASTC_6x6UnormBlock","","",28,null],[13,"ASTC_6x6SrgbBlock","","",28,null],[13,"ASTC_8x5UnormBlock","","",28,null],[13,"ASTC_8x5SrgbBlock","","",28,null],[13,"ASTC_8x6UnormBlock","","",28,null],[13,"ASTC_8x6SrgbBlock","","",28,null],[13,"ASTC_8x8UnormBlock","","",28,null],[13,"ASTC_8x8SrgbBlock","","",28,null],[13,"ASTC_10x5UnormBlock","","",28,null],[13,"ASTC_10x5SrgbBlock","","",28,null],[13,"ASTC_10x6UnormBlock","","",28,null],[13,"ASTC_10x6SrgbBlock","","",28,null],[13,"ASTC_10x8UnormBlock","","",28,null],[13,"ASTC_10x8SrgbBlock","","",28,null],[13,"ASTC_10x10UnormBlock","","",28,null],[13,"ASTC_10x10SrgbBlock","","",28,null],[13,"ASTC_12x10UnormBlock","","",28,null],[13,"ASTC_12x10SrgbBlock","","",28,null],[13,"ASTC_12x12UnormBlock","","",28,null],[13,"ASTC_12x12SrgbBlock","","",28,null],[4,"FormatTy","","",null,null],[13,"Float","","",29,null],[13,"Uint","","",29,null],[13,"Sint","","",29,null],[13,"Depth","","",29,null],[13,"Stencil","","",29,null],[13,"DepthStencil","","",29,null],[13,"Compressed","","",29,null],[8,"Data","","Some data whose type must be known by the library.",null,null],[10,"ty","","Returns the type of the data from an enum.",30,{"inputs":[{"name":"data"}],"output":{"name":"format"}}],[8,"FormatMarker","","",null,null],[10,"format","","",31,{"inputs":[{"name":"formatmarker"}],"output":{"name":"format"}}],[8,"FloatFormatMarker","","",null,null],[8,"UintFormatMarker","","",null,null],[8,"SintFormatMarker","","",null,null],[8,"DepthFormatMarker","","",null,null],[8,"StencilFormatMarker","","",null,null],[8,"DepthStencilFormatMarker","","",null,null],[8,"CompressedFormatMarker","","",null,null],[11,"eq","","",28,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"bool"}}],[11,"ne","","",28,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"bool"}}],[11,"fmt","","",28,{"inputs":[{"name":"format"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",28,{"inputs":[{"name":"format"}],"output":{"name":"format"}}],[11,"ty","","",28,{"inputs":[{"name":"format"}],"output":{"name":"formatty"}}],[11,"clone","","",32,{"inputs":[{"name":"undefined"}],"output":{"name":"undefined"}}],[11,"fmt","","",32,{"inputs":[{"name":"undefined"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",32,{"inputs":[{"name":"undefined"}],"output":{"name":"format"}}],[11,"clone","","",33,{"inputs":[{"name":"r4g4unormpack8"}],"output":{"name":"r4g4unormpack8"}}],[11,"fmt","","",33,{"inputs":[{"name":"r4g4unormpack8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",33,{"inputs":[{"name":"r4g4unormpack8"}],"output":{"name":"format"}}],[11,"clone","","",34,{"inputs":[{"name":"r4g4b4a4unormpack16"}],"output":{"name":"r4g4b4a4unormpack16"}}],[11,"fmt","","",34,{"inputs":[{"name":"r4g4b4a4unormpack16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",34,{"inputs":[{"name":"r4g4b4a4unormpack16"}],"output":{"name":"format"}}],[11,"clone","","",35,{"inputs":[{"name":"b4g4r4a4unormpack16"}],"output":{"name":"b4g4r4a4unormpack16"}}],[11,"fmt","","",35,{"inputs":[{"name":"b4g4r4a4unormpack16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",35,{"inputs":[{"name":"b4g4r4a4unormpack16"}],"output":{"name":"format"}}],[11,"clone","","",36,{"inputs":[{"name":"r5g6b5unormpack16"}],"output":{"name":"r5g6b5unormpack16"}}],[11,"fmt","","",36,{"inputs":[{"name":"r5g6b5unormpack16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",36,{"inputs":[{"name":"r5g6b5unormpack16"}],"output":{"name":"format"}}],[11,"clone","","",37,{"inputs":[{"name":"b5g6r5unormpack16"}],"output":{"name":"b5g6r5unormpack16"}}],[11,"fmt","","",37,{"inputs":[{"name":"b5g6r5unormpack16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",37,{"inputs":[{"name":"b5g6r5unormpack16"}],"output":{"name":"format"}}],[11,"clone","","",38,{"inputs":[{"name":"r5g5b5a1unormpack16"}],"output":{"name":"r5g5b5a1unormpack16"}}],[11,"fmt","","",38,{"inputs":[{"name":"r5g5b5a1unormpack16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",38,{"inputs":[{"name":"r5g5b5a1unormpack16"}],"output":{"name":"format"}}],[11,"clone","","",39,{"inputs":[{"name":"b5g5r5a1unormpack16"}],"output":{"name":"b5g5r5a1unormpack16"}}],[11,"fmt","","",39,{"inputs":[{"name":"b5g5r5a1unormpack16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",39,{"inputs":[{"name":"b5g5r5a1unormpack16"}],"output":{"name":"format"}}],[11,"clone","","",40,{"inputs":[{"name":"a1r5g5b5unormpack16"}],"output":{"name":"a1r5g5b5unormpack16"}}],[11,"fmt","","",40,{"inputs":[{"name":"a1r5g5b5unormpack16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",40,{"inputs":[{"name":"a1r5g5b5unormpack16"}],"output":{"name":"format"}}],[11,"clone","","",41,{"inputs":[{"name":"r8unorm"}],"output":{"name":"r8unorm"}}],[11,"fmt","","",41,{"inputs":[{"name":"r8unorm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",41,{"inputs":[{"name":"r8unorm"}],"output":{"name":"format"}}],[11,"clone","","",42,{"inputs":[{"name":"r8snorm"}],"output":{"name":"r8snorm"}}],[11,"fmt","","",42,{"inputs":[{"name":"r8snorm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",42,{"inputs":[{"name":"r8snorm"}],"output":{"name":"format"}}],[11,"clone","","",43,{"inputs":[{"name":"r8uscaled"}],"output":{"name":"r8uscaled"}}],[11,"fmt","","",43,{"inputs":[{"name":"r8uscaled"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",43,{"inputs":[{"name":"r8uscaled"}],"output":{"name":"format"}}],[11,"clone","","",44,{"inputs":[{"name":"r8sscaled"}],"output":{"name":"r8sscaled"}}],[11,"fmt","","",44,{"inputs":[{"name":"r8sscaled"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",44,{"inputs":[{"name":"r8sscaled"}],"output":{"name":"format"}}],[11,"clone","","",45,{"inputs":[{"name":"r8uint"}],"output":{"name":"r8uint"}}],[11,"fmt","","",45,{"inputs":[{"name":"r8uint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",45,{"inputs":[{"name":"r8uint"}],"output":{"name":"format"}}],[11,"clone","","",46,{"inputs":[{"name":"r8sint"}],"output":{"name":"r8sint"}}],[11,"fmt","","",46,{"inputs":[{"name":"r8sint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",46,{"inputs":[{"name":"r8sint"}],"output":{"name":"format"}}],[11,"clone","","",47,{"inputs":[{"name":"r8srgb"}],"output":{"name":"r8srgb"}}],[11,"fmt","","",47,{"inputs":[{"name":"r8srgb"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",47,{"inputs":[{"name":"r8srgb"}],"output":{"name":"format"}}],[11,"clone","","",48,{"inputs":[{"name":"r8g8unorm"}],"output":{"name":"r8g8unorm"}}],[11,"fmt","","",48,{"inputs":[{"name":"r8g8unorm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",48,{"inputs":[{"name":"r8g8unorm"}],"output":{"name":"format"}}],[11,"clone","","",49,{"inputs":[{"name":"r8g8snorm"}],"output":{"name":"r8g8snorm"}}],[11,"fmt","","",49,{"inputs":[{"name":"r8g8snorm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",49,{"inputs":[{"name":"r8g8snorm"}],"output":{"name":"format"}}],[11,"clone","","",50,{"inputs":[{"name":"r8g8uscaled"}],"output":{"name":"r8g8uscaled"}}],[11,"fmt","","",50,{"inputs":[{"name":"r8g8uscaled"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",50,{"inputs":[{"name":"r8g8uscaled"}],"output":{"name":"format"}}],[11,"clone","","",51,{"inputs":[{"name":"r8g8sscaled"}],"output":{"name":"r8g8sscaled"}}],[11,"fmt","","",51,{"inputs":[{"name":"r8g8sscaled"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",51,{"inputs":[{"name":"r8g8sscaled"}],"output":{"name":"format"}}],[11,"clone","","",52,{"inputs":[{"name":"r8g8uint"}],"output":{"name":"r8g8uint"}}],[11,"fmt","","",52,{"inputs":[{"name":"r8g8uint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",52,{"inputs":[{"name":"r8g8uint"}],"output":{"name":"format"}}],[11,"clone","","",53,{"inputs":[{"name":"r8g8sint"}],"output":{"name":"r8g8sint"}}],[11,"fmt","","",53,{"inputs":[{"name":"r8g8sint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",53,{"inputs":[{"name":"r8g8sint"}],"output":{"name":"format"}}],[11,"clone","","",54,{"inputs":[{"name":"r8g8srgb"}],"output":{"name":"r8g8srgb"}}],[11,"fmt","","",54,{"inputs":[{"name":"r8g8srgb"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",54,{"inputs":[{"name":"r8g8srgb"}],"output":{"name":"format"}}],[11,"clone","","",55,{"inputs":[{"name":"r8g8b8unorm"}],"output":{"name":"r8g8b8unorm"}}],[11,"fmt","","",55,{"inputs":[{"name":"r8g8b8unorm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",55,{"inputs":[{"name":"r8g8b8unorm"}],"output":{"name":"format"}}],[11,"clone","","",56,{"inputs":[{"name":"r8g8b8snorm"}],"output":{"name":"r8g8b8snorm"}}],[11,"fmt","","",56,{"inputs":[{"name":"r8g8b8snorm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",56,{"inputs":[{"name":"r8g8b8snorm"}],"output":{"name":"format"}}],[11,"clone","","",57,{"inputs":[{"name":"r8g8b8uscaled"}],"output":{"name":"r8g8b8uscaled"}}],[11,"fmt","","",57,{"inputs":[{"name":"r8g8b8uscaled"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",57,{"inputs":[{"name":"r8g8b8uscaled"}],"output":{"name":"format"}}],[11,"clone","","",58,{"inputs":[{"name":"r8g8b8sscaled"}],"output":{"name":"r8g8b8sscaled"}}],[11,"fmt","","",58,{"inputs":[{"name":"r8g8b8sscaled"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",58,{"inputs":[{"name":"r8g8b8sscaled"}],"output":{"name":"format"}}],[11,"clone","","",59,{"inputs":[{"name":"r8g8b8uint"}],"output":{"name":"r8g8b8uint"}}],[11,"fmt","","",59,{"inputs":[{"name":"r8g8b8uint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",59,{"inputs":[{"name":"r8g8b8uint"}],"output":{"name":"format"}}],[11,"clone","","",60,{"inputs":[{"name":"r8g8b8sint"}],"output":{"name":"r8g8b8sint"}}],[11,"fmt","","",60,{"inputs":[{"name":"r8g8b8sint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",60,{"inputs":[{"name":"r8g8b8sint"}],"output":{"name":"format"}}],[11,"clone","","",61,{"inputs":[{"name":"r8g8b8srgb"}],"output":{"name":"r8g8b8srgb"}}],[11,"fmt","","",61,{"inputs":[{"name":"r8g8b8srgb"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",61,{"inputs":[{"name":"r8g8b8srgb"}],"output":{"name":"format"}}],[11,"clone","","",62,{"inputs":[{"name":"b8g8r8unorm"}],"output":{"name":"b8g8r8unorm"}}],[11,"fmt","","",62,{"inputs":[{"name":"b8g8r8unorm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",62,{"inputs":[{"name":"b8g8r8unorm"}],"output":{"name":"format"}}],[11,"clone","","",63,{"inputs":[{"name":"b8g8r8snorm"}],"output":{"name":"b8g8r8snorm"}}],[11,"fmt","","",63,{"inputs":[{"name":"b8g8r8snorm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",63,{"inputs":[{"name":"b8g8r8snorm"}],"output":{"name":"format"}}],[11,"clone","","",64,{"inputs":[{"name":"b8g8r8uscaled"}],"output":{"name":"b8g8r8uscaled"}}],[11,"fmt","","",64,{"inputs":[{"name":"b8g8r8uscaled"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",64,{"inputs":[{"name":"b8g8r8uscaled"}],"output":{"name":"format"}}],[11,"clone","","",65,{"inputs":[{"name":"b8g8r8sscaled"}],"output":{"name":"b8g8r8sscaled"}}],[11,"fmt","","",65,{"inputs":[{"name":"b8g8r8sscaled"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",65,{"inputs":[{"name":"b8g8r8sscaled"}],"output":{"name":"format"}}],[11,"clone","","",66,{"inputs":[{"name":"b8g8r8uint"}],"output":{"name":"b8g8r8uint"}}],[11,"fmt","","",66,{"inputs":[{"name":"b8g8r8uint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",66,{"inputs":[{"name":"b8g8r8uint"}],"output":{"name":"format"}}],[11,"clone","","",67,{"inputs":[{"name":"b8g8r8sint"}],"output":{"name":"b8g8r8sint"}}],[11,"fmt","","",67,{"inputs":[{"name":"b8g8r8sint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",67,{"inputs":[{"name":"b8g8r8sint"}],"output":{"name":"format"}}],[11,"clone","","",68,{"inputs":[{"name":"b8g8r8srgb"}],"output":{"name":"b8g8r8srgb"}}],[11,"fmt","","",68,{"inputs":[{"name":"b8g8r8srgb"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",68,{"inputs":[{"name":"b8g8r8srgb"}],"output":{"name":"format"}}],[11,"clone","","",69,{"inputs":[{"name":"r8g8b8a8unorm"}],"output":{"name":"r8g8b8a8unorm"}}],[11,"fmt","","",69,{"inputs":[{"name":"r8g8b8a8unorm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",69,{"inputs":[{"name":"r8g8b8a8unorm"}],"output":{"name":"format"}}],[11,"clone","","",70,{"inputs":[{"name":"r8g8b8a8snorm"}],"output":{"name":"r8g8b8a8snorm"}}],[11,"fmt","","",70,{"inputs":[{"name":"r8g8b8a8snorm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",70,{"inputs":[{"name":"r8g8b8a8snorm"}],"output":{"name":"format"}}],[11,"clone","","",71,{"inputs":[{"name":"r8g8b8a8uscaled"}],"output":{"name":"r8g8b8a8uscaled"}}],[11,"fmt","","",71,{"inputs":[{"name":"r8g8b8a8uscaled"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",71,{"inputs":[{"name":"r8g8b8a8uscaled"}],"output":{"name":"format"}}],[11,"clone","","",72,{"inputs":[{"name":"r8g8b8a8sscaled"}],"output":{"name":"r8g8b8a8sscaled"}}],[11,"fmt","","",72,{"inputs":[{"name":"r8g8b8a8sscaled"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",72,{"inputs":[{"name":"r8g8b8a8sscaled"}],"output":{"name":"format"}}],[11,"clone","","",73,{"inputs":[{"name":"r8g8b8a8uint"}],"output":{"name":"r8g8b8a8uint"}}],[11,"fmt","","",73,{"inputs":[{"name":"r8g8b8a8uint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",73,{"inputs":[{"name":"r8g8b8a8uint"}],"output":{"name":"format"}}],[11,"clone","","",74,{"inputs":[{"name":"r8g8b8a8sint"}],"output":{"name":"r8g8b8a8sint"}}],[11,"fmt","","",74,{"inputs":[{"name":"r8g8b8a8sint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",74,{"inputs":[{"name":"r8g8b8a8sint"}],"output":{"name":"format"}}],[11,"clone","","",75,{"inputs":[{"name":"r8g8b8a8srgb"}],"output":{"name":"r8g8b8a8srgb"}}],[11,"fmt","","",75,{"inputs":[{"name":"r8g8b8a8srgb"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",75,{"inputs":[{"name":"r8g8b8a8srgb"}],"output":{"name":"format"}}],[11,"clone","","",76,{"inputs":[{"name":"b8g8r8a8unorm"}],"output":{"name":"b8g8r8a8unorm"}}],[11,"fmt","","",76,{"inputs":[{"name":"b8g8r8a8unorm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",76,{"inputs":[{"name":"b8g8r8a8unorm"}],"output":{"name":"format"}}],[11,"clone","","",77,{"inputs":[{"name":"b8g8r8a8snorm"}],"output":{"name":"b8g8r8a8snorm"}}],[11,"fmt","","",77,{"inputs":[{"name":"b8g8r8a8snorm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",77,{"inputs":[{"name":"b8g8r8a8snorm"}],"output":{"name":"format"}}],[11,"clone","","",78,{"inputs":[{"name":"b8g8r8a8uscaled"}],"output":{"name":"b8g8r8a8uscaled"}}],[11,"fmt","","",78,{"inputs":[{"name":"b8g8r8a8uscaled"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",78,{"inputs":[{"name":"b8g8r8a8uscaled"}],"output":{"name":"format"}}],[11,"clone","","",79,{"inputs":[{"name":"b8g8r8a8sscaled"}],"output":{"name":"b8g8r8a8sscaled"}}],[11,"fmt","","",79,{"inputs":[{"name":"b8g8r8a8sscaled"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",79,{"inputs":[{"name":"b8g8r8a8sscaled"}],"output":{"name":"format"}}],[11,"clone","","",80,{"inputs":[{"name":"b8g8r8a8uint"}],"output":{"name":"b8g8r8a8uint"}}],[11,"fmt","","",80,{"inputs":[{"name":"b8g8r8a8uint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",80,{"inputs":[{"name":"b8g8r8a8uint"}],"output":{"name":"format"}}],[11,"clone","","",81,{"inputs":[{"name":"b8g8r8a8sint"}],"output":{"name":"b8g8r8a8sint"}}],[11,"fmt","","",81,{"inputs":[{"name":"b8g8r8a8sint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",81,{"inputs":[{"name":"b8g8r8a8sint"}],"output":{"name":"format"}}],[11,"clone","","",82,{"inputs":[{"name":"b8g8r8a8srgb"}],"output":{"name":"b8g8r8a8srgb"}}],[11,"fmt","","",82,{"inputs":[{"name":"b8g8r8a8srgb"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",82,{"inputs":[{"name":"b8g8r8a8srgb"}],"output":{"name":"format"}}],[11,"clone","","",83,{"inputs":[{"name":"a8b8g8r8unormpack32"}],"output":{"name":"a8b8g8r8unormpack32"}}],[11,"fmt","","",83,{"inputs":[{"name":"a8b8g8r8unormpack32"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",83,{"inputs":[{"name":"a8b8g8r8unormpack32"}],"output":{"name":"format"}}],[11,"clone","","",84,{"inputs":[{"name":"a8b8g8r8snormpack32"}],"output":{"name":"a8b8g8r8snormpack32"}}],[11,"fmt","","",84,{"inputs":[{"name":"a8b8g8r8snormpack32"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",84,{"inputs":[{"name":"a8b8g8r8snormpack32"}],"output":{"name":"format"}}],[11,"clone","","",85,{"inputs":[{"name":"a8b8g8r8uscaledpack32"}],"output":{"name":"a8b8g8r8uscaledpack32"}}],[11,"fmt","","",85,{"inputs":[{"name":"a8b8g8r8uscaledpack32"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",85,{"inputs":[{"name":"a8b8g8r8uscaledpack32"}],"output":{"name":"format"}}],[11,"clone","","",86,{"inputs":[{"name":"a8b8g8r8sscaledpack32"}],"output":{"name":"a8b8g8r8sscaledpack32"}}],[11,"fmt","","",86,{"inputs":[{"name":"a8b8g8r8sscaledpack32"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",86,{"inputs":[{"name":"a8b8g8r8sscaledpack32"}],"output":{"name":"format"}}],[11,"clone","","",87,{"inputs":[{"name":"a8b8g8r8uintpack32"}],"output":{"name":"a8b8g8r8uintpack32"}}],[11,"fmt","","",87,{"inputs":[{"name":"a8b8g8r8uintpack32"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",87,{"inputs":[{"name":"a8b8g8r8uintpack32"}],"output":{"name":"format"}}],[11,"clone","","",88,{"inputs":[{"name":"a8b8g8r8sintpack32"}],"output":{"name":"a8b8g8r8sintpack32"}}],[11,"fmt","","",88,{"inputs":[{"name":"a8b8g8r8sintpack32"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",88,{"inputs":[{"name":"a8b8g8r8sintpack32"}],"output":{"name":"format"}}],[11,"clone","","",89,{"inputs":[{"name":"a8b8g8r8srgbpack32"}],"output":{"name":"a8b8g8r8srgbpack32"}}],[11,"fmt","","",89,{"inputs":[{"name":"a8b8g8r8srgbpack32"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",89,{"inputs":[{"name":"a8b8g8r8srgbpack32"}],"output":{"name":"format"}}],[11,"clone","","",90,{"inputs":[{"name":"a2r10g10b10unormpack32"}],"output":{"name":"a2r10g10b10unormpack32"}}],[11,"fmt","","",90,{"inputs":[{"name":"a2r10g10b10unormpack32"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",90,{"inputs":[{"name":"a2r10g10b10unormpack32"}],"output":{"name":"format"}}],[11,"clone","","",91,{"inputs":[{"name":"a2r10g10b10snormpack32"}],"output":{"name":"a2r10g10b10snormpack32"}}],[11,"fmt","","",91,{"inputs":[{"name":"a2r10g10b10snormpack32"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",91,{"inputs":[{"name":"a2r10g10b10snormpack32"}],"output":{"name":"format"}}],[11,"clone","","",92,{"inputs":[{"name":"a2r10g10b10uscaledpack32"}],"output":{"name":"a2r10g10b10uscaledpack32"}}],[11,"fmt","","",92,{"inputs":[{"name":"a2r10g10b10uscaledpack32"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",92,{"inputs":[{"name":"a2r10g10b10uscaledpack32"}],"output":{"name":"format"}}],[11,"clone","","",93,{"inputs":[{"name":"a2r10g10b10sscaledpack32"}],"output":{"name":"a2r10g10b10sscaledpack32"}}],[11,"fmt","","",93,{"inputs":[{"name":"a2r10g10b10sscaledpack32"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",93,{"inputs":[{"name":"a2r10g10b10sscaledpack32"}],"output":{"name":"format"}}],[11,"clone","","",94,{"inputs":[{"name":"a2r10g10b10uintpack32"}],"output":{"name":"a2r10g10b10uintpack32"}}],[11,"fmt","","",94,{"inputs":[{"name":"a2r10g10b10uintpack32"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",94,{"inputs":[{"name":"a2r10g10b10uintpack32"}],"output":{"name":"format"}}],[11,"clone","","",95,{"inputs":[{"name":"a2r10g10b10sintpack32"}],"output":{"name":"a2r10g10b10sintpack32"}}],[11,"fmt","","",95,{"inputs":[{"name":"a2r10g10b10sintpack32"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",95,{"inputs":[{"name":"a2r10g10b10sintpack32"}],"output":{"name":"format"}}],[11,"clone","","",96,{"inputs":[{"name":"a2b10g10r10unormpack32"}],"output":{"name":"a2b10g10r10unormpack32"}}],[11,"fmt","","",96,{"inputs":[{"name":"a2b10g10r10unormpack32"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",96,{"inputs":[{"name":"a2b10g10r10unormpack32"}],"output":{"name":"format"}}],[11,"clone","","",97,{"inputs":[{"name":"a2b10g10r10snormpack32"}],"output":{"name":"a2b10g10r10snormpack32"}}],[11,"fmt","","",97,{"inputs":[{"name":"a2b10g10r10snormpack32"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",97,{"inputs":[{"name":"a2b10g10r10snormpack32"}],"output":{"name":"format"}}],[11,"clone","","",98,{"inputs":[{"name":"a2b10g10r10uscaledpack32"}],"output":{"name":"a2b10g10r10uscaledpack32"}}],[11,"fmt","","",98,{"inputs":[{"name":"a2b10g10r10uscaledpack32"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",98,{"inputs":[{"name":"a2b10g10r10uscaledpack32"}],"output":{"name":"format"}}],[11,"clone","","",99,{"inputs":[{"name":"a2b10g10r10sscaledpack32"}],"output":{"name":"a2b10g10r10sscaledpack32"}}],[11,"fmt","","",99,{"inputs":[{"name":"a2b10g10r10sscaledpack32"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",99,{"inputs":[{"name":"a2b10g10r10sscaledpack32"}],"output":{"name":"format"}}],[11,"clone","","",100,{"inputs":[{"name":"a2b10g10r10uintpack32"}],"output":{"name":"a2b10g10r10uintpack32"}}],[11,"fmt","","",100,{"inputs":[{"name":"a2b10g10r10uintpack32"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",100,{"inputs":[{"name":"a2b10g10r10uintpack32"}],"output":{"name":"format"}}],[11,"clone","","",101,{"inputs":[{"name":"a2b10g10r10sintpack32"}],"output":{"name":"a2b10g10r10sintpack32"}}],[11,"fmt","","",101,{"inputs":[{"name":"a2b10g10r10sintpack32"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",101,{"inputs":[{"name":"a2b10g10r10sintpack32"}],"output":{"name":"format"}}],[11,"clone","","",102,{"inputs":[{"name":"r16unorm"}],"output":{"name":"r16unorm"}}],[11,"fmt","","",102,{"inputs":[{"name":"r16unorm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",102,{"inputs":[{"name":"r16unorm"}],"output":{"name":"format"}}],[11,"clone","","",103,{"inputs":[{"name":"r16snorm"}],"output":{"name":"r16snorm"}}],[11,"fmt","","",103,{"inputs":[{"name":"r16snorm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",103,{"inputs":[{"name":"r16snorm"}],"output":{"name":"format"}}],[11,"clone","","",104,{"inputs":[{"name":"r16uscaled"}],"output":{"name":"r16uscaled"}}],[11,"fmt","","",104,{"inputs":[{"name":"r16uscaled"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",104,{"inputs":[{"name":"r16uscaled"}],"output":{"name":"format"}}],[11,"clone","","",105,{"inputs":[{"name":"r16sscaled"}],"output":{"name":"r16sscaled"}}],[11,"fmt","","",105,{"inputs":[{"name":"r16sscaled"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",105,{"inputs":[{"name":"r16sscaled"}],"output":{"name":"format"}}],[11,"clone","","",106,{"inputs":[{"name":"r16uint"}],"output":{"name":"r16uint"}}],[11,"fmt","","",106,{"inputs":[{"name":"r16uint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",106,{"inputs":[{"name":"r16uint"}],"output":{"name":"format"}}],[11,"clone","","",107,{"inputs":[{"name":"r16sint"}],"output":{"name":"r16sint"}}],[11,"fmt","","",107,{"inputs":[{"name":"r16sint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",107,{"inputs":[{"name":"r16sint"}],"output":{"name":"format"}}],[11,"clone","","",108,{"inputs":[{"name":"r16sfloat"}],"output":{"name":"r16sfloat"}}],[11,"fmt","","",108,{"inputs":[{"name":"r16sfloat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",108,{"inputs":[{"name":"r16sfloat"}],"output":{"name":"format"}}],[11,"clone","","",109,{"inputs":[{"name":"r16g16unorm"}],"output":{"name":"r16g16unorm"}}],[11,"fmt","","",109,{"inputs":[{"name":"r16g16unorm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",109,{"inputs":[{"name":"r16g16unorm"}],"output":{"name":"format"}}],[11,"clone","","",110,{"inputs":[{"name":"r16g16snorm"}],"output":{"name":"r16g16snorm"}}],[11,"fmt","","",110,{"inputs":[{"name":"r16g16snorm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",110,{"inputs":[{"name":"r16g16snorm"}],"output":{"name":"format"}}],[11,"clone","","",111,{"inputs":[{"name":"r16g16uscaled"}],"output":{"name":"r16g16uscaled"}}],[11,"fmt","","",111,{"inputs":[{"name":"r16g16uscaled"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",111,{"inputs":[{"name":"r16g16uscaled"}],"output":{"name":"format"}}],[11,"clone","","",112,{"inputs":[{"name":"r16g16sscaled"}],"output":{"name":"r16g16sscaled"}}],[11,"fmt","","",112,{"inputs":[{"name":"r16g16sscaled"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",112,{"inputs":[{"name":"r16g16sscaled"}],"output":{"name":"format"}}],[11,"clone","","",113,{"inputs":[{"name":"r16g16uint"}],"output":{"name":"r16g16uint"}}],[11,"fmt","","",113,{"inputs":[{"name":"r16g16uint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",113,{"inputs":[{"name":"r16g16uint"}],"output":{"name":"format"}}],[11,"clone","","",114,{"inputs":[{"name":"r16g16sint"}],"output":{"name":"r16g16sint"}}],[11,"fmt","","",114,{"inputs":[{"name":"r16g16sint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",114,{"inputs":[{"name":"r16g16sint"}],"output":{"name":"format"}}],[11,"clone","","",115,{"inputs":[{"name":"r16g16sfloat"}],"output":{"name":"r16g16sfloat"}}],[11,"fmt","","",115,{"inputs":[{"name":"r16g16sfloat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",115,{"inputs":[{"name":"r16g16sfloat"}],"output":{"name":"format"}}],[11,"clone","","",116,{"inputs":[{"name":"r16g16b16unorm"}],"output":{"name":"r16g16b16unorm"}}],[11,"fmt","","",116,{"inputs":[{"name":"r16g16b16unorm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",116,{"inputs":[{"name":"r16g16b16unorm"}],"output":{"name":"format"}}],[11,"clone","","",117,{"inputs":[{"name":"r16g16b16snorm"}],"output":{"name":"r16g16b16snorm"}}],[11,"fmt","","",117,{"inputs":[{"name":"r16g16b16snorm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",117,{"inputs":[{"name":"r16g16b16snorm"}],"output":{"name":"format"}}],[11,"clone","","",118,{"inputs":[{"name":"r16g16b16uscaled"}],"output":{"name":"r16g16b16uscaled"}}],[11,"fmt","","",118,{"inputs":[{"name":"r16g16b16uscaled"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",118,{"inputs":[{"name":"r16g16b16uscaled"}],"output":{"name":"format"}}],[11,"clone","","",119,{"inputs":[{"name":"r16g16b16sscaled"}],"output":{"name":"r16g16b16sscaled"}}],[11,"fmt","","",119,{"inputs":[{"name":"r16g16b16sscaled"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",119,{"inputs":[{"name":"r16g16b16sscaled"}],"output":{"name":"format"}}],[11,"clone","","",120,{"inputs":[{"name":"r16g16b16uint"}],"output":{"name":"r16g16b16uint"}}],[11,"fmt","","",120,{"inputs":[{"name":"r16g16b16uint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",120,{"inputs":[{"name":"r16g16b16uint"}],"output":{"name":"format"}}],[11,"clone","","",121,{"inputs":[{"name":"r16g16b16sint"}],"output":{"name":"r16g16b16sint"}}],[11,"fmt","","",121,{"inputs":[{"name":"r16g16b16sint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",121,{"inputs":[{"name":"r16g16b16sint"}],"output":{"name":"format"}}],[11,"clone","","",122,{"inputs":[{"name":"r16g16b16sfloat"}],"output":{"name":"r16g16b16sfloat"}}],[11,"fmt","","",122,{"inputs":[{"name":"r16g16b16sfloat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",122,{"inputs":[{"name":"r16g16b16sfloat"}],"output":{"name":"format"}}],[11,"clone","","",123,{"inputs":[{"name":"r16g16b16a16unorm"}],"output":{"name":"r16g16b16a16unorm"}}],[11,"fmt","","",123,{"inputs":[{"name":"r16g16b16a16unorm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",123,{"inputs":[{"name":"r16g16b16a16unorm"}],"output":{"name":"format"}}],[11,"clone","","",124,{"inputs":[{"name":"r16g16b16a16snorm"}],"output":{"name":"r16g16b16a16snorm"}}],[11,"fmt","","",124,{"inputs":[{"name":"r16g16b16a16snorm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",124,{"inputs":[{"name":"r16g16b16a16snorm"}],"output":{"name":"format"}}],[11,"clone","","",125,{"inputs":[{"name":"r16g16b16a16uscaled"}],"output":{"name":"r16g16b16a16uscaled"}}],[11,"fmt","","",125,{"inputs":[{"name":"r16g16b16a16uscaled"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",125,{"inputs":[{"name":"r16g16b16a16uscaled"}],"output":{"name":"format"}}],[11,"clone","","",126,{"inputs":[{"name":"r16g16b16a16sscaled"}],"output":{"name":"r16g16b16a16sscaled"}}],[11,"fmt","","",126,{"inputs":[{"name":"r16g16b16a16sscaled"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",126,{"inputs":[{"name":"r16g16b16a16sscaled"}],"output":{"name":"format"}}],[11,"clone","","",127,{"inputs":[{"name":"r16g16b16a16uint"}],"output":{"name":"r16g16b16a16uint"}}],[11,"fmt","","",127,{"inputs":[{"name":"r16g16b16a16uint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",127,{"inputs":[{"name":"r16g16b16a16uint"}],"output":{"name":"format"}}],[11,"clone","","",128,{"inputs":[{"name":"r16g16b16a16sint"}],"output":{"name":"r16g16b16a16sint"}}],[11,"fmt","","",128,{"inputs":[{"name":"r16g16b16a16sint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",128,{"inputs":[{"name":"r16g16b16a16sint"}],"output":{"name":"format"}}],[11,"clone","","",129,{"inputs":[{"name":"r16g16b16a16sfloat"}],"output":{"name":"r16g16b16a16sfloat"}}],[11,"fmt","","",129,{"inputs":[{"name":"r16g16b16a16sfloat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",129,{"inputs":[{"name":"r16g16b16a16sfloat"}],"output":{"name":"format"}}],[11,"clone","","",130,{"inputs":[{"name":"r32uint"}],"output":{"name":"r32uint"}}],[11,"fmt","","",130,{"inputs":[{"name":"r32uint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",130,{"inputs":[{"name":"r32uint"}],"output":{"name":"format"}}],[11,"clone","","",131,{"inputs":[{"name":"r32sint"}],"output":{"name":"r32sint"}}],[11,"fmt","","",131,{"inputs":[{"name":"r32sint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",131,{"inputs":[{"name":"r32sint"}],"output":{"name":"format"}}],[11,"clone","","",132,{"inputs":[{"name":"r32sfloat"}],"output":{"name":"r32sfloat"}}],[11,"fmt","","",132,{"inputs":[{"name":"r32sfloat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",132,{"inputs":[{"name":"r32sfloat"}],"output":{"name":"format"}}],[11,"clone","","",133,{"inputs":[{"name":"r32g32uint"}],"output":{"name":"r32g32uint"}}],[11,"fmt","","",133,{"inputs":[{"name":"r32g32uint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",133,{"inputs":[{"name":"r32g32uint"}],"output":{"name":"format"}}],[11,"clone","","",134,{"inputs":[{"name":"r32g32sint"}],"output":{"name":"r32g32sint"}}],[11,"fmt","","",134,{"inputs":[{"name":"r32g32sint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",134,{"inputs":[{"name":"r32g32sint"}],"output":{"name":"format"}}],[11,"clone","","",135,{"inputs":[{"name":"r32g32sfloat"}],"output":{"name":"r32g32sfloat"}}],[11,"fmt","","",135,{"inputs":[{"name":"r32g32sfloat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",135,{"inputs":[{"name":"r32g32sfloat"}],"output":{"name":"format"}}],[11,"clone","","",136,{"inputs":[{"name":"r32g32b32uint"}],"output":{"name":"r32g32b32uint"}}],[11,"fmt","","",136,{"inputs":[{"name":"r32g32b32uint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",136,{"inputs":[{"name":"r32g32b32uint"}],"output":{"name":"format"}}],[11,"clone","","",137,{"inputs":[{"name":"r32g32b32sint"}],"output":{"name":"r32g32b32sint"}}],[11,"fmt","","",137,{"inputs":[{"name":"r32g32b32sint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",137,{"inputs":[{"name":"r32g32b32sint"}],"output":{"name":"format"}}],[11,"clone","","",138,{"inputs":[{"name":"r32g32b32sfloat"}],"output":{"name":"r32g32b32sfloat"}}],[11,"fmt","","",138,{"inputs":[{"name":"r32g32b32sfloat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",138,{"inputs":[{"name":"r32g32b32sfloat"}],"output":{"name":"format"}}],[11,"clone","","",139,{"inputs":[{"name":"r32g32b32a32uint"}],"output":{"name":"r32g32b32a32uint"}}],[11,"fmt","","",139,{"inputs":[{"name":"r32g32b32a32uint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",139,{"inputs":[{"name":"r32g32b32a32uint"}],"output":{"name":"format"}}],[11,"clone","","",140,{"inputs":[{"name":"r32g32b32a32sint"}],"output":{"name":"r32g32b32a32sint"}}],[11,"fmt","","",140,{"inputs":[{"name":"r32g32b32a32sint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",140,{"inputs":[{"name":"r32g32b32a32sint"}],"output":{"name":"format"}}],[11,"clone","","",141,{"inputs":[{"name":"r32g32b32a32sfloat"}],"output":{"name":"r32g32b32a32sfloat"}}],[11,"fmt","","",141,{"inputs":[{"name":"r32g32b32a32sfloat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",141,{"inputs":[{"name":"r32g32b32a32sfloat"}],"output":{"name":"format"}}],[11,"clone","","",142,{"inputs":[{"name":"r64uint"}],"output":{"name":"r64uint"}}],[11,"fmt","","",142,{"inputs":[{"name":"r64uint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",142,{"inputs":[{"name":"r64uint"}],"output":{"name":"format"}}],[11,"clone","","",143,{"inputs":[{"name":"r64sint"}],"output":{"name":"r64sint"}}],[11,"fmt","","",143,{"inputs":[{"name":"r64sint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",143,{"inputs":[{"name":"r64sint"}],"output":{"name":"format"}}],[11,"clone","","",144,{"inputs":[{"name":"r64sfloat"}],"output":{"name":"r64sfloat"}}],[11,"fmt","","",144,{"inputs":[{"name":"r64sfloat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",144,{"inputs":[{"name":"r64sfloat"}],"output":{"name":"format"}}],[11,"clone","","",145,{"inputs":[{"name":"r64g64uint"}],"output":{"name":"r64g64uint"}}],[11,"fmt","","",145,{"inputs":[{"name":"r64g64uint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",145,{"inputs":[{"name":"r64g64uint"}],"output":{"name":"format"}}],[11,"clone","","",146,{"inputs":[{"name":"r64g64sint"}],"output":{"name":"r64g64sint"}}],[11,"fmt","","",146,{"inputs":[{"name":"r64g64sint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",146,{"inputs":[{"name":"r64g64sint"}],"output":{"name":"format"}}],[11,"clone","","",147,{"inputs":[{"name":"r64g64sfloat"}],"output":{"name":"r64g64sfloat"}}],[11,"fmt","","",147,{"inputs":[{"name":"r64g64sfloat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",147,{"inputs":[{"name":"r64g64sfloat"}],"output":{"name":"format"}}],[11,"clone","","",148,{"inputs":[{"name":"r64g64b64uint"}],"output":{"name":"r64g64b64uint"}}],[11,"fmt","","",148,{"inputs":[{"name":"r64g64b64uint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",148,{"inputs":[{"name":"r64g64b64uint"}],"output":{"name":"format"}}],[11,"clone","","",149,{"inputs":[{"name":"r64g64b64sint"}],"output":{"name":"r64g64b64sint"}}],[11,"fmt","","",149,{"inputs":[{"name":"r64g64b64sint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",149,{"inputs":[{"name":"r64g64b64sint"}],"output":{"name":"format"}}],[11,"clone","","",150,{"inputs":[{"name":"r64g64b64sfloat"}],"output":{"name":"r64g64b64sfloat"}}],[11,"fmt","","",150,{"inputs":[{"name":"r64g64b64sfloat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",150,{"inputs":[{"name":"r64g64b64sfloat"}],"output":{"name":"format"}}],[11,"clone","","",151,{"inputs":[{"name":"r64g64b64a64uint"}],"output":{"name":"r64g64b64a64uint"}}],[11,"fmt","","",151,{"inputs":[{"name":"r64g64b64a64uint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",151,{"inputs":[{"name":"r64g64b64a64uint"}],"output":{"name":"format"}}],[11,"clone","","",152,{"inputs":[{"name":"r64g64b64a64sint"}],"output":{"name":"r64g64b64a64sint"}}],[11,"fmt","","",152,{"inputs":[{"name":"r64g64b64a64sint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",152,{"inputs":[{"name":"r64g64b64a64sint"}],"output":{"name":"format"}}],[11,"clone","","",153,{"inputs":[{"name":"r64g64b64a64sfloat"}],"output":{"name":"r64g64b64a64sfloat"}}],[11,"fmt","","",153,{"inputs":[{"name":"r64g64b64a64sfloat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",153,{"inputs":[{"name":"r64g64b64a64sfloat"}],"output":{"name":"format"}}],[11,"clone","","",154,{"inputs":[{"name":"b10g11r11ufloatpack32"}],"output":{"name":"b10g11r11ufloatpack32"}}],[11,"fmt","","",154,{"inputs":[{"name":"b10g11r11ufloatpack32"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",154,{"inputs":[{"name":"b10g11r11ufloatpack32"}],"output":{"name":"format"}}],[11,"clone","","",155,{"inputs":[{"name":"e5b9g9r9ufloatpack32"}],"output":{"name":"e5b9g9r9ufloatpack32"}}],[11,"fmt","","",155,{"inputs":[{"name":"e5b9g9r9ufloatpack32"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",155,{"inputs":[{"name":"e5b9g9r9ufloatpack32"}],"output":{"name":"format"}}],[11,"clone","","",156,{"inputs":[{"name":"d16unorm"}],"output":{"name":"d16unorm"}}],[11,"fmt","","",156,{"inputs":[{"name":"d16unorm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",156,{"inputs":[{"name":"d16unorm"}],"output":{"name":"format"}}],[11,"clone","","",157,{"inputs":[{"name":"x8_d24unormpack32"}],"output":{"name":"x8_d24unormpack32"}}],[11,"fmt","","",157,{"inputs":[{"name":"x8_d24unormpack32"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",157,{"inputs":[{"name":"x8_d24unormpack32"}],"output":{"name":"format"}}],[11,"clone","","",158,{"inputs":[{"name":"d32sfloat"}],"output":{"name":"d32sfloat"}}],[11,"fmt","","",158,{"inputs":[{"name":"d32sfloat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",158,{"inputs":[{"name":"d32sfloat"}],"output":{"name":"format"}}],[11,"clone","","",159,{"inputs":[{"name":"s8uint"}],"output":{"name":"s8uint"}}],[11,"fmt","","",159,{"inputs":[{"name":"s8uint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",159,{"inputs":[{"name":"s8uint"}],"output":{"name":"format"}}],[11,"clone","","",160,{"inputs":[{"name":"d16unorm_s8uint"}],"output":{"name":"d16unorm_s8uint"}}],[11,"fmt","","",160,{"inputs":[{"name":"d16unorm_s8uint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",160,{"inputs":[{"name":"d16unorm_s8uint"}],"output":{"name":"format"}}],[11,"clone","","",161,{"inputs":[{"name":"d24unorm_s8uint"}],"output":{"name":"d24unorm_s8uint"}}],[11,"fmt","","",161,{"inputs":[{"name":"d24unorm_s8uint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",161,{"inputs":[{"name":"d24unorm_s8uint"}],"output":{"name":"format"}}],[11,"clone","","",162,{"inputs":[{"name":"d32sfloat_s8uint"}],"output":{"name":"d32sfloat_s8uint"}}],[11,"fmt","","",162,{"inputs":[{"name":"d32sfloat_s8uint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",162,{"inputs":[{"name":"d32sfloat_s8uint"}],"output":{"name":"format"}}],[11,"clone","","",163,{"inputs":[{"name":"bc1_rgbunormblock"}],"output":{"name":"bc1_rgbunormblock"}}],[11,"fmt","","",163,{"inputs":[{"name":"bc1_rgbunormblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",163,{"inputs":[{"name":"bc1_rgbunormblock"}],"output":{"name":"format"}}],[11,"clone","","",164,{"inputs":[{"name":"bc1_rgbsrgbblock"}],"output":{"name":"bc1_rgbsrgbblock"}}],[11,"fmt","","",164,{"inputs":[{"name":"bc1_rgbsrgbblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",164,{"inputs":[{"name":"bc1_rgbsrgbblock"}],"output":{"name":"format"}}],[11,"clone","","",165,{"inputs":[{"name":"bc1_rgbaunormblock"}],"output":{"name":"bc1_rgbaunormblock"}}],[11,"fmt","","",165,{"inputs":[{"name":"bc1_rgbaunormblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",165,{"inputs":[{"name":"bc1_rgbaunormblock"}],"output":{"name":"format"}}],[11,"clone","","",166,{"inputs":[{"name":"bc1_rgbasrgbblock"}],"output":{"name":"bc1_rgbasrgbblock"}}],[11,"fmt","","",166,{"inputs":[{"name":"bc1_rgbasrgbblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",166,{"inputs":[{"name":"bc1_rgbasrgbblock"}],"output":{"name":"format"}}],[11,"clone","","",167,{"inputs":[{"name":"bc2unormblock"}],"output":{"name":"bc2unormblock"}}],[11,"fmt","","",167,{"inputs":[{"name":"bc2unormblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",167,{"inputs":[{"name":"bc2unormblock"}],"output":{"name":"format"}}],[11,"clone","","",168,{"inputs":[{"name":"bc2srgbblock"}],"output":{"name":"bc2srgbblock"}}],[11,"fmt","","",168,{"inputs":[{"name":"bc2srgbblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",168,{"inputs":[{"name":"bc2srgbblock"}],"output":{"name":"format"}}],[11,"clone","","",169,{"inputs":[{"name":"bc3unormblock"}],"output":{"name":"bc3unormblock"}}],[11,"fmt","","",169,{"inputs":[{"name":"bc3unormblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",169,{"inputs":[{"name":"bc3unormblock"}],"output":{"name":"format"}}],[11,"clone","","",170,{"inputs":[{"name":"bc3srgbblock"}],"output":{"name":"bc3srgbblock"}}],[11,"fmt","","",170,{"inputs":[{"name":"bc3srgbblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",170,{"inputs":[{"name":"bc3srgbblock"}],"output":{"name":"format"}}],[11,"clone","","",171,{"inputs":[{"name":"bc4unormblock"}],"output":{"name":"bc4unormblock"}}],[11,"fmt","","",171,{"inputs":[{"name":"bc4unormblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",171,{"inputs":[{"name":"bc4unormblock"}],"output":{"name":"format"}}],[11,"clone","","",172,{"inputs":[{"name":"bc4snormblock"}],"output":{"name":"bc4snormblock"}}],[11,"fmt","","",172,{"inputs":[{"name":"bc4snormblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",172,{"inputs":[{"name":"bc4snormblock"}],"output":{"name":"format"}}],[11,"clone","","",173,{"inputs":[{"name":"bc5unormblock"}],"output":{"name":"bc5unormblock"}}],[11,"fmt","","",173,{"inputs":[{"name":"bc5unormblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",173,{"inputs":[{"name":"bc5unormblock"}],"output":{"name":"format"}}],[11,"clone","","",174,{"inputs":[{"name":"bc5snormblock"}],"output":{"name":"bc5snormblock"}}],[11,"fmt","","",174,{"inputs":[{"name":"bc5snormblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",174,{"inputs":[{"name":"bc5snormblock"}],"output":{"name":"format"}}],[11,"clone","","",175,{"inputs":[{"name":"bc6hufloatblock"}],"output":{"name":"bc6hufloatblock"}}],[11,"fmt","","",175,{"inputs":[{"name":"bc6hufloatblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",175,{"inputs":[{"name":"bc6hufloatblock"}],"output":{"name":"format"}}],[11,"clone","","",176,{"inputs":[{"name":"bc6hsfloatblock"}],"output":{"name":"bc6hsfloatblock"}}],[11,"fmt","","",176,{"inputs":[{"name":"bc6hsfloatblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",176,{"inputs":[{"name":"bc6hsfloatblock"}],"output":{"name":"format"}}],[11,"clone","","",177,{"inputs":[{"name":"bc7unormblock"}],"output":{"name":"bc7unormblock"}}],[11,"fmt","","",177,{"inputs":[{"name":"bc7unormblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",177,{"inputs":[{"name":"bc7unormblock"}],"output":{"name":"format"}}],[11,"clone","","",178,{"inputs":[{"name":"bc7srgbblock"}],"output":{"name":"bc7srgbblock"}}],[11,"fmt","","",178,{"inputs":[{"name":"bc7srgbblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",178,{"inputs":[{"name":"bc7srgbblock"}],"output":{"name":"format"}}],[11,"clone","","",179,{"inputs":[{"name":"etc2_r8g8b8unormblock"}],"output":{"name":"etc2_r8g8b8unormblock"}}],[11,"fmt","","",179,{"inputs":[{"name":"etc2_r8g8b8unormblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",179,{"inputs":[{"name":"etc2_r8g8b8unormblock"}],"output":{"name":"format"}}],[11,"clone","","",180,{"inputs":[{"name":"etc2_r8g8b8srgbblock"}],"output":{"name":"etc2_r8g8b8srgbblock"}}],[11,"fmt","","",180,{"inputs":[{"name":"etc2_r8g8b8srgbblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",180,{"inputs":[{"name":"etc2_r8g8b8srgbblock"}],"output":{"name":"format"}}],[11,"clone","","",181,{"inputs":[{"name":"etc2_r8g8b8a1unormblock"}],"output":{"name":"etc2_r8g8b8a1unormblock"}}],[11,"fmt","","",181,{"inputs":[{"name":"etc2_r8g8b8a1unormblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",181,{"inputs":[{"name":"etc2_r8g8b8a1unormblock"}],"output":{"name":"format"}}],[11,"clone","","",182,{"inputs":[{"name":"etc2_r8g8b8a1srgbblock"}],"output":{"name":"etc2_r8g8b8a1srgbblock"}}],[11,"fmt","","",182,{"inputs":[{"name":"etc2_r8g8b8a1srgbblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",182,{"inputs":[{"name":"etc2_r8g8b8a1srgbblock"}],"output":{"name":"format"}}],[11,"clone","","",183,{"inputs":[{"name":"etc2_r8g8b8a8unormblock"}],"output":{"name":"etc2_r8g8b8a8unormblock"}}],[11,"fmt","","",183,{"inputs":[{"name":"etc2_r8g8b8a8unormblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",183,{"inputs":[{"name":"etc2_r8g8b8a8unormblock"}],"output":{"name":"format"}}],[11,"clone","","",184,{"inputs":[{"name":"etc2_r8g8b8a8srgbblock"}],"output":{"name":"etc2_r8g8b8a8srgbblock"}}],[11,"fmt","","",184,{"inputs":[{"name":"etc2_r8g8b8a8srgbblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",184,{"inputs":[{"name":"etc2_r8g8b8a8srgbblock"}],"output":{"name":"format"}}],[11,"clone","","",185,{"inputs":[{"name":"eac_r11unormblock"}],"output":{"name":"eac_r11unormblock"}}],[11,"fmt","","",185,{"inputs":[{"name":"eac_r11unormblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",185,{"inputs":[{"name":"eac_r11unormblock"}],"output":{"name":"format"}}],[11,"clone","","",186,{"inputs":[{"name":"eac_r11snormblock"}],"output":{"name":"eac_r11snormblock"}}],[11,"fmt","","",186,{"inputs":[{"name":"eac_r11snormblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",186,{"inputs":[{"name":"eac_r11snormblock"}],"output":{"name":"format"}}],[11,"clone","","",187,{"inputs":[{"name":"eac_r11g11unormblock"}],"output":{"name":"eac_r11g11unormblock"}}],[11,"fmt","","",187,{"inputs":[{"name":"eac_r11g11unormblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",187,{"inputs":[{"name":"eac_r11g11unormblock"}],"output":{"name":"format"}}],[11,"clone","","",188,{"inputs":[{"name":"eac_r11g11snormblock"}],"output":{"name":"eac_r11g11snormblock"}}],[11,"fmt","","",188,{"inputs":[{"name":"eac_r11g11snormblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",188,{"inputs":[{"name":"eac_r11g11snormblock"}],"output":{"name":"format"}}],[11,"clone","","",189,{"inputs":[{"name":"astc_4x4unormblock"}],"output":{"name":"astc_4x4unormblock"}}],[11,"fmt","","",189,{"inputs":[{"name":"astc_4x4unormblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",189,{"inputs":[{"name":"astc_4x4unormblock"}],"output":{"name":"format"}}],[11,"clone","","",190,{"inputs":[{"name":"astc_4x4srgbblock"}],"output":{"name":"astc_4x4srgbblock"}}],[11,"fmt","","",190,{"inputs":[{"name":"astc_4x4srgbblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",190,{"inputs":[{"name":"astc_4x4srgbblock"}],"output":{"name":"format"}}],[11,"clone","","",191,{"inputs":[{"name":"astc_5x4unormblock"}],"output":{"name":"astc_5x4unormblock"}}],[11,"fmt","","",191,{"inputs":[{"name":"astc_5x4unormblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",191,{"inputs":[{"name":"astc_5x4unormblock"}],"output":{"name":"format"}}],[11,"clone","","",192,{"inputs":[{"name":"astc_5x4srgbblock"}],"output":{"name":"astc_5x4srgbblock"}}],[11,"fmt","","",192,{"inputs":[{"name":"astc_5x4srgbblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",192,{"inputs":[{"name":"astc_5x4srgbblock"}],"output":{"name":"format"}}],[11,"clone","","",193,{"inputs":[{"name":"astc_5x5unormblock"}],"output":{"name":"astc_5x5unormblock"}}],[11,"fmt","","",193,{"inputs":[{"name":"astc_5x5unormblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",193,{"inputs":[{"name":"astc_5x5unormblock"}],"output":{"name":"format"}}],[11,"clone","","",194,{"inputs":[{"name":"astc_5x5srgbblock"}],"output":{"name":"astc_5x5srgbblock"}}],[11,"fmt","","",194,{"inputs":[{"name":"astc_5x5srgbblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",194,{"inputs":[{"name":"astc_5x5srgbblock"}],"output":{"name":"format"}}],[11,"clone","","",195,{"inputs":[{"name":"astc_6x5unormblock"}],"output":{"name":"astc_6x5unormblock"}}],[11,"fmt","","",195,{"inputs":[{"name":"astc_6x5unormblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",195,{"inputs":[{"name":"astc_6x5unormblock"}],"output":{"name":"format"}}],[11,"clone","","",196,{"inputs":[{"name":"astc_6x5srgbblock"}],"output":{"name":"astc_6x5srgbblock"}}],[11,"fmt","","",196,{"inputs":[{"name":"astc_6x5srgbblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",196,{"inputs":[{"name":"astc_6x5srgbblock"}],"output":{"name":"format"}}],[11,"clone","","",197,{"inputs":[{"name":"astc_6x6unormblock"}],"output":{"name":"astc_6x6unormblock"}}],[11,"fmt","","",197,{"inputs":[{"name":"astc_6x6unormblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",197,{"inputs":[{"name":"astc_6x6unormblock"}],"output":{"name":"format"}}],[11,"clone","","",198,{"inputs":[{"name":"astc_6x6srgbblock"}],"output":{"name":"astc_6x6srgbblock"}}],[11,"fmt","","",198,{"inputs":[{"name":"astc_6x6srgbblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",198,{"inputs":[{"name":"astc_6x6srgbblock"}],"output":{"name":"format"}}],[11,"clone","","",199,{"inputs":[{"name":"astc_8x5unormblock"}],"output":{"name":"astc_8x5unormblock"}}],[11,"fmt","","",199,{"inputs":[{"name":"astc_8x5unormblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",199,{"inputs":[{"name":"astc_8x5unormblock"}],"output":{"name":"format"}}],[11,"clone","","",200,{"inputs":[{"name":"astc_8x5srgbblock"}],"output":{"name":"astc_8x5srgbblock"}}],[11,"fmt","","",200,{"inputs":[{"name":"astc_8x5srgbblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",200,{"inputs":[{"name":"astc_8x5srgbblock"}],"output":{"name":"format"}}],[11,"clone","","",201,{"inputs":[{"name":"astc_8x6unormblock"}],"output":{"name":"astc_8x6unormblock"}}],[11,"fmt","","",201,{"inputs":[{"name":"astc_8x6unormblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",201,{"inputs":[{"name":"astc_8x6unormblock"}],"output":{"name":"format"}}],[11,"clone","","",202,{"inputs":[{"name":"astc_8x6srgbblock"}],"output":{"name":"astc_8x6srgbblock"}}],[11,"fmt","","",202,{"inputs":[{"name":"astc_8x6srgbblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",202,{"inputs":[{"name":"astc_8x6srgbblock"}],"output":{"name":"format"}}],[11,"clone","","",203,{"inputs":[{"name":"astc_8x8unormblock"}],"output":{"name":"astc_8x8unormblock"}}],[11,"fmt","","",203,{"inputs":[{"name":"astc_8x8unormblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",203,{"inputs":[{"name":"astc_8x8unormblock"}],"output":{"name":"format"}}],[11,"clone","","",204,{"inputs":[{"name":"astc_8x8srgbblock"}],"output":{"name":"astc_8x8srgbblock"}}],[11,"fmt","","",204,{"inputs":[{"name":"astc_8x8srgbblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",204,{"inputs":[{"name":"astc_8x8srgbblock"}],"output":{"name":"format"}}],[11,"clone","","",205,{"inputs":[{"name":"astc_10x5unormblock"}],"output":{"name":"astc_10x5unormblock"}}],[11,"fmt","","",205,{"inputs":[{"name":"astc_10x5unormblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",205,{"inputs":[{"name":"astc_10x5unormblock"}],"output":{"name":"format"}}],[11,"clone","","",206,{"inputs":[{"name":"astc_10x5srgbblock"}],"output":{"name":"astc_10x5srgbblock"}}],[11,"fmt","","",206,{"inputs":[{"name":"astc_10x5srgbblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",206,{"inputs":[{"name":"astc_10x5srgbblock"}],"output":{"name":"format"}}],[11,"clone","","",207,{"inputs":[{"name":"astc_10x6unormblock"}],"output":{"name":"astc_10x6unormblock"}}],[11,"fmt","","",207,{"inputs":[{"name":"astc_10x6unormblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",207,{"inputs":[{"name":"astc_10x6unormblock"}],"output":{"name":"format"}}],[11,"clone","","",208,{"inputs":[{"name":"astc_10x6srgbblock"}],"output":{"name":"astc_10x6srgbblock"}}],[11,"fmt","","",208,{"inputs":[{"name":"astc_10x6srgbblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",208,{"inputs":[{"name":"astc_10x6srgbblock"}],"output":{"name":"format"}}],[11,"clone","","",209,{"inputs":[{"name":"astc_10x8unormblock"}],"output":{"name":"astc_10x8unormblock"}}],[11,"fmt","","",209,{"inputs":[{"name":"astc_10x8unormblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",209,{"inputs":[{"name":"astc_10x8unormblock"}],"output":{"name":"format"}}],[11,"clone","","",210,{"inputs":[{"name":"astc_10x8srgbblock"}],"output":{"name":"astc_10x8srgbblock"}}],[11,"fmt","","",210,{"inputs":[{"name":"astc_10x8srgbblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",210,{"inputs":[{"name":"astc_10x8srgbblock"}],"output":{"name":"format"}}],[11,"clone","","",211,{"inputs":[{"name":"astc_10x10unormblock"}],"output":{"name":"astc_10x10unormblock"}}],[11,"fmt","","",211,{"inputs":[{"name":"astc_10x10unormblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",211,{"inputs":[{"name":"astc_10x10unormblock"}],"output":{"name":"format"}}],[11,"clone","","",212,{"inputs":[{"name":"astc_10x10srgbblock"}],"output":{"name":"astc_10x10srgbblock"}}],[11,"fmt","","",212,{"inputs":[{"name":"astc_10x10srgbblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",212,{"inputs":[{"name":"astc_10x10srgbblock"}],"output":{"name":"format"}}],[11,"clone","","",213,{"inputs":[{"name":"astc_12x10unormblock"}],"output":{"name":"astc_12x10unormblock"}}],[11,"fmt","","",213,{"inputs":[{"name":"astc_12x10unormblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",213,{"inputs":[{"name":"astc_12x10unormblock"}],"output":{"name":"format"}}],[11,"clone","","",214,{"inputs":[{"name":"astc_12x10srgbblock"}],"output":{"name":"astc_12x10srgbblock"}}],[11,"fmt","","",214,{"inputs":[{"name":"astc_12x10srgbblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",214,{"inputs":[{"name":"astc_12x10srgbblock"}],"output":{"name":"format"}}],[11,"clone","","",215,{"inputs":[{"name":"astc_12x12unormblock"}],"output":{"name":"astc_12x12unormblock"}}],[11,"fmt","","",215,{"inputs":[{"name":"astc_12x12unormblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",215,{"inputs":[{"name":"astc_12x12unormblock"}],"output":{"name":"format"}}],[11,"clone","","",216,{"inputs":[{"name":"astc_12x12srgbblock"}],"output":{"name":"astc_12x12srgbblock"}}],[11,"fmt","","",216,{"inputs":[{"name":"astc_12x12srgbblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",216,{"inputs":[{"name":"astc_12x12srgbblock"}],"output":{"name":"format"}}],[11,"hash","","",29,null],[11,"eq","","",29,{"inputs":[{"name":"formatty"},{"name":"formatty"}],"output":{"name":"bool"}}],[11,"ne","","",29,{"inputs":[{"name":"formatty"},{"name":"formatty"}],"output":{"name":"bool"}}],[11,"clone","","",29,{"inputs":[{"name":"formatty"}],"output":{"name":"formatty"}}],[11,"fmt","","",29,{"inputs":[{"name":"formatty"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"framebuffer","vulkano","Targets on which your draw commands are executed.",null,null],[3,"AttachmentDescription","vulkano::framebuffer","",null,null],[12,"format","","",217,null],[12,"samples","","",217,null],[12,"load","","",217,null],[12,"store","","",217,null],[12,"initial_layout","","",217,null],[12,"final_layout","","",217,null],[3,"PassDescription","","",null,null],[12,"color_attachments","","Indices of attachments to use as color attachments.",218,null],[12,"depth_stencil","","",218,null],[12,"input_attachments","","Indices of attachments to use as input attachments.",218,null],[12,"resolve_attachments","","If not empty, each color attachment will be resolved into each corresponding entry of\nthis list.",218,null],[12,"preserve_attachments","","Indices of attachments that will be preserved during this pass.",218,null],[3,"PassDependencyDescription","","",null,null],[12,"source_subpass","","",219,null],[12,"destination_subpass","","",219,null],[12,"by_region","","",219,null],[3,"RenderPass","","Defines the layout of multiple subpasses.",null,null],[3,"Subpass","","Represents a subpass within a `RenderPass`.",null,null],[3,"Framebuffer","","",null,null],[4,"ClearValue","","Describes a uniform value that will be used to fill an attachment at the start of the\nrenderpass.",null,null],[13,"None","","Entry for attachments that aren&#39;t cleared.",220,null],[13,"Float","","Value for floating-point attachments, including `Unorm`, `Snorm`, `Sfloat`.",220,null],[13,"Int","","Value for integer attachments, including `Int`.",220,null],[13,"Uint","","Value for unsigned integer attachments, including `Uint`.",220,null],[13,"Depth","","Value for depth attachments.",220,null],[13,"Stencil","","Value for stencil attachments.",220,null],[13,"DepthStencil","","Value for depth and stencil attachments.",220,null],[4,"StoreOp","","Describes what the implementation should do with an attachment after all the subpasses have\ncompleted.",null,null],[13,"Store","","The attachment will be stored. This is what you usually want.",221,null],[13,"DontCare","","What happens is implementation-specific.",221,null],[4,"LoadOp","","Describes what the implementation should do with an attachment at the start of the subpass.",null,null],[13,"Load","","The attachment will be loaded. This is what you want if you want to draw over\nsomething existing.",222,null],[13,"Clear","","The attachment will be cleared by the implementation with a uniform value that you must\nprovide when you start drawing.",222,null],[13,"DontCare","","The attachment will have undefined content.",222,null],[8,"RenderPassLayout","","Types that describes the characteristics of a renderpass.",null,null],[16,"ClearValues","","The list of clear values to use when beginning to draw on this renderpass.",223,null],[16,"ClearValuesIter","","Iterator that produces one clear value per attachment.",223,null],[10,"convert_clear_values","","Decodes a `ClearValues` into a list of clear values where each element corresponds\nto an attachment. The size of the returned array must be the same as the number of\nattachments.",223,{"inputs":[{"name":"renderpasslayout"},{"name":"clearvalues"}],"output":{"name":"clearvaluesiter"}}],[16,"AttachmentsIter","","Iterator that produces attachments.",223,null],[10,"attachments","","Returns the descriptions of the attachments.",223,{"inputs":[{"name":"renderpasslayout"}],"output":{"name":"attachmentsiter"}}],[16,"PassesIter","","Iterator that produces passes.",223,null],[10,"passes","","Returns the descriptions of the passes.",223,{"inputs":[{"name":"renderpasslayout"}],"output":{"name":"passesiter"}}],[16,"PassDependenciesIter","","Iterator that produces pass dependencies.",223,null],[10,"pass_dependencies","","Returns the descriptions of the dependencies between passes.",223,{"inputs":[{"name":"renderpasslayout"}],"output":{"name":"passdependenciesiter"}}],[8,"RenderPassLayoutExt","","",null,null],[16,"AttachmentsList","","",224,null],[10,"ids","","",224,null],[8,"CompatibleLayout","","Trait implemented on renderpass layouts to check whether they are compatible\nwith another layout.",null,null],[10,"is_compatible_with","","Returns `true` if this layout is compatible with the other layout, as defined in the\n`Render Pass Compatibility` section of the Vulkan specs.",225,{"inputs":[{"name":"compatiblelayout"},{"name":"other"}],"output":{"name":"bool"}}],[11,"eq","","",220,{"inputs":[{"name":"clearvalue"},{"name":"clearvalue"}],"output":{"name":"bool"}}],[11,"ne","","",220,{"inputs":[{"name":"clearvalue"},{"name":"clearvalue"}],"output":{"name":"bool"}}],[11,"clone","","",220,{"inputs":[{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"fmt","","",220,{"inputs":[{"name":"clearvalue"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is_compatible_with","","Returns true if this attachment is compatible with another attachment, as defined in the\n`Render Pass Compatibility` section of the Vulkan specs.",217,{"inputs":[{"name":"attachmentdescription"},{"name":"attachmentdescription"}],"output":{"name":"bool"}}],[11,"hash","","",221,null],[11,"eq","","",221,{"inputs":[{"name":"storeop"},{"name":"storeop"}],"output":{"name":"bool"}}],[11,"ne","","",221,{"inputs":[{"name":"storeop"},{"name":"storeop"}],"output":{"name":"bool"}}],[11,"clone","","",221,{"inputs":[{"name":"storeop"}],"output":{"name":"storeop"}}],[11,"fmt","","",221,{"inputs":[{"name":"storeop"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",222,null],[11,"eq","","",222,{"inputs":[{"name":"loadop"},{"name":"loadop"}],"output":{"name":"bool"}}],[11,"ne","","",222,{"inputs":[{"name":"loadop"},{"name":"loadop"}],"output":{"name":"bool"}}],[11,"clone","","",222,{"inputs":[{"name":"loadop"}],"output":{"name":"loadop"}}],[11,"fmt","","",222,{"inputs":[{"name":"loadop"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",226,{"inputs":[{"name":"renderpass"},{"name":"arc"},{"name":"l"}],"output":{"name":"result"}}],[11,"device","","Returns the device that was used to create this renderpass.",226,{"inputs":[{"name":"renderpass"}],"output":{"name":"arc"}}],[11,"num_subpasses","","Returns the number of subpasses.",226,{"inputs":[{"name":"renderpass"}],"output":{"name":"u32"}}],[11,"subpass","","Returns a handle that represents a subpass of this renderpass.",226,{"inputs":[{"name":"renderpass"},{"name":"u32"}],"output":{"name":"option"}}],[11,"is_compatible_with","","Returns true if this renderpass is compatible with another one.",226,{"inputs":[{"name":"renderpass"},{"name":"renderpass"}],"output":{"name":"bool"}}],[11,"layout","","Returns the layout used to create this renderpass.",226,{"inputs":[{"name":"renderpass"}],"output":{"name":"l"}}],[11,"internal_object","","",226,{"inputs":[{"name":"renderpass"}],"output":{"name":"renderpass"}}],[11,"drop","","",226,{"inputs":[{"name":"renderpass"}],"output":null}],[11,"clone","","",227,{"inputs":[{"name":"subpass"}],"output":{"name":"subpass"}}],[11,"renderpass","","Returns the renderpass of this subpass.",227,{"inputs":[{"name":"subpass"}],"output":{"name":"renderpass"}}],[11,"index","","Returns the index of this subpass within the renderpass.",227,{"inputs":[{"name":"subpass"}],"output":{"name":"u32"}}],[11,"new","","",228,null],[11,"is_compatible_with","","Returns true if this framebuffer can be used with the specified renderpass.",228,{"inputs":[{"name":"framebuffer"},{"name":"arc"}],"output":{"name":"bool"}}],[11,"width","","Returns the width of the framebuffer in pixels.",228,{"inputs":[{"name":"framebuffer"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of the framebuffer in pixels.",228,{"inputs":[{"name":"framebuffer"}],"output":{"name":"u32"}}],[11,"layers","","Returns the number of layers (or depth) of the framebuffer.",228,{"inputs":[{"name":"framebuffer"}],"output":{"name":"u32"}}],[11,"renderpass","","Returns the renderpass that was used to create this framebuffer.",228,{"inputs":[{"name":"framebuffer"}],"output":{"name":"arc"}}],[11,"attachments","","Returns all the resources attached to that framebuffer.",228,null],[11,"internal_object","","",228,{"inputs":[{"name":"framebuffer"}],"output":{"name":"framebuffer"}}],[11,"drop","","",228,{"inputs":[{"name":"framebuffer"}],"output":null}],[0,"image","vulkano","Images storage (1D, 2D, 3D, arrays, etc.).",null,null],[3,"Image","vulkano::image","A storage for pixels or arbitrary data.",null,null],[3,"ImagePrototype","","Prototype of an image.",null,null],[3,"Usage","","Describes how an image is going to be used. This is **not** an optimization.",null,null],[12,"transfer_source","","",229,null],[12,"transfer_dest","","",229,null],[12,"sampled","","",229,null],[12,"storage","","",229,null],[12,"color_attachment","","",229,null],[12,"depth_stencil_attachment","","",229,null],[12,"transient_attachment","","",229,null],[12,"input_attachment","","",229,null],[3,"ImageView","","A representation of an image.",null,null],[3,"Swizzle","","",null,null],[12,"r","","",230,null],[12,"g","","",230,null],[12,"b","","",230,null],[12,"a","","",230,null],[3,"Type1d","","",null,null],[3,"Type1dMultisample","","",null,null],[3,"Type2d","","",null,null],[3,"Type2dMultisample","","",null,null],[3,"Type3d","","",null,null],[3,"Type3dMultisample","","",null,null],[3,"TypeCube","","",null,null],[3,"TypeCubeMultisample","","",null,null],[3,"Type1dArray","","",null,null],[3,"Type1dArrayMultisample","","",null,null],[3,"Type2dArray","","",null,null],[3,"Type2dArrayMultisample","","",null,null],[3,"TypeCubeArray","","",null,null],[3,"TypeCubeArrayMultisample","","",null,null],[4,"Layout","","",null,null],[13,"Undefined","","",231,null],[13,"General","","",231,null],[13,"ColorAttachmentOptimal","","",231,null],[13,"DepthStencilAttachmentOptimal","","",231,null],[13,"DepthStencilReadOnlyOptimal","","",231,null],[13,"ShaderReadOnlyOptimal","","",231,null],[13,"TransferSrcOptimal","","",231,null],[13,"TransferDstOptimal","","",231,null],[13,"Preinitialized","","",231,null],[13,"PresentSrc","","",231,null],[4,"ImageType","","",null,null],[13,"Type1d","","",232,null],[13,"Type2d","","",232,null],[13,"Type3d","","",232,null],[4,"MipmapsCount","","Specifies how many mipmaps must be allocated.",null,null],[13,"Specific","","Allocate the given number of mipmaps.",233,null],[13,"Log2","","Allocates the number of mipmaps required to store all the mipmaps of the image where each\nmipmap is half the dimensions of the previous level.",233,null],[13,"One","","Allocate one mipmap (ie. just the main level).",233,null],[4,"ComponentSwizzle","","",null,null],[13,"Identity","","",234,null],[13,"Zero","","",234,null],[13,"One","","",234,null],[13,"Red","","",234,null],[13,"Green","","",234,null],[13,"Blue","","",234,null],[13,"Alpha","","",234,null],[8,"ImageResource","","",null,null],[10,"default_layout","","All images in vulkano must have a *default layout*. Whenever this image is used in a\ncommand buffer, it is switched from this default layout to something else (if necessary),\nthen back again to the default.",235,{"inputs":[{"name":"imageresource"}],"output":{"name":"layout"}}],[10,"gpu_access","","Instructs the resource that it is going to be used by the GPU soon in the future. The\nfunction should block if the memory is currently being accessed by the CPU.",235,{"inputs":[{"name":"imageresource"},{"name":"bool"},{"name":"queue"},{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[8,"TypeMarker","","",null,null],[8,"ImageTypeMarker","","",null,null],[16,"Dimensions","","",236,null],[16,"NumSamples","","",236,null],[10,"extent","","",236,null],[10,"array_layers","","",236,{"inputs":[{"name":"imagetypemarker"},{"name":"dimensions"}],"output":{"name":"u32"}}],[10,"num_samples","","Must return `1` for non-multisampled types.",236,{"inputs":[{"name":"imagetypemarker"},{"name":"numsamples"}],"output":{"name":"u32"}}],[10,"ty","","",236,{"inputs":[{"name":"imagetypemarker"}],"output":{"name":"imagetype"}}],[8,"ImageViewTypeMarker","","",null,null],[8,"CanCreateView","","",null,null],[8,"MultisampleType","","",null,null],[11,"eq","","",231,{"inputs":[{"name":"layout"},{"name":"layout"}],"output":{"name":"bool"}}],[11,"ne","","",231,{"inputs":[{"name":"layout"},{"name":"layout"}],"output":{"name":"bool"}}],[11,"clone","","",231,{"inputs":[{"name":"layout"}],"output":{"name":"layout"}}],[11,"fmt","","",231,{"inputs":[{"name":"layout"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",232,{"inputs":[{"name":"imagetype"},{"name":"imagetype"}],"output":{"name":"bool"}}],[11,"ne","","",232,{"inputs":[{"name":"imagetype"},{"name":"imagetype"}],"output":{"name":"bool"}}],[11,"clone","","",232,{"inputs":[{"name":"imagetype"}],"output":{"name":"imagetype"}}],[11,"fmt","","",232,{"inputs":[{"name":"imagetype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",233,{"inputs":[{"name":"mipmapscount"}],"output":{"name":"mipmapscount"}}],[11,"fmt","","",233,{"inputs":[{"name":"mipmapscount"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",233,{"inputs":[{"name":"mipmapscount"},{"name":"u32"}],"output":{"name":"mipmapscount"}}],[11,"new","","Creates a new image and allocates memory for it.",237,{"inputs":[{"name":"image"},{"name":"arc"},{"name":"usage"},{"name":"s"},{"name":"sh"},{"name":"dimensions"},{"name":"numsamples"},{"name":"mi"}],"output":{"name":"result"}}],[11,"from_raw_unowned","","Creates an image from a raw handle. The image won&#39;t be destroyed.",237,{"inputs":[{"name":"image"},{"name":"arc"},{"name":"u64"},{"name":"m"},{"name":"sharingmode"},{"name":"u32"},{"name":"dimensions"},{"name":"numsamples"},{"name":"u32"}],"output":{"name":"imageprototype"}}],[11,"dimensions","","Returns the dimensions of this image.",237,{"inputs":[{"name":"image"}],"output":{"name":"dimensions"}}],[11,"array_layers","","Returns the number of array layers of this image.",237,{"inputs":[{"name":"image"}],"output":{"name":"u32"}}],[11,"mipmap_levels","","Returns the number of mipmap levels of this image.",237,{"inputs":[{"name":"image"}],"output":{"name":"u32"}}],[11,"num_samples","","Returns the number of samples of each pixel of this image.",237,{"inputs":[{"name":"image"}],"output":{"name":"u32"}}],[11,"usage_transfer_src","","True if the image can be used as a source for transfers.",237,{"inputs":[{"name":"image"}],"output":{"name":"bool"}}],[11,"usage_transfer_dest","","True if the image can be used as a destination for transfers.",237,{"inputs":[{"name":"image"}],"output":{"name":"bool"}}],[11,"usage_sampled","","True if the image can be sampled from a shader.",237,{"inputs":[{"name":"image"}],"output":{"name":"bool"}}],[11,"usage_storage","","True if the image can be used for image loads/stores in shaders.",237,{"inputs":[{"name":"image"}],"output":{"name":"bool"}}],[11,"usage_color_attachment","","True if the image can be used as a color attachment in a framebuffer.",237,{"inputs":[{"name":"image"}],"output":{"name":"bool"}}],[11,"usage_depth_stencil_attachment","","True if the image can be used as a depth and/or stencil attachment in a framebuffer.",237,{"inputs":[{"name":"image"}],"output":{"name":"bool"}}],[11,"usage_transient_attachment","","True if the image can be used as a transient attachment in a framebuffer.",237,{"inputs":[{"name":"image"}],"output":{"name":"bool"}}],[11,"usage_input_attachment","","True if the image can be used as an input attachment in a framebuffer.",237,{"inputs":[{"name":"image"}],"output":{"name":"bool"}}],[11,"internal_object","","",237,{"inputs":[{"name":"image"}],"output":{"name":"image"}}],[11,"requires_fence","","",237,{"inputs":[{"name":"image"}],"output":{"name":"bool"}}],[11,"requires_semaphore","","",237,{"inputs":[{"name":"image"}],"output":{"name":"bool"}}],[11,"sharing_mode","","",237,{"inputs":[{"name":"image"}],"output":{"name":"sharingmode"}}],[11,"default_layout","","",237,{"inputs":[{"name":"image"}],"output":{"name":"layout"}}],[11,"gpu_access","","",237,{"inputs":[{"name":"image"},{"name":"bool"},{"name":"queue"},{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"drop","","",237,{"inputs":[{"name":"image"}],"output":null}],[11,"dimensions","","Returns the dimensions of this image.",238,{"inputs":[{"name":"imageprototype"}],"output":{"name":"dimensions"}}],[11,"array_layers","","Returns the number of array layers of this image.",238,{"inputs":[{"name":"imageprototype"}],"output":{"name":"u32"}}],[11,"mipmap_levels","","Returns the number of mipmap levels of this image.",238,{"inputs":[{"name":"imageprototype"}],"output":{"name":"u32"}}],[11,"num_samples","","Returns the number of samples of each pixel of this image.",238,{"inputs":[{"name":"imageprototype"}],"output":{"name":"u32"}}],[11,"transition","","Transitions the image prototype into a real image by submitting a one-shot command buffer.",238,{"inputs":[{"name":"imageprototype"},{"name":"layout"},{"name":"commandbufferpool"},{"name":"queue"}],"output":{"name":"result"}}],[11,"clone","","",229,{"inputs":[{"name":"usage"}],"output":{"name":"usage"}}],[11,"fmt","","",229,{"inputs":[{"name":"usage"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"all","","Builds a `Usage` with all values set to true. Can be used for quick prototyping.",229,{"inputs":[{"name":"usage"}],"output":{"name":"usage"}}],[11,"new","","",239,{"inputs":[{"name":"imageview"},{"name":"arc"}],"output":{"name":"result"}}],[11,"image","","Returns the image from which this view is taken from.",239,{"inputs":[{"name":"imageview"}],"output":{"name":"arc"}}],[11,"requires_fence","","",239,{"inputs":[{"name":"imageview"}],"output":{"name":"bool"}}],[11,"requires_semaphore","","",239,{"inputs":[{"name":"imageview"}],"output":{"name":"bool"}}],[11,"sharing_mode","","",239,{"inputs":[{"name":"imageview"}],"output":{"name":"sharingmode"}}],[11,"default_layout","","",239,{"inputs":[{"name":"imageview"}],"output":{"name":"layout"}}],[11,"gpu_access","","",239,{"inputs":[{"name":"imageview"},{"name":"bool"},{"name":"queue"},{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"drop","","",239,{"inputs":[{"name":"imageview"}],"output":null}],[11,"eq","","",230,{"inputs":[{"name":"swizzle"},{"name":"swizzle"}],"output":{"name":"bool"}}],[11,"ne","","",230,{"inputs":[{"name":"swizzle"},{"name":"swizzle"}],"output":{"name":"bool"}}],[11,"default","","",230,{"inputs":[{"name":"swizzle"}],"output":{"name":"swizzle"}}],[11,"fmt","","",230,{"inputs":[{"name":"swizzle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",230,{"inputs":[{"name":"swizzle"}],"output":{"name":"swizzle"}}],[11,"eq","","",234,{"inputs":[{"name":"componentswizzle"},{"name":"componentswizzle"}],"output":{"name":"bool"}}],[11,"ne","","",234,{"inputs":[{"name":"componentswizzle"},{"name":"componentswizzle"}],"output":{"name":"bool"}}],[11,"fmt","","",234,{"inputs":[{"name":"componentswizzle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",234,{"inputs":[{"name":"componentswizzle"}],"output":{"name":"componentswizzle"}}],[11,"default","","",234,{"inputs":[{"name":"componentswizzle"}],"output":{"name":"componentswizzle"}}],[11,"extent","","",240,null],[11,"array_layers","","",240,{"inputs":[{"name":"type1d"},{"name":"u32"}],"output":{"name":"u32"}}],[11,"num_samples","","",240,null],[11,"ty","","",240,{"inputs":[{"name":"type1d"}],"output":{"name":"imagetype"}}],[11,"extent","","",241,null],[11,"array_layers","","",241,{"inputs":[{"name":"type1dmultisample"},{"name":"u32"}],"output":{"name":"u32"}}],[11,"num_samples","","",241,{"inputs":[{"name":"type1dmultisample"},{"name":"u32"}],"output":{"name":"u32"}}],[11,"ty","","",241,{"inputs":[{"name":"type1dmultisample"}],"output":{"name":"imagetype"}}],[11,"extent","","",242,null],[11,"array_layers","","",242,null],[11,"num_samples","","",242,null],[11,"ty","","",242,{"inputs":[{"name":"type2d"}],"output":{"name":"imagetype"}}],[11,"extent","","",243,null],[11,"array_layers","","",243,null],[11,"num_samples","","",243,{"inputs":[{"name":"type2dmultisample"},{"name":"u32"}],"output":{"name":"u32"}}],[11,"ty","","",243,{"inputs":[{"name":"type2dmultisample"}],"output":{"name":"imagetype"}}],[11,"extent","","",244,null],[11,"array_layers","","",244,null],[11,"num_samples","","",244,null],[11,"ty","","",244,{"inputs":[{"name":"type3d"}],"output":{"name":"imagetype"}}],[11,"extent","","",245,null],[11,"array_layers","","",245,null],[11,"num_samples","","",245,{"inputs":[{"name":"type3dmultisample"},{"name":"u32"}],"output":{"name":"u32"}}],[11,"ty","","",245,{"inputs":[{"name":"type3dmultisample"}],"output":{"name":"imagetype"}}],[11,"extent","","",246,null],[11,"array_layers","","",246,null],[11,"num_samples","","",246,null],[11,"ty","","",246,{"inputs":[{"name":"type2darray"}],"output":{"name":"imagetype"}}],[11,"extent","","",247,null],[11,"array_layers","","",247,null],[11,"num_samples","","",247,{"inputs":[{"name":"type2darraymultisample"},{"name":"u32"}],"output":{"name":"u32"}}],[11,"ty","","",247,{"inputs":[{"name":"type2darraymultisample"}],"output":{"name":"imagetype"}}],[0,"instance","vulkano","API entry point.",null,null],[3,"Features","vulkano::instance","Represents all the features that are available on a physical device or enabled on\na logical device.",null,null],[12,"robust_buffer_access","","",248,null],[12,"full_draw_index_uint32","","",248,null],[12,"image_cube_array","","",248,null],[12,"independent_blend","","",248,null],[12,"geometry_shader","","",248,null],[12,"tessellation_shader","","",248,null],[12,"sample_rate_shading","","",248,null],[12,"dual_src_blend","","",248,null],[12,"logic_op","","",248,null],[12,"multi_draw_indirect","","",248,null],[12,"draw_indirect_first_instance","","",248,null],[12,"depth_clamp","","",248,null],[12,"depth_bias_clamp","","",248,null],[12,"fill_mode_non_solid","","",248,null],[12,"depth_bounds","","",248,null],[12,"wide_lines","","",248,null],[12,"large_points","","",248,null],[12,"alpha_to_one","","",248,null],[12,"multi_viewport","","",248,null],[12,"sampler_anisotropy","","",248,null],[12,"texture_compression_etc2","","",248,null],[12,"texture_compression_astc_ldr","","",248,null],[12,"texture_compression_bc","","",248,null],[12,"occlusion_query_precise","","",248,null],[12,"pipeline_statistics_query","","",248,null],[12,"vertex_pipeline_stores_and_atomics","","",248,null],[12,"fragment_stores_and_atomics","","",248,null],[12,"shader_tessellation_and_geometry_point_size","","",248,null],[12,"shader_image_gather_extended","","",248,null],[12,"shader_storage_image_extended_formats","","",248,null],[12,"shader_storage_image_multisample","","",248,null],[12,"shader_storage_image_read_without_format","","",248,null],[12,"shader_storage_image_write_without_format","","",248,null],[12,"shader_uniform_buffer_array_dynamic_indexing","","",248,null],[12,"shader_sampled_image_array_dynamic_indexing","","",248,null],[12,"shader_storage_buffer_array_dynamic_indexing","","",248,null],[12,"shader_storage_image_array_dynamic_indexing","","",248,null],[12,"shader_clip_distance","","",248,null],[12,"shader_cull_distance","","",248,null],[12,"shader_f3264","","",248,null],[12,"shader_int64","","",248,null],[12,"shader_int16","","",248,null],[12,"shader_resource_residency","","",248,null],[12,"shader_resource_min_lod","","",248,null],[12,"sparse_binding","","",248,null],[12,"sparse_residency_buffer","","",248,null],[12,"sparse_residency_image2d","","",248,null],[12,"sparse_residency_image3d","","",248,null],[12,"sparse_residency2_samples","","",248,null],[12,"sparse_residency4_samples","","",248,null],[12,"sparse_residency8_samples","","",248,null],[12,"sparse_residency16_samples","","",248,null],[12,"sparse_residency_aliased","","",248,null],[12,"variable_multisample_rate","","",248,null],[12,"inherited_queries","","",248,null],[3,"Version","","Represents an API version of Vulkan.",null,null],[12,"major","","Major version number.",249,null],[12,"minor","","Minor version number.",249,null],[12,"patch","","Patch version number.",249,null],[3,"Instance","","An instance of a Vulkan context. This is the main object that should be created by an\napplication before everything else.",null,null],[3,"ApplicationInfo","","Information that can be given to the Vulkan driver so that it can identify your application.",null,null],[12,"application_name","","Name of the application.",250,null],[12,"application_version","","An opaque number that contains the version number of the application.",250,null],[12,"engine_name","","Name of the engine used to power the application.",250,null],[12,"engine_version","","An opaque number that contains the version number of the engine.",250,null],[3,"LayerProperties","","Properties of an available layer.",null,null],[3,"PhysicalDevice","","Represents one of the available devices on this machine.",null,null],[3,"PhysicalDevicesIter","","Iterator for all the physical devices available on hardware.",null,null],[3,"QueueFamily","","Represents a queue family in a physical device.",null,null],[3,"QueueFamiliesIter","","Iterator for all the queue families available on a physical device.",null,null],[3,"MemoryType","","Represents a memory type in a physical device.",null,null],[3,"MemoryTypesIter","","Iterator for all the memory types available on a physical device.",null,null],[3,"MemoryHeap","","Represents a memory heap in a physical device.",null,null],[3,"MemoryHeapsIter","","Iterator for all the memory heaps available on a physical device.",null,null],[4,"InstanceCreationError","","",null,null],[13,"OutOfHostMemory","","",251,null],[13,"OutOfDeviceMemory","","",251,null],[13,"InitializationFailed","","",251,null],[13,"LayerNotPresent","","",251,null],[13,"ExtensionNotPresent","","",251,null],[13,"IncompatibleDriver","","",251,null],[4,"PhysicalDeviceType","","Type of a physical device.",null,null],[13,"IntegratedGpu","","The device is an integrated GPU.",252,null],[13,"DiscreteGpu","","The device is a discrete GPU.",252,null],[13,"VirtualGpu","","The device is a virtual GPU.",252,null],[13,"Cpu","","The device is a CPU.",252,null],[13,"Other","","The device is something else.",252,null],[5,"layers_list","","Queries the list of layers that are available when creating an instance.",null,{"inputs":[],"output":{"name":"result"}}],[11,"new","","Initializes a new instance of Vulkan.",253,{"inputs":[{"name":"instance"},{"name":"option"},{"name":"l"}],"output":{"name":"result"}}],[11,"fmt","","",253,{"inputs":[{"name":"instance"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"internal_object","","",253,{"inputs":[{"name":"instance"}],"output":{"name":"instance"}}],[11,"drop","","",253,{"inputs":[{"name":"instance"}],"output":null}],[11,"eq","","",251,{"inputs":[{"name":"instancecreationerror"},{"name":"instancecreationerror"}],"output":{"name":"bool"}}],[11,"ne","","",251,{"inputs":[{"name":"instancecreationerror"},{"name":"instancecreationerror"}],"output":{"name":"bool"}}],[11,"fmt","","",251,{"inputs":[{"name":"instancecreationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",251,{"inputs":[{"name":"instancecreationerror"}],"output":{"name":"instancecreationerror"}}],[11,"description","","",251,{"inputs":[{"name":"instancecreationerror"}],"output":{"name":"str"}}],[11,"fmt","","",251,{"inputs":[{"name":"instancecreationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",251,{"inputs":[{"name":"instancecreationerror"},{"name":"error"}],"output":{"name":"instancecreationerror"}}],[11,"name","","Returns the name of the layer.",254,{"inputs":[{"name":"layerproperties"}],"output":{"name":"str"}}],[11,"description","","Returns a description of the layer.",254,{"inputs":[{"name":"layerproperties"}],"output":{"name":"str"}}],[11,"vulkan_version","","Returns the version of Vulkan supported by this layer.",254,{"inputs":[{"name":"layerproperties"}],"output":{"name":"version"}}],[11,"implementation_version","","Returns an implementation-specific version number for this layer.",254,{"inputs":[{"name":"layerproperties"}],"output":{"name":"u32"}}],[11,"clone","","",255,{"inputs":[{"name":"physicaldevice"}],"output":{"name":"physicaldevice"}}],[11,"fmt","","",255,{"inputs":[{"name":"physicaldevice"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"enumerate","","Returns an iterator that enumerates the physical devices available.",255,{"inputs":[{"name":"physicaldevice"},{"name":"arc"}],"output":{"name":"physicaldevicesiter"}}],[11,"instance","","Returns the instance corresponding to this physical device.",255,{"inputs":[{"name":"physicaldevice"}],"output":{"name":"arc"}}],[11,"name","","Returns the human-readable name of the device.",255,{"inputs":[{"name":"physicaldevice"}],"output":{"name":"string"}}],[11,"ty","","Returns the type of the device.",255,{"inputs":[{"name":"physicaldevice"}],"output":{"name":"physicaldevicetype"}}],[11,"api_version","","Returns the version of Vulkan supported by this device.",255,{"inputs":[{"name":"physicaldevice"}],"output":{"name":"version"}}],[11,"supported_features","","Returns the Vulkan features that are supported by this physical device.",255,{"inputs":[{"name":"physicaldevice"}],"output":{"name":"features"}}],[11,"queue_families","","Builds an iterator that enumerates all the queue families on this physical device.",255,{"inputs":[{"name":"physicaldevice"}],"output":{"name":"queuefamiliesiter"}}],[11,"queue_family_by_id","","Returns the queue family with the given index, or `None` if out of range.",255,{"inputs":[{"name":"physicaldevice"},{"name":"u32"}],"output":{"name":"option"}}],[11,"memory_types","","Builds an iterator that enumerates all the memory types on this physical device.",255,{"inputs":[{"name":"physicaldevice"}],"output":{"name":"memorytypesiter"}}],[11,"memory_type_by_id","","Returns the memory type with the given index, or `None` if out of range.",255,{"inputs":[{"name":"physicaldevice"},{"name":"u32"}],"output":{"name":"option"}}],[11,"memory_heaps","","Builds an iterator that enumerates all the memory heaps on this physical device.",255,{"inputs":[{"name":"physicaldevice"}],"output":{"name":"memoryheapsiter"}}],[11,"memory_heap_by_id","","Returns the memory heap with the given index, or `None` if out of range.",255,{"inputs":[{"name":"physicaldevice"},{"name":"u32"}],"output":{"name":"option"}}],[11,"driver_version","","Returns an opaque number representing the version of the driver of this device.",255,{"inputs":[{"name":"physicaldevice"}],"output":{"name":"u32"}}],[11,"pci_device_id","","Returns the PCI ID of the device.",255,{"inputs":[{"name":"physicaldevice"}],"output":{"name":"u32"}}],[11,"pci_vendor_id","","Returns the PCI ID of the vendor.",255,{"inputs":[{"name":"physicaldevice"}],"output":{"name":"u32"}}],[11,"uuid","","Returns a unique identifier for the device.",255,null],[11,"internal_object","","",255,{"inputs":[{"name":"physicaldevice"}],"output":{"name":"physicaldevice"}}],[11,"clone","","",256,{"inputs":[{"name":"physicaldevicesiter"}],"output":{"name":"physicaldevicesiter"}}],[11,"fmt","","",256,{"inputs":[{"name":"physicaldevicesiter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",256,{"inputs":[{"name":"physicaldevicesiter"}],"output":{"name":"option"}}],[11,"hash","","",252,null],[11,"eq","","",252,{"inputs":[{"name":"physicaldevicetype"},{"name":"physicaldevicetype"}],"output":{"name":"bool"}}],[11,"ne","","",252,{"inputs":[{"name":"physicaldevicetype"},{"name":"physicaldevicetype"}],"output":{"name":"bool"}}],[11,"clone","","",252,{"inputs":[{"name":"physicaldevicetype"}],"output":{"name":"physicaldevicetype"}}],[11,"fmt","","",252,{"inputs":[{"name":"physicaldevicetype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",257,{"inputs":[{"name":"queuefamily"}],"output":{"name":"queuefamily"}}],[11,"fmt","","",257,{"inputs":[{"name":"queuefamily"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"physical_device","","Returns the physical device associated to this queue family.",257,{"inputs":[{"name":"queuefamily"}],"output":{"name":"physicaldevice"}}],[11,"id","","Returns the identifier of this queue family within the physical device.",257,{"inputs":[{"name":"queuefamily"}],"output":{"name":"u32"}}],[11,"queues_count","","Returns the number of queues that belong to this family.",257,{"inputs":[{"name":"queuefamily"}],"output":{"name":"usize"}}],[11,"supports_graphics","","Returns true if queues of this family can execute graphics operations.",257,{"inputs":[{"name":"queuefamily"}],"output":{"name":"bool"}}],[11,"supports_compute","","Returns true if queues of this family can execute compute operations.",257,{"inputs":[{"name":"queuefamily"}],"output":{"name":"bool"}}],[11,"supports_transfers","","Returns true if queues of this family can execute transfer operations.",257,{"inputs":[{"name":"queuefamily"}],"output":{"name":"bool"}}],[11,"supports_sparse_binding","","Returns true if queues of this family can execute sparse resources binding operations.",257,{"inputs":[{"name":"queuefamily"}],"output":{"name":"bool"}}],[11,"clone","","",258,{"inputs":[{"name":"queuefamiliesiter"}],"output":{"name":"queuefamiliesiter"}}],[11,"fmt","","",258,{"inputs":[{"name":"queuefamiliesiter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",258,{"inputs":[{"name":"queuefamiliesiter"}],"output":{"name":"option"}}],[11,"size_hint","","",258,null],[11,"clone","","",259,{"inputs":[{"name":"memorytype"}],"output":{"name":"memorytype"}}],[11,"fmt","","",259,{"inputs":[{"name":"memorytype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"physical_device","","Returns the physical device associated to this memory type.",259,{"inputs":[{"name":"memorytype"}],"output":{"name":"physicaldevice"}}],[11,"id","","Returns the identifier of this memory type within the physical device.",259,{"inputs":[{"name":"memorytype"}],"output":{"name":"u32"}}],[11,"heap","","Returns the heap that corresponds to this memory type.",259,{"inputs":[{"name":"memorytype"}],"output":{"name":"memoryheap"}}],[11,"is_device_local","","Returns true if the memory type is located on the device, which means that it&#39;s the most\nefficient for GPU accesses.",259,{"inputs":[{"name":"memorytype"}],"output":{"name":"bool"}}],[11,"is_host_visible","","Returns true if the memory type can be accessed by the host.",259,{"inputs":[{"name":"memorytype"}],"output":{"name":"bool"}}],[11,"is_host_coherent","","Returns true if modifications made by the host or the GPU on this memory type are\ninstantaneously visible to the other party. False means that changes have to be flushed.",259,{"inputs":[{"name":"memorytype"}],"output":{"name":"bool"}}],[11,"is_host_cached","","Returns true if memory of this memory type is cached by the host. Host memory accesses to\ncached memory is faster than for uncached memory. However you are not guaranteed that it\nis coherent.",259,{"inputs":[{"name":"memorytype"}],"output":{"name":"bool"}}],[11,"is_lazily_allocated","","Returns true if allocations made to this memory type is lazy.",259,{"inputs":[{"name":"memorytype"}],"output":{"name":"bool"}}],[11,"clone","","",260,{"inputs":[{"name":"memorytypesiter"}],"output":{"name":"memorytypesiter"}}],[11,"fmt","","",260,{"inputs":[{"name":"memorytypesiter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",260,{"inputs":[{"name":"memorytypesiter"}],"output":{"name":"option"}}],[11,"size_hint","","",260,null],[11,"clone","","",261,{"inputs":[{"name":"memoryheap"}],"output":{"name":"memoryheap"}}],[11,"fmt","","",261,{"inputs":[{"name":"memoryheap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"physical_device","","Returns the physical device associated to this memory heap.",261,{"inputs":[{"name":"memoryheap"}],"output":{"name":"physicaldevice"}}],[11,"id","","Returns the identifier of this memory heap within the physical device.",261,{"inputs":[{"name":"memoryheap"}],"output":{"name":"u32"}}],[11,"size","","Returns the size in bytes on this heap.",261,{"inputs":[{"name":"memoryheap"}],"output":{"name":"usize"}}],[11,"is_device_local","","Returns true if the heap is local to the GPU.",261,{"inputs":[{"name":"memoryheap"}],"output":{"name":"bool"}}],[11,"clone","","",262,{"inputs":[{"name":"memoryheapsiter"}],"output":{"name":"memoryheapsiter"}}],[11,"fmt","","",262,{"inputs":[{"name":"memoryheapsiter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",262,{"inputs":[{"name":"memoryheapsiter"}],"output":{"name":"option"}}],[11,"size_hint","","",262,null],[0,"memory","vulkano","GPU-visible memory allocation and management.",null,null],[3,"DeviceMemory","vulkano::memory","Represents memory that has been allocated.",null,null],[3,"MappedDeviceMemory","","Represents memory that has been allocated and mapped in CPU accessible space.",null,null],[3,"DeviceLocal","","Dummy marker whose strategy is to allocate a new chunk of memory for each allocation.",null,null],[3,"DeviceLocalChunk","","A chunk allocated from a `DeviceLocal`.",null,null],[3,"HostVisible","","Dummy marker whose strategy is to allocate a new chunk of memory for each allocation.",null,null],[3,"HostVisibleChunk","","A chunk allocated from a `HostVisible`.",null,null],[4,"ChunkRange","","",null,null],[13,"All","","",263,null],[13,"Range","","",263,null],[12,"offset","vulkano::memory::ChunkRange","",263,null],[12,"size","","",263,null],[4,"ChunkProperties","vulkano::memory","",null,null],[13,"Regular","","",264,null],[12,"memory","vulkano::memory::ChunkProperties","",264,null],[12,"offset","","",264,null],[12,"size","","",264,null],[13,"Sparse","vulkano::memory","",264,null],[11,"alloc","","Allocates a chunk of memory from the device.",265,{"inputs":[{"name":"devicememory"},{"name":"arc"},{"name":"memorytype"},{"name":"usize"}],"output":{"name":"result"}}],[11,"alloc_and_map","","Allocates a chunk of memory and maps it.",265,{"inputs":[{"name":"devicememory"},{"name":"arc"},{"name":"memorytype"},{"name":"usize"}],"output":{"name":"result"}}],[11,"memory_type","","Returns the memory type this chunk was allocated on.",265,{"inputs":[{"name":"devicememory"}],"output":{"name":"memorytype"}}],[11,"size","","Returns the size in bytes of that memory chunk.",265,{"inputs":[{"name":"devicememory"}],"output":{"name":"usize"}}],[11,"device","","Returns the device associated with this allocation.",265,{"inputs":[{"name":"devicememory"}],"output":{"name":"arc"}}],[11,"internal_object","","",265,{"inputs":[{"name":"devicememory"}],"output":{"name":"devicememory"}}],[11,"drop","","",265,{"inputs":[{"name":"devicememory"}],"output":null}],[11,"memory","","Returns the underlying `DeviceMemory`.",266,{"inputs":[{"name":"mappeddevicememory"}],"output":{"name":"devicememory"}}],[11,"mapping_pointer","","Returns a pointer to the mapping.",266,null],[11,"drop","","",266,{"inputs":[{"name":"mappeddevicememory"}],"output":null}],[11,"clone","","",267,{"inputs":[{"name":"devicelocal"}],"output":{"name":"devicelocal"}}],[11,"fmt","","",267,{"inputs":[{"name":"devicelocal"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is_sparse","","",267,{"inputs":[{"name":"devicelocal"}],"output":{"name":"bool"}}],[11,"allocate","","",267,{"inputs":[{"name":"devicelocal"},{"name":"arc"},{"name":"usize"},{"name":"usize"},{"name":"u32"}],"output":{"name":"result"}}],[11,"gpu_access","","",268,{"inputs":[{"name":"devicelocalchunk"},{"name":"bool"},{"name":"chunkrange"},{"name":"queue"},{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"requires_fence","","",268,{"inputs":[{"name":"devicelocalchunk"}],"output":{"name":"bool"}}],[11,"properties","","",268,{"inputs":[{"name":"devicelocalchunk"}],"output":{"name":"chunkproperties"}}],[11,"may_alias","","",268,{"inputs":[{"name":"devicelocalchunk"}],"output":{"name":"bool"}}],[11,"clone","","",269,{"inputs":[{"name":"hostvisible"}],"output":{"name":"hostvisible"}}],[11,"fmt","","",269,{"inputs":[{"name":"hostvisible"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is_sparse","","",269,{"inputs":[{"name":"hostvisible"}],"output":{"name":"bool"}}],[11,"allocate","","",269,{"inputs":[{"name":"hostvisible"},{"name":"arc"},{"name":"usize"},{"name":"usize"},{"name":"u32"}],"output":{"name":"result"}}],[11,"gpu_access","","",270,{"inputs":[{"name":"hostvisiblechunk"},{"name":"bool"},{"name":"chunkrange"},{"name":"queue"},{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"properties","","",270,{"inputs":[{"name":"hostvisiblechunk"}],"output":{"name":"chunkproperties"}}],[11,"may_alias","","",270,{"inputs":[{"name":"hostvisiblechunk"}],"output":{"name":"bool"}}],[11,"read","","",270,{"inputs":[{"name":"hostvisiblechunk"},{"name":"u64"}],"output":{"name":"gpuaccess"}}],[11,"try_read","","",270,{"inputs":[{"name":"hostvisiblechunk"}],"output":{"name":"option"}}],[11,"write","","",270,{"inputs":[{"name":"hostvisiblechunk"},{"name":"u64"}],"output":{"name":"gpuaccess"}}],[11,"try_write","","",270,{"inputs":[{"name":"hostvisiblechunk"}],"output":{"name":"option"}}],[8,"CpuAccessible","","Trait for memory objects that can be accessed from the CPU.",null,null],[16,"Read","","",271,null],[10,"read","","Gives a read access to the content of the buffer.",271,{"inputs":[{"name":"cpuaccessible"},{"name":"u64"}],"output":{"name":"read"}}],[10,"try_read","","Tries to give a read access to the content of the buffer.",271,{"inputs":[{"name":"cpuaccessible"}],"output":{"name":"option"}}],[8,"CpuWriteAccessible","","Trait for memory objects that be mutably accessed from the CPU.",null,null],[16,"Write","","",272,null],[10,"write","","Gives a write access to the content of the buffer.",272,{"inputs":[{"name":"cpuwriteaccessible"},{"name":"u64"}],"output":{"name":"write"}}],[10,"try_write","","Tries to give a write access to the content of the buffer.",272,{"inputs":[{"name":"cpuwriteaccessible"}],"output":{"name":"option"}}],[8,"MemorySource","","Trait for objects that can be used to fill the memory requirements of a buffer or an image.",null,null],[16,"Chunk","","An object that represents one block of allocation. Returned by `allocate`.",273,null],[10,"is_sparse","","Returns true if the chunks allocated by this source will use sparse memory.",273,{"inputs":[{"name":"memorysource"}],"output":{"name":"bool"}}],[10,"allocate","","Allocates a block of memory to be used.",273,{"inputs":[{"name":"memorysource"},{"name":"arc"},{"name":"usize"},{"name":"usize"},{"name":"u32"}],"output":{"name":"result"}}],[8,"MemorySourceChunk","","A chunk of GPU-visible memory.",null,null],[10,"properties","","Returns the properties of this chunk.",274,{"inputs":[{"name":"memorysourcechunk"}],"output":{"name":"chunkproperties"}}],[11,"requires_fence","","Returns true if the `gpu_access` function should be passed a fence.",274,{"inputs":[{"name":"memorysourcechunk"}],"output":{"name":"bool"}}],[11,"requires_semaphore","","Returns true if the `gpu_access` function should be passed a semaphore.",274,{"inputs":[{"name":"memorysourcechunk"}],"output":{"name":"bool"}}],[10,"gpu_access","","Instructs the manager that a part of this chunk of memory is going to be used by the\nGPU soon in the future. The function should block if the memory is currently being\naccessed by the CPU.",274,{"inputs":[{"name":"memorysourcechunk"},{"name":"bool"},{"name":"chunkrange"},{"name":"queue"},{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[10,"may_alias","","Returns true if this chunk of memory may be used, now or in the future, by multiple buffers\nor images (or a combination of both) simultaneously. If you&#39;re not sure, it&#39;s safer to\nreturn true.",274,{"inputs":[{"name":"memorysourcechunk"}],"output":{"name":"bool"}}],[8,"Content","","Trait for types of data that can be mapped.",null,null],[10,"ref_from_ptr","","Builds a pointer to this type from a raw pointer.",275,null],[10,"is_size_suitable","","Returns true if the size is suitable to store a type like this.",275,{"inputs":[{"name":"content"},{"name":"usize"}],"output":{"name":"bool"}}],[0,"pipeline","vulkano","",null,null],[3,"GraphicsPipeline","vulkano::pipeline","",null,null],[11,"new","","Builds a new graphics pipeline object.",276,{"inputs":[{"name":"graphicspipeline"},{"name":"arc"},{"name":"vertexshaderentrypoint"},{"name":"inputassembly"},{"name":"viewportsstate"},{"name":"rasterization"},{"name":"multisample"},{"name":"blend"},{"name":"fragmentshaderentrypoint"},{"name":"arc"},{"name":"subpass"}],"output":{"name":"result"}}],[11,"layout","","Returns the pipeline layout used in the constructor.",276,{"inputs":[{"name":"graphicspipeline"}],"output":{"name":"arc"}}],[11,"has_dynamic_line_width","","Returns true if the line width used by this pipeline is dynamic.",276,{"inputs":[{"name":"graphicspipeline"}],"output":{"name":"bool"}}],[11,"internal_object","","",276,{"inputs":[{"name":"graphicspipeline"}],"output":{"name":"pipeline"}}],[11,"drop","","",276,{"inputs":[{"name":"graphicspipeline"}],"output":null}],[0,"blend","","Defines how the color output of the fragment shader is written to the attachment.",null,null],[3,"Blend","vulkano::pipeline::blend","",null,null],[12,"logic_op","","",277,null],[12,"blend_constants","","The constant color to use for the `Constant*` blending operation.",277,null],[4,"LogicOp","","Which logical operation to apply to the output values.",null,null],[13,"Clear","","Returns `0`.",278,null],[13,"And","","Returns `src &amp; dest`.",278,null],[13,"AndReverse","","Returns `src &amp; !dest`.",278,null],[13,"Copy","","Returns `src`.",278,null],[13,"AndInverted","","Returns `!src &amp; dest`.",278,null],[13,"Noop","","Returns `dest`.",278,null],[13,"Xor","","Returns `src ^ dest`.",278,null],[13,"Or","","Returns `src | dest`.",278,null],[13,"Nor","","Returns `!(src | dest)`.",278,null],[13,"Equivalent","","Returns `!(src ^ dest)`.",278,null],[13,"Invert","","Returns `!dest`.",278,null],[13,"OrReverse","","Returns `src | !dest.",278,null],[13,"CopyInverted","","Returns `!src`.",278,null],[13,"OrInverted","","Returns `!src | dest`.",278,null],[13,"Nand","","Returns `!(src &amp; dest)`.",278,null],[13,"Set","","Returns `!0` (all bits set to 1).",278,null],[4,"BlendOp","","",null,null],[13,"Zero","","",279,null],[13,"One","","",279,null],[13,"SrcColor","","",279,null],[13,"OneMinusSrcColor","","",279,null],[13,"DstColor","","",279,null],[13,"OneMinusDstColor","","",279,null],[13,"SrcAlpha","","",279,null],[13,"OneMinusSrcAlpha","","",279,null],[13,"DstAlpha","","",279,null],[13,"OneMinusDstAlpha","","",279,null],[13,"ConstantColor","","",279,null],[13,"OneMinusConstantColor","","",279,null],[13,"ConstantAlpha","","",279,null],[13,"OneMinusConstantAlpha","","",279,null],[13,"SrcAlphaSaturate","","",279,null],[13,"Src1Color","","",279,null],[13,"OneMinusSrc1Color","","",279,null],[13,"Src1Alpha","","",279,null],[13,"OneMinusSrc1Alpha","","",279,null],[11,"clone","","",278,{"inputs":[{"name":"logicop"}],"output":{"name":"logicop"}}],[11,"fmt","","",278,{"inputs":[{"name":"logicop"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",278,{"inputs":[{"name":"logicop"}],"output":{"name":"logicop"}}],[11,"clone","","",279,{"inputs":[{"name":"blendop"}],"output":{"name":"blendop"}}],[11,"fmt","","",279,{"inputs":[{"name":"blendop"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"cache","vulkano::pipeline","Cache the pipeline objects to disk for faster reloads.",null,null],[3,"PipelineCache","vulkano::pipeline::cache","Opaque cache that contains pipeline objects.",null,null],[11,"new","","Builds a new pipeline cache.",280,{"inputs":[{"name":"pipelinecache"},{"name":"arc"},{"name":"option"}],"output":{"name":"result"}}],[11,"merge","","Merges other pipeline caches into this one.",280,{"inputs":[{"name":"pipelinecache"},{"name":"i"}],"output":{"name":"result"}}],[11,"get_data","","Obtains the data from the cache.",280,{"inputs":[{"name":"pipelinecache"}],"output":{"name":"result"}}],[11,"internal_object","","",280,{"inputs":[{"name":"pipelinecache"}],"output":{"name":"pipelinecache"}}],[11,"drop","","",280,{"inputs":[{"name":"pipelinecache"}],"output":null}],[0,"input_assembly","vulkano::pipeline","",null,null],[3,"InputAssembly","vulkano::pipeline::input_assembly","How the input assembly stage should behave.",null,null],[12,"topology","","The type of primitives.",281,null],[12,"primitive_restart_enable","","If true, then the special index value `0xffff` or `0xffffffff` will tell the GPU that it is\nthe end of the current primitive. A new primitive will restart at the next index.",281,null],[4,"PrimitiveTopology","","Describes how vertices must be grouped together to form primitives.",null,null],[13,"PointList","","",282,null],[13,"LineList","","",282,null],[13,"LineStrip","","",282,null],[13,"TriangleList","","",282,null],[13,"TriangleStrip","","",282,null],[13,"TriangleFan","","",282,null],[13,"LineListWithAdjacency","","",282,null],[13,"LineStripWithAdjacency","","",282,null],[13,"TriangleListWithAdjancecy","","",282,null],[13,"TriangleStripWithAdjacency","","",282,null],[13,"PatchList","","",282,null],[4,"IndexType","","An enumeration of all valid index types.",null,null],[13,"U16","","",283,null],[13,"U32","","",283,null],[8,"Index","","Trait for types that can be used as indices by the GPU.",null,null],[10,"ty","","Returns the type of data.",284,{"inputs":[{"name":"index"}],"output":{"name":"indextype"}}],[11,"fmt","","",281,{"inputs":[{"name":"inputassembly"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",281,{"inputs":[{"name":"inputassembly"}],"output":{"name":"inputassembly"}}],[11,"fmt","","",282,{"inputs":[{"name":"primitivetopology"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",282,{"inputs":[{"name":"primitivetopology"}],"output":{"name":"primitivetopology"}}],[11,"supports_primitive_restart","","Returns true if this primitive topology supports using primitives restart.",282,{"inputs":[{"name":"primitivetopology"}],"output":{"name":"bool"}}],[11,"fmt","","",283,{"inputs":[{"name":"indextype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",283,{"inputs":[{"name":"indextype"}],"output":{"name":"indextype"}}],[0,"multisample","vulkano::pipeline","State of multisampling.",null,null],[3,"Multisample","vulkano::pipeline::multisample","State of the multisampling.",null,null],[12,"rasterization_samples","","",285,null],[12,"sample_mask","","",285,null],[12,"sample_shading","","",285,null],[12,"alpha_to_coverage","","",285,null],[12,"alpha_to_one","","",285,null],[11,"disabled","","",285,{"inputs":[{"name":"multisample"}],"output":{"name":"multisample"}}],[0,"raster","vulkano::pipeline","Stage when triangles are turned into pixels.",null,null],[3,"Rasterization","vulkano::pipeline::raster","State of the rasterizer.",null,null],[12,"depth_clamp","","If true, then the depth value of the vertices will be clamped to [0.0 ; 1.0]. If false,\nfragments whose depth is outside of this range will be discarded.",286,null],[12,"rasterizer_discard","","If true, all the fragments will be discarded. This is usually used when your vertex shader\nhas some side effects and you don&#39;t need to run the fragment shader.",286,null],[12,"polygon_mode","","This setting can ask the rasterizer to downgrade triangles into lines or points, or lines\ninto points.",286,null],[12,"cull_mode","","Specifies whether front faces or back faces should be discarded, or none, or both.",286,null],[12,"front_face","","Specifies which triangle orientation corresponds to the front or the triangle.",286,null],[12,"line_width","","Width, in pixels, of lines when drawing lines.",286,null],[12,"depthBiasEnable","","",286,null],[12,"depthBiasConstantFactor","","",286,null],[12,"depthBiasClamp","","",286,null],[12,"depthBiasSlopeFactor","","",286,null],[4,"CullMode","","Specifies the culling mode.",null,null],[13,"None","","",287,null],[13,"Front","","",287,null],[13,"Back","","",287,null],[13,"FrontAndBack","","",287,null],[4,"FrontFace","","Specifies which triangle orientation corresponds to the front or the triangle.",null,null],[13,"CounterClockwise","","Triangles whose vertices are oriented counter-clockwise on the screen will be considered\nas facing their front. Otherwise they will be considered as facing their back.",288,null],[13,"Clockwise","","Triangles whose vertices are oriented clockwise on the screen will be considered\nas facing their front. Otherwise they will be considered as facing their back.",288,null],[4,"PolygonMode","","",null,null],[13,"Fill","","",289,null],[13,"Line","","",289,null],[13,"Point","","",289,null],[11,"fmt","","",286,{"inputs":[{"name":"rasterization"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",286,{"inputs":[{"name":"rasterization"}],"output":{"name":"rasterization"}}],[11,"default","","",286,{"inputs":[{"name":"rasterization"}],"output":{"name":"rasterization"}}],[11,"fmt","","",287,{"inputs":[{"name":"cullmode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",287,{"inputs":[{"name":"cullmode"}],"output":{"name":"cullmode"}}],[11,"default","","",287,{"inputs":[{"name":"cullmode"}],"output":{"name":"cullmode"}}],[11,"fmt","","",288,{"inputs":[{"name":"frontface"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",288,{"inputs":[{"name":"frontface"}],"output":{"name":"frontface"}}],[11,"default","","",288,{"inputs":[{"name":"frontface"}],"output":{"name":"frontface"}}],[11,"fmt","","",289,{"inputs":[{"name":"polygonmode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",289,{"inputs":[{"name":"polygonmode"}],"output":{"name":"polygonmode"}}],[11,"default","","",289,{"inputs":[{"name":"polygonmode"}],"output":{"name":"polygonmode"}}],[0,"vertex","vulkano::pipeline","",null,null],[3,"VertexAttribute","vulkano::pipeline::vertex","",null,null],[12,"offset","","",290,null],[12,"format","","",290,null],[4,"VertexInputRate","","",null,null],[13,"Vertex","","",291,null],[13,"Instance","","",291,null],[8,"Vertex","","Describes an individual `Vertex`. More precisely, a collection of attributes that can be read\nfrom a vertex shader.",null,null],[10,"attrib","","Returns the characteristics of a vertex attribute.",292,{"inputs":[{"name":"vertex"},{"name":"str"}],"output":{"name":"option"}}],[8,"MultiVertex","","Trait for types that contain the layout of a collection of vertex buffers.",null,null],[16,"BuffersIter","","",293,null],[10,"attrib","","",293,{"inputs":[{"name":"multivertex"},{"name":"str"}],"output":{"name":"option"}}],[10,"num_buffers","","Returns the number of buffers in this collection.",293,{"inputs":[{"name":"multivertex"}],"output":{"name":"u32"}}],[10,"buffer_info","","",293,null],[10,"buffers","","",293,{"inputs":[{"name":"multivertex"}],"output":{"name":"buffersiter"}}],[8,"Attribute","","",null,null],[10,"format","","",294,{"inputs":[{"name":"attribute"}],"output":{"name":"format"}}],[11,"fmt","","",291,{"inputs":[{"name":"vertexinputrate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",291,{"inputs":[{"name":"vertexinputrate"}],"output":{"name":"vertexinputrate"}}],[11,"attrib","alloc::arc","",295,{"inputs":[{"name":"arc"},{"name":"str"}],"output":{"name":"option"}}],[11,"num_buffers","","",295,{"inputs":[{"name":"arc"}],"output":{"name":"u32"}}],[11,"buffer_info","","",295,null],[11,"buffers","","",295,{"inputs":[{"name":"arc"}],"output":{"name":"optionintoiter"}}],[11,"attrib","","",295,{"inputs":[{"name":"arc"},{"name":"str"}],"output":{"name":"option"}}],[11,"num_buffers","","",295,{"inputs":[{"name":"arc"}],"output":{"name":"u32"}}],[11,"buffer_info","","",295,null],[11,"buffers","","",295,{"inputs":[{"name":"arc"}],"output":{"name":"optionintoiter"}}],[11,"attrib","","",295,{"inputs":[{"name":"arc"},{"name":"str"}],"output":{"name":"option"}}],[11,"num_buffers","","",295,{"inputs":[{"name":"arc"}],"output":{"name":"u32"}}],[11,"buffer_info","","",295,null],[11,"buffers","","",295,{"inputs":[{"name":"arc"}],"output":{"name":"optionintoiter"}}],[11,"attrib","","",295,{"inputs":[{"name":"arc"},{"name":"str"}],"output":{"name":"option"}}],[11,"num_buffers","","",295,{"inputs":[{"name":"arc"}],"output":{"name":"u32"}}],[11,"buffer_info","","",295,null],[11,"buffers","","",295,{"inputs":[{"name":"arc"}],"output":{"name":"optionintoiter"}}],[11,"attrib","","",295,{"inputs":[{"name":"arc"},{"name":"str"}],"output":{"name":"option"}}],[11,"num_buffers","","",295,{"inputs":[{"name":"arc"}],"output":{"name":"u32"}}],[11,"buffer_info","","",295,null],[11,"buffers","","",295,{"inputs":[{"name":"arc"}],"output":{"name":"optionintoiter"}}],[11,"attrib","","",295,{"inputs":[{"name":"arc"},{"name":"str"}],"output":{"name":"option"}}],[11,"num_buffers","","",295,{"inputs":[{"name":"arc"}],"output":{"name":"u32"}}],[11,"buffer_info","","",295,null],[11,"buffers","","",295,{"inputs":[{"name":"arc"}],"output":{"name":"optionintoiter"}}],[11,"attrib","","",295,{"inputs":[{"name":"arc"},{"name":"str"}],"output":{"name":"option"}}],[11,"num_buffers","","",295,{"inputs":[{"name":"arc"}],"output":{"name":"u32"}}],[11,"buffer_info","","",295,null],[11,"buffers","","",295,{"inputs":[{"name":"arc"}],"output":{"name":"optionintoiter"}}],[11,"attrib","","",295,{"inputs":[{"name":"arc"},{"name":"str"}],"output":{"name":"option"}}],[11,"num_buffers","","",295,{"inputs":[{"name":"arc"}],"output":{"name":"u32"}}],[11,"buffer_info","","",295,null],[11,"buffers","","",295,{"inputs":[{"name":"arc"}],"output":{"name":"optionintoiter"}}],[11,"attrib","","",295,{"inputs":[{"name":"arc"},{"name":"str"}],"output":{"name":"option"}}],[11,"num_buffers","","",295,{"inputs":[{"name":"arc"}],"output":{"name":"u32"}}],[11,"buffer_info","","",295,null],[11,"buffers","","",295,{"inputs":[{"name":"arc"}],"output":{"name":"optionintoiter"}}],[11,"attrib","","",295,{"inputs":[{"name":"arc"},{"name":"str"}],"output":{"name":"option"}}],[11,"num_buffers","","",295,{"inputs":[{"name":"arc"}],"output":{"name":"u32"}}],[11,"buffer_info","","",295,null],[11,"buffers","","",295,{"inputs":[{"name":"arc"}],"output":{"name":"optionintoiter"}}],[11,"attrib","","",295,{"inputs":[{"name":"arc"},{"name":"str"}],"output":{"name":"option"}}],[11,"num_buffers","","",295,{"inputs":[{"name":"arc"}],"output":{"name":"u32"}}],[11,"buffer_info","","",295,null],[11,"buffers","","",295,{"inputs":[{"name":"arc"}],"output":{"name":"optionintoiter"}}],[11,"attrib","","",295,{"inputs":[{"name":"arc"},{"name":"str"}],"output":{"name":"option"}}],[11,"num_buffers","","",295,{"inputs":[{"name":"arc"}],"output":{"name":"u32"}}],[11,"buffer_info","","",295,null],[11,"buffers","","",295,{"inputs":[{"name":"arc"}],"output":{"name":"optionintoiter"}}],[11,"attrib","","",295,{"inputs":[{"name":"arc"},{"name":"str"}],"output":{"name":"option"}}],[11,"num_buffers","","",295,{"inputs":[{"name":"arc"}],"output":{"name":"u32"}}],[11,"buffer_info","","",295,null],[11,"buffers","","",295,{"inputs":[{"name":"arc"}],"output":{"name":"optionintoiter"}}],[11,"attrib","","",295,{"inputs":[{"name":"arc"},{"name":"str"}],"output":{"name":"option"}}],[11,"num_buffers","","",295,{"inputs":[{"name":"arc"}],"output":{"name":"u32"}}],[11,"buffer_info","","",295,null],[11,"buffers","","",295,{"inputs":[{"name":"arc"}],"output":{"name":"optionintoiter"}}],[11,"attrib","","",295,{"inputs":[{"name":"arc"},{"name":"str"}],"output":{"name":"option"}}],[11,"num_buffers","","",295,{"inputs":[{"name":"arc"}],"output":{"name":"u32"}}],[11,"buffer_info","","",295,null],[11,"buffers","","",295,{"inputs":[{"name":"arc"}],"output":{"name":"optionintoiter"}}],[11,"attrib","","",295,{"inputs":[{"name":"arc"},{"name":"str"}],"output":{"name":"option"}}],[11,"num_buffers","","",295,{"inputs":[{"name":"arc"}],"output":{"name":"u32"}}],[11,"buffer_info","","",295,null],[11,"buffers","","",295,{"inputs":[{"name":"arc"}],"output":{"name":"optionintoiter"}}],[11,"attrib","","",295,{"inputs":[{"name":"arc"},{"name":"str"}],"output":{"name":"option"}}],[11,"num_buffers","","",295,{"inputs":[{"name":"arc"}],"output":{"name":"u32"}}],[11,"buffer_info","","",295,null],[11,"buffers","","",295,{"inputs":[{"name":"arc"}],"output":{"name":"optionintoiter"}}],[11,"attrib","","",295,{"inputs":[{"name":"arc"},{"name":"str"}],"output":{"name":"option"}}],[11,"num_buffers","","",295,{"inputs":[{"name":"arc"}],"output":{"name":"u32"}}],[11,"buffer_info","","",295,null],[11,"buffers","","",295,{"inputs":[{"name":"arc"}],"output":{"name":"optionintoiter"}}],[11,"attrib","","",295,{"inputs":[{"name":"arc"},{"name":"str"}],"output":{"name":"option"}}],[11,"num_buffers","","",295,{"inputs":[{"name":"arc"}],"output":{"name":"u32"}}],[11,"buffer_info","","",295,null],[11,"buffers","","",295,{"inputs":[{"name":"arc"}],"output":{"name":"optionintoiter"}}],[11,"attrib","","",295,{"inputs":[{"name":"arc"},{"name":"str"}],"output":{"name":"option"}}],[11,"num_buffers","","",295,{"inputs":[{"name":"arc"}],"output":{"name":"u32"}}],[11,"buffer_info","","",295,null],[11,"buffers","","",295,{"inputs":[{"name":"arc"}],"output":{"name":"optionintoiter"}}],[11,"attrib","","",295,{"inputs":[{"name":"arc"},{"name":"str"}],"output":{"name":"option"}}],[11,"num_buffers","","",295,{"inputs":[{"name":"arc"}],"output":{"name":"u32"}}],[11,"buffer_info","","",295,null],[11,"buffers","","",295,{"inputs":[{"name":"arc"}],"output":{"name":"optionintoiter"}}],[11,"attrib","","",295,{"inputs":[{"name":"arc"},{"name":"str"}],"output":{"name":"option"}}],[11,"num_buffers","","",295,{"inputs":[{"name":"arc"}],"output":{"name":"u32"}}],[11,"buffer_info","","",295,null],[11,"buffers","","",295,{"inputs":[{"name":"arc"}],"output":{"name":"optionintoiter"}}],[11,"attrib","","",295,{"inputs":[{"name":"arc"},{"name":"str"}],"output":{"name":"option"}}],[11,"num_buffers","","",295,{"inputs":[{"name":"arc"}],"output":{"name":"u32"}}],[11,"buffer_info","","",295,null],[11,"buffers","","",295,{"inputs":[{"name":"arc"}],"output":{"name":"optionintoiter"}}],[11,"attrib","","",295,{"inputs":[{"name":"arc"},{"name":"str"}],"output":{"name":"option"}}],[11,"num_buffers","","",295,{"inputs":[{"name":"arc"}],"output":{"name":"u32"}}],[11,"buffer_info","","",295,null],[11,"buffers","","",295,{"inputs":[{"name":"arc"}],"output":{"name":"optionintoiter"}}],[11,"attrib","","",295,{"inputs":[{"name":"arc"},{"name":"str"}],"output":{"name":"option"}}],[11,"num_buffers","","",295,{"inputs":[{"name":"arc"}],"output":{"name":"u32"}}],[11,"buffer_info","","",295,null],[11,"buffers","","",295,{"inputs":[{"name":"arc"}],"output":{"name":"optionintoiter"}}],[11,"attrib","","",295,{"inputs":[{"name":"arc"},{"name":"str"}],"output":{"name":"option"}}],[11,"num_buffers","","",295,{"inputs":[{"name":"arc"}],"output":{"name":"u32"}}],[11,"buffer_info","","",295,null],[11,"buffers","","",295,{"inputs":[{"name":"arc"}],"output":{"name":"optionintoiter"}}],[0,"viewport","vulkano::pipeline","",null,null],[3,"Viewport","vulkano::pipeline::viewport","",null,null],[12,"origin","","",296,null],[12,"dimensions","","",296,null],[12,"depth_range","","",296,null],[3,"Scissor","","",null,null],[12,"origin","","",297,null],[12,"dimensions","","",297,null],[4,"ViewportsState","","",null,null],[13,"Fixed","","",298,null],[12,"data","vulkano::pipeline::viewport::ViewportsState","",298,null],[13,"DynamicViewports","vulkano::pipeline::viewport","",298,null],[12,"scissors","vulkano::pipeline::viewport::ViewportsState","",298,null],[13,"DynamicScissors","vulkano::pipeline::viewport","",298,null],[12,"viewports","vulkano::pipeline::viewport::ViewportsState","",298,null],[13,"Dynamic","vulkano::pipeline::viewport","",298,null],[12,"num","vulkano::pipeline::viewport::ViewportsState","",298,null],[11,"clone","vulkano::pipeline::viewport","",298,{"inputs":[{"name":"viewportsstate"}],"output":{"name":"viewportsstate"}}],[11,"fmt","","",298,{"inputs":[{"name":"viewportsstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"dynamic_viewports","","",298,{"inputs":[{"name":"viewportsstate"}],"output":{"name":"bool"}}],[11,"dynamic_scissors","","",298,{"inputs":[{"name":"viewportsstate"}],"output":{"name":"bool"}}],[11,"num_viewports","","",298,{"inputs":[{"name":"viewportsstate"}],"output":{"name":"u32"}}],[11,"clone","","",296,{"inputs":[{"name":"viewport"}],"output":{"name":"viewport"}}],[11,"fmt","","",296,{"inputs":[{"name":"viewport"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",297,{"inputs":[{"name":"scissor"}],"output":{"name":"scissor"}}],[11,"fmt","","",297,{"inputs":[{"name":"scissor"},{"name":"formatter"}],"output":{"name":"result"}}],[8,"GenericPipeline","vulkano::pipeline","",null,null],[0,"sampler","vulkano","How to retreive data from an image within a shader.",null,null],[3,"Sampler","vulkano::sampler","Describes how to retreive data from an image within a shader.",null,null],[4,"Filter","","Describes how the color of each pixel should be determined.",null,null],[13,"Linear","","The four pixels whose center surround the requested coordinates are taken, then their\nvalues are interpolated.",299,null],[13,"Nearest","","The pixel whose center is nearest to the requested coordinates is taken from the source\nand its value is returned as-is.",299,null],[4,"MipmapMode","","Describes which mipmap from the source to use.",null,null],[13,"Nearest","","Use the mipmap whose dimensions are the nearest to the dimensions of the destination.",300,null],[13,"Linear","","Take the two mipmaps whose dimensions are immediately inferior and superior to the\ndimensions of the destination, calculate the value for both, and interpolate them.",300,null],[4,"SamplerAddressMode","","",null,null],[13,"Repeat","","",301,null],[13,"MirroredRepeat","","",301,null],[13,"ClampToEdge","","",301,null],[13,"ClampToBorder","","",301,null],[13,"MirrorClampToEdge","","",301,null],[11,"new","","Creates a new `Sampler` with the given behavior.",302,{"inputs":[{"name":"sampler"},{"name":"arc"},{"name":"filter"},{"name":"filter"},{"name":"mipmapmode"},{"name":"sampleraddressmode"},{"name":"sampleraddressmode"},{"name":"sampleraddressmode"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"result"}}],[11,"drop","","",302,{"inputs":[{"name":"sampler"}],"output":null}],[11,"hash","","",299,null],[11,"eq","","",299,{"inputs":[{"name":"filter"},{"name":"filter"}],"output":{"name":"bool"}}],[11,"ne","","",299,{"inputs":[{"name":"filter"},{"name":"filter"}],"output":{"name":"bool"}}],[11,"clone","","",299,{"inputs":[{"name":"filter"}],"output":{"name":"filter"}}],[11,"fmt","","",299,{"inputs":[{"name":"filter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",300,null],[11,"eq","","",300,{"inputs":[{"name":"mipmapmode"},{"name":"mipmapmode"}],"output":{"name":"bool"}}],[11,"ne","","",300,{"inputs":[{"name":"mipmapmode"},{"name":"mipmapmode"}],"output":{"name":"bool"}}],[11,"clone","","",300,{"inputs":[{"name":"mipmapmode"}],"output":{"name":"mipmapmode"}}],[11,"fmt","","",300,{"inputs":[{"name":"mipmapmode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",301,null],[11,"eq","","",301,{"inputs":[{"name":"sampleraddressmode"},{"name":"sampleraddressmode"}],"output":{"name":"bool"}}],[11,"ne","","",301,{"inputs":[{"name":"sampleraddressmode"},{"name":"sampleraddressmode"}],"output":{"name":"bool"}}],[11,"clone","","",301,{"inputs":[{"name":"sampleraddressmode"}],"output":{"name":"sampleraddressmode"}}],[11,"fmt","","",301,{"inputs":[{"name":"sampleraddressmode"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"shader","vulkano","",null,null],[3,"ShaderModule","vulkano::shader","Contains SPIR-V code with one or more entry points.",null,null],[3,"VertexShaderEntryPoint","","",null,null],[3,"ComputeShaderEntryPoint","","",null,null],[3,"FragmentShaderEntryPoint","","",null,null],[3,"SpecializationMapEntry","","Describes an invidiual constant to set in the shader. Also a field in the struct.",null,null],[12,"constant_id","","Identifier of the constant in the shader that corresponds to this field.",303,null],[12,"offset","","Offset within this struct for the data.",303,null],[12,"size","","Size of the data in bytes.",303,null],[8,"SpecializationConstants","","Trait to describe structs that contain specialization data for shaders.",null,null],[10,"descriptors","","Returns descriptors of the struct&#39;s layout.",304,null],[8,"PushConstants","","Trait to describe structs that contain push constants for shaders.",null,null],[11,"new","","Builds a new shader module from SPIR-V.",305,null],[11,"vertex_shader_entry_point","","",305,{"inputs":[{"name":"shadermodule"},{"name":"cstr"},{"name":"vec"}],"output":{"name":"vertexshaderentrypoint"}}],[11,"fragment_shader_entry_point","","Gets access to an entry point contained in this module.",305,{"inputs":[{"name":"shadermodule"},{"name":"cstr"}],"output":{"name":"fragmentshaderentrypoint"}}],[11,"internal_object","","",305,{"inputs":[{"name":"shadermodule"}],"output":{"name":"shadermodule"}}],[11,"drop","","",305,{"inputs":[{"name":"shadermodule"}],"output":null}],[11,"module","","",306,{"inputs":[{"name":"vertexshaderentrypoint"}],"output":{"name":"shadermodule"}}],[11,"name","","",306,{"inputs":[{"name":"vertexshaderentrypoint"}],"output":{"name":"cstr"}}],[11,"attributes","","",306,null],[11,"module","","",307,{"inputs":[{"name":"fragmentshaderentrypoint"}],"output":{"name":"shadermodule"}}],[11,"name","","",307,{"inputs":[{"name":"fragmentshaderentrypoint"}],"output":{"name":"cstr"}}],[0,"swapchain","vulkano","Link between Vulkan and a window and/or the screen.",null,null],[3,"Capabilities","vulkano::swapchain","The capabilities of a surface when used by a physical device.",null,null],[12,"image_count","","Range of the number of images that can be created. Please remember that the end is out of\nthe range.",308,null],[12,"current_extent","","The current dimensions of the surface. `None` means that the surface&#39;s dimensions will\ndepend on the dimensions of the swapchain that you are going to create.",308,null],[12,"min_image_extent","","",308,null],[12,"max_image_extent","","",308,null],[12,"max_image_array_layers","","",308,null],[12,"supported_transforms","","",308,null],[12,"current_transform","","",308,null],[12,"supported_composite_alpha","","",308,null],[12,"supported_usage_flags","","",308,null],[12,"supported_formats","","",308,null],[12,"present_modes","","List of present modes that are supported.",308,null],[3,"Surface","","Represents a surface on the screen.",null,null],[3,"Swapchain","","Contains the swapping system and the images that can be shown on a surface.",null,null],[3,"DisplayPlane","","?",null,null],[3,"Display","","Represents a monitor connected to a physical device.",null,null],[3,"DisplayMode","","Represents a mode on a specific display.",null,null],[4,"PresentMode","","The way presenting a swapchain is accomplished.",null,null],[13,"Immediate","","Immediately shows the image to the user. May result in visible tearing.",309,null],[13,"Mailbox","","The action of presenting an image puts it in wait. When the next vertical blanking period\nhappens, the waiting image is effectively shown to the user. If an image is presented while\nanother one is waiting, it is replaced.",309,null],[13,"Fifo","","The action of presenting an image adds it to a queue of images. At each vertical blanking\nperiod, the queue is poped and an image is presented.",309,null],[13,"Relaxed","","Same as `Fifo`, except that if the queue was empty during the previous vertical blanking\nperiod then it is equivalent to `Immediate`.",309,null],[4,"SurfaceTransform","","A transformation to apply to the image before showing it on the screen.",null,null],[13,"Identity","","",310,null],[13,"Rotate90","","",310,null],[13,"Rotate180","","",310,null],[13,"Rotate270","","",310,null],[13,"HorizontalMirror","","",310,null],[13,"HorizontalMirrorRotate90","","",310,null],[13,"HorizontalMirrorRotate180","","",310,null],[13,"HorizontalMirrorRotate270","","",310,null],[13,"Inherit","","",310,null],[4,"CompositeAlpha","","",null,null],[13,"Opaque","","The alpha channel of the image is ignored. All the pixels are considered as if they have a\nvalue of 1.0.",311,null],[13,"PreMultiplied","","The alpha channel of the image is respected. The color channels are expected to have\nalready been multiplied by the alpha value.",311,null],[13,"PostMultiplied","","The alpha channel of the image is respected. The color channels will be multiplied by the\nalpha value by the compositor before being added to what is behind.",311,null],[13,"Inherit","","Platform-specific behavior.",311,null],[4,"ColorSpace","","",null,null],[13,"SrgbNonLinear","","",312,null],[4,"AcquireError","","Error that can happen when calling `acquire_next_image`.",null,null],[13,"Timeout","","",313,null],[13,"SurfaceLost","","",313,null],[13,"OutOfDate","","",313,null],[11,"from_display_mode","","Creates a `Surface` that covers a display mode.",314,{"inputs":[{"name":"surface"},{"name":"displaymode"},{"name":"displayplane"}],"output":{"name":"result"}}],[11,"from_hwnd","","Creates a `Surface` from a Win32 window.",314,null],[11,"from_anativewindow","","Creates a `Surface` from an Android window.",314,null],[11,"is_supported","","Returns true if the given queue family can draw on this surface.",314,{"inputs":[{"name":"surface"},{"name":"queuefamily"}],"output":{"name":"result"}}],[11,"get_capabilities","","Retreives the capabilities of a surface when used by a certain device.",314,{"inputs":[{"name":"surface"},{"name":"physicaldevice"}],"output":{"name":"result"}}],[11,"internal_object","","",314,{"inputs":[{"name":"surface"}],"output":{"name":"surfacekhr"}}],[11,"drop","","",314,{"inputs":[{"name":"surface"}],"output":null}],[11,"fmt","","",308,{"inputs":[{"name":"capabilities"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",308,{"inputs":[{"name":"capabilities"}],"output":{"name":"capabilities"}}],[11,"eq","","",309,{"inputs":[{"name":"presentmode"},{"name":"presentmode"}],"output":{"name":"bool"}}],[11,"ne","","",309,{"inputs":[{"name":"presentmode"},{"name":"presentmode"}],"output":{"name":"bool"}}],[11,"fmt","","",309,{"inputs":[{"name":"presentmode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",309,{"inputs":[{"name":"presentmode"}],"output":{"name":"presentmode"}}],[11,"eq","","",310,{"inputs":[{"name":"surfacetransform"},{"name":"surfacetransform"}],"output":{"name":"bool"}}],[11,"ne","","",310,{"inputs":[{"name":"surfacetransform"},{"name":"surfacetransform"}],"output":{"name":"bool"}}],[11,"fmt","","",310,{"inputs":[{"name":"surfacetransform"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",310,{"inputs":[{"name":"surfacetransform"}],"output":{"name":"surfacetransform"}}],[11,"default","","",310,{"inputs":[{"name":"surfacetransform"}],"output":{"name":"surfacetransform"}}],[11,"eq","","",311,{"inputs":[{"name":"compositealpha"},{"name":"compositealpha"}],"output":{"name":"bool"}}],[11,"ne","","",311,{"inputs":[{"name":"compositealpha"},{"name":"compositealpha"}],"output":{"name":"bool"}}],[11,"fmt","","",311,{"inputs":[{"name":"compositealpha"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",311,{"inputs":[{"name":"compositealpha"}],"output":{"name":"compositealpha"}}],[11,"eq","","",312,{"inputs":[{"name":"colorspace"},{"name":"colorspace"}],"output":{"name":"bool"}}],[11,"ne","","",312,{"inputs":[{"name":"colorspace"},{"name":"colorspace"}],"output":{"name":"bool"}}],[11,"fmt","","",312,{"inputs":[{"name":"colorspace"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",312,{"inputs":[{"name":"colorspace"}],"output":{"name":"colorspace"}}],[11,"new","","Builds a new swapchain. Allocates images who content can be made visible on a surface.",315,null],[11,"acquire_next_image","","Tries to take ownership of an image in order to draw on it.",315,{"inputs":[{"name":"swapchain"},{"name":"u64"}],"output":{"name":"result"}}],[11,"present","","Presents an image on the screen.",315,{"inputs":[{"name":"swapchain"},{"name":"queue"},{"name":"usize"}],"output":{"name":"result"}}],[11,"drop","","",315,{"inputs":[{"name":"swapchain"}],"output":null}],[11,"eq","","",313,{"inputs":[{"name":"acquireerror"},{"name":"acquireerror"}],"output":{"name":"bool"}}],[11,"ne","","",313,{"inputs":[{"name":"acquireerror"},{"name":"acquireerror"}],"output":{"name":"bool"}}],[11,"fmt","","",313,{"inputs":[{"name":"acquireerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",313,{"inputs":[{"name":"acquireerror"}],"output":{"name":"acquireerror"}}],[11,"description","","",313,{"inputs":[{"name":"acquireerror"}],"output":{"name":"str"}}],[11,"fmt","","",313,{"inputs":[{"name":"acquireerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",313,{"inputs":[{"name":"acquireerror"},{"name":"error"}],"output":{"name":"acquireerror"}}],[11,"enumerate","","Enumerates all the display planes that are available on a given physical device.",316,{"inputs":[{"name":"displayplane"},{"name":"physicaldevice"}],"output":{"name":"result"}}],[11,"supports","","Returns true if this plane supports the given display.",316,{"inputs":[{"name":"displayplane"},{"name":"display"}],"output":{"name":"bool"}}],[11,"clone","","",317,{"inputs":[{"name":"display"}],"output":{"name":"display"}}],[11,"enumerate","","Enumerates all the displays that are available on a given physical device.",317,{"inputs":[{"name":"display"},{"name":"physicaldevice"}],"output":{"name":"result"}}],[11,"name","","Returns the name of the display.",317,{"inputs":[{"name":"display"}],"output":{"name":"str"}}],[11,"physical_resolution","","Returns the physical resolution of the display.",317,null],[11,"display_modes","","Returns a list of all modes available on this display.",317,{"inputs":[{"name":"display"}],"output":{"name":"result"}}],[11,"internal_object","","",317,{"inputs":[{"name":"display"}],"output":{"name":"displaykhr"}}],[11,"display","","Returns the display corresponding to this mode.",318,{"inputs":[{"name":"displaymode"}],"output":{"name":"display"}}],[11,"visible_region","","Returns the dimensions of the region that is visible on the monitor.",318,null],[11,"refresh_rate","","Returns the refresh rate of this mode.",318,{"inputs":[{"name":"displaymode"}],"output":{"name":"u32"}}],[0,"sync","vulkano","Synchronization primitives for Vulkan objects.",null,null],[3,"Fence","vulkano::sync","A fence is used to know when a command buffer submission has finished its execution.",null,null],[3,"Semaphore","","Used to provide synchronization between command buffers during their execution.",null,null],[3,"Event","","Used to block the GPU execution until an event on the CPU occurs.",null,null],[4,"SharingMode","","Declares in which queue(s) a resource can be used.",null,null],[13,"Exclusive","","The resource is used is only one queue family.",319,null],[13,"Concurrent","","The resource is used in multiple queue families. Can be slower than `Exclusive`.",319,null],[8,"Resource","","Base trait for objects that can be used as resources and must be synchronized.",null,null],[10,"sharing_mode","","Returns in which queue family or families this resource can be used.",320,{"inputs":[{"name":"resource"}],"output":{"name":"sharingmode"}}],[11,"requires_fence","","Returns true if the `gpu_access` function should be passed a fence.",320,{"inputs":[{"name":"resource"}],"output":{"name":"bool"}}],[11,"requires_semaphore","","Returns true if the `gpu_access` function should be passed a semaphore.",320,{"inputs":[{"name":"resource"}],"output":{"name":"bool"}}],[11,"eq","","",319,{"inputs":[{"name":"sharingmode"},{"name":"sharingmode"}],"output":{"name":"bool"}}],[11,"ne","","",319,{"inputs":[{"name":"sharingmode"},{"name":"sharingmode"}],"output":{"name":"bool"}}],[11,"clone","","",319,{"inputs":[{"name":"sharingmode"}],"output":{"name":"sharingmode"}}],[11,"fmt","","",319,{"inputs":[{"name":"sharingmode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",319,{"inputs":[{"name":"sharingmode"},{"name":"arc"}],"output":{"name":"sharingmode"}}],[11,"from","","",319,null],[11,"new","","Builds a new fence.",321,{"inputs":[{"name":"fence"},{"name":"arc"}],"output":{"name":"result"}}],[11,"signaled","","Builds a new fence already in the &quot;signaled&quot; state.",321,{"inputs":[{"name":"fence"},{"name":"arc"}],"output":{"name":"result"}}],[11,"ready","","Returns true if the fence is signaled.",321,{"inputs":[{"name":"fence"}],"output":{"name":"result"}}],[11,"wait","","Waits until the fence is signaled, or at least until the number of nanoseconds of the\ntimeout has elapsed.",321,{"inputs":[{"name":"fence"},{"name":"u64"}],"output":{"name":"result"}}],[11,"reset","","Resets the fence.",321,{"inputs":[{"name":"fence"}],"output":null}],[11,"multi_reset","","Resets multiple fences at once.",321,{"inputs":[{"name":"fence"},{"name":"i"}],"output":null}],[11,"internal_object","","",321,{"inputs":[{"name":"fence"}],"output":{"name":"fence"}}],[11,"drop","","",321,{"inputs":[{"name":"fence"}],"output":null}],[11,"new","","Builds a new semaphore.",322,{"inputs":[{"name":"semaphore"},{"name":"arc"}],"output":{"name":"result"}}],[11,"internal_object","","",322,{"inputs":[{"name":"semaphore"}],"output":{"name":"semaphore"}}],[11,"drop","","",322,{"inputs":[{"name":"semaphore"}],"output":null}],[11,"new","","Builds a new event.",323,{"inputs":[{"name":"event"},{"name":"arc"}],"output":{"name":"result"}}],[11,"signaled","","Returns true if the event is signaled.",323,{"inputs":[{"name":"event"}],"output":{"name":"result"}}],[11,"set","","Changes the `Event` to the signaled state.",323,{"inputs":[{"name":"event"}],"output":{"name":"result"}}],[11,"reset","","Changes the `Event` to the unsignaled state.",323,{"inputs":[{"name":"event"}],"output":{"name":"result"}}],[11,"internal_object","","",323,{"inputs":[{"name":"event"}],"output":{"name":"event"}}],[11,"drop","","",323,{"inputs":[{"name":"event"}],"output":null}],[8,"VulkanObject","vulkano","Gives access to the internal identifier of an object.",null,null],[16,"Object","","The type of the object.",324,null],[10,"internal_object","","Returns a reference to the object.",324,{"inputs":[{"name":"vulkanobject"}],"output":{"name":"object"}}],[8,"VulkanObjectU64","","",null,null],[10,"internal_object","","",325,{"inputs":[{"name":"vulkanobjectu64"}],"output":{"name":"u64"}}],[8,"VulkanObjectUsize","","",null,null],[10,"internal_object","","",326,{"inputs":[{"name":"vulkanobjectusize"}],"output":{"name":"usize"}}],[11,"open","shared_library::dynamic_library","Lazily open a dynamic library. When passed None it gives a\nhandle to the calling process",327,{"inputs":[{"name":"dynamiclibrary"},{"name":"option"}],"output":{"name":"result"}}],[11,"prepend_search_path","","Prepends a path to this process&#39;s search path for dynamic libraries",327,null],[11,"create_path","","From a slice of paths, create a new vector which is suitable to be an\nenvironment variable for this platforms dylib search path.",327,null],[11,"envvar","","Returns the environment variable for this process&#39;s dynamic library\nsearch path",327,{"inputs":[{"name":"dynamiclibrary"}],"output":{"name":"str"}}],[11,"search_path","","Returns the current search path for dynamic libraries being used by this\nprocess",327,{"inputs":[{"name":"dynamiclibrary"}],"output":{"name":"vec"}}],[11,"symbol","","Access the value at the symbol of the dynamic library",327,{"inputs":[{"name":"dynamiclibrary"},{"name":"str"}],"output":{"name":"result"}}],[11,"drop","","",327,null],[11,"new","std::sync::mutex","Creates a new mutex in an unlocked state ready for use.",328,{"inputs":[{"name":"mutex"},{"name":"t"}],"output":{"name":"mutex"}}],[11,"lock","","Acquires a mutex, blocking the current thread until it is able to do so.",328,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"try_lock","","Attempts to acquire this lock.",328,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"is_poisoned","","Determines whether the lock is poisoned.",328,{"inputs":[{"name":"mutex"}],"output":{"name":"bool"}}],[11,"into_inner","","Consumes this mutex, returning the underlying data.",328,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"get_mut","","Returns a mutable reference to the underlying data.",328,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"from","alloc::boxed","",329,{"inputs":[{"name":"box"},{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",329,{"inputs":[{"name":"box"},{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",329,{"inputs":[{"name":"box"},{"name":"string"}],"output":{"name":"box"}}],[11,"from","","",329,{"inputs":[{"name":"box"},{"name":"string"}],"output":{"name":"box"}}],[11,"from","","",329,{"inputs":[{"name":"box"},{"name":"str"}],"output":{"name":"box"}}],[11,"from","","",329,{"inputs":[{"name":"box"},{"name":"str"}],"output":{"name":"box"}}],[11,"description","core::str","",330,{"inputs":[{"name":"parseboolerror"}],"output":{"name":"str"}}],[11,"description","","",331,{"inputs":[{"name":"utf8error"}],"output":{"name":"str"}}],[11,"description","core::num","",332,{"inputs":[{"name":"parseinterror"}],"output":{"name":"str"}}],[11,"description","core::num::dec2flt","",333,{"inputs":[{"name":"parsefloaterror"}],"output":{"name":"str"}}],[11,"description","collections::string","",334,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"str"}}],[11,"description","","",335,{"inputs":[{"name":"fromutf16error"}],"output":{"name":"str"}}],[11,"description","","",336,{"inputs":[{"name":"parseerror"}],"output":{"name":"str"}}],[11,"description","alloc::boxed","",329,{"inputs":[{"name":"box"}],"output":{"name":"str"}}],[11,"cause","","",329,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"is","","Returns true if the boxed type is the same as `T`",337,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",337,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",337,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",337,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",337,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",337,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",337,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",337,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",337,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",337,{"inputs":[{"name":"error"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",337,{"inputs":[{"name":"error"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",337,{"inputs":[{"name":"error"}],"output":{"name":"result"}}],[11,"next","std::ascii","",338,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"size_hint","","",338,null],[11,"next_back","","",338,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"shl","core::num","",339,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",339,null],[11,"shr","","",339,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",339,null],[11,"shl","","",339,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",339,null],[11,"shr","","",339,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",339,null],[11,"shl","","",339,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",339,null],[11,"shr","","",339,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",339,null],[11,"shl","","",339,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",339,null],[11,"shr","","",339,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",339,null],[11,"shl","","",339,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",339,null],[11,"shr","","",339,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",339,null],[11,"shl","","",339,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",339,null],[11,"shr","","",339,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",339,null],[11,"shl","","",339,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",339,null],[11,"shr","","",339,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",339,null],[11,"shl","","",339,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",339,null],[11,"shr","","",339,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",339,null],[11,"shl","","",339,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",339,null],[11,"shr","","",339,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",339,null],[11,"shl","","",339,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",339,null],[11,"shr","","",339,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",339,null],[11,"add","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",339,null],[11,"sub","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",339,null],[11,"mul","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",339,null],[11,"div","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",339,null],[11,"rem","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",339,null],[11,"not","","",339,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",339,null],[11,"bitor","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",339,null],[11,"bitand","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",339,null],[11,"add","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",339,null],[11,"sub","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",339,null],[11,"mul","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",339,null],[11,"div","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",339,null],[11,"rem","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",339,null],[11,"not","","",339,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",339,null],[11,"bitor","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",339,null],[11,"bitand","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",339,null],[11,"add","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",339,null],[11,"sub","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",339,null],[11,"mul","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",339,null],[11,"div","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",339,null],[11,"rem","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",339,null],[11,"not","","",339,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",339,null],[11,"bitor","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",339,null],[11,"bitand","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",339,null],[11,"add","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",339,null],[11,"sub","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",339,null],[11,"mul","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",339,null],[11,"div","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",339,null],[11,"rem","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",339,null],[11,"not","","",339,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",339,null],[11,"bitor","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",339,null],[11,"bitand","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",339,null],[11,"add","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",339,null],[11,"sub","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",339,null],[11,"mul","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",339,null],[11,"div","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",339,null],[11,"rem","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",339,null],[11,"not","","",339,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",339,null],[11,"bitor","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",339,null],[11,"bitand","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",339,null],[11,"add","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",339,null],[11,"sub","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",339,null],[11,"mul","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",339,null],[11,"div","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",339,null],[11,"rem","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",339,null],[11,"not","","",339,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",339,null],[11,"bitor","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",339,null],[11,"bitand","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",339,null],[11,"add","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",339,null],[11,"sub","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",339,null],[11,"mul","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",339,null],[11,"div","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",339,null],[11,"rem","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",339,null],[11,"not","","",339,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",339,null],[11,"bitor","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",339,null],[11,"bitand","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",339,null],[11,"add","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",339,null],[11,"sub","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",339,null],[11,"mul","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",339,null],[11,"div","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",339,null],[11,"rem","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",339,null],[11,"not","","",339,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",339,null],[11,"bitor","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",339,null],[11,"bitand","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",339,null],[11,"add","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",339,null],[11,"sub","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",339,null],[11,"mul","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",339,null],[11,"div","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",339,null],[11,"rem","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",339,null],[11,"not","","",339,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",339,null],[11,"bitor","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",339,null],[11,"bitand","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",339,null],[11,"add","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",339,null],[11,"sub","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",339,null],[11,"mul","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",339,null],[11,"div","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",339,null],[11,"rem","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",339,null],[11,"not","","",339,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",339,null],[11,"bitor","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",339,null],[11,"bitand","","",339,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",339,null],[11,"clone","std::thread::local","",340,{"inputs":[{"name":"localkeystate"}],"output":{"name":"localkeystate"}}],[11,"eq","","",340,{"inputs":[{"name":"localkeystate"},{"name":"localkeystate"}],"output":{"name":"bool"}}],[11,"ne","","",340,{"inputs":[{"name":"localkeystate"},{"name":"localkeystate"}],"output":{"name":"bool"}}],[11,"with","","Acquires a reference to the value in this TLS key.",341,{"inputs":[{"name":"localkey"},{"name":"f"}],"output":{"name":"r"}}],[11,"state","","Query the current state of this key.",341,{"inputs":[{"name":"localkey"}],"output":{"name":"localkeystate"}}],[11,"new","std::thread::local::elf","",342,{"inputs":[{"name":"key"}],"output":{"name":"key"}}],[11,"get","","",342,{"inputs":[{"name":"key"}],"output":{"name":"option"}}],[11,"new","std::thread::local::os","",343,{"inputs":[{"name":"key"}],"output":{"name":"key"}}],[11,"get","","",343,{"inputs":[{"name":"key"}],"output":{"name":"option"}}],[11,"set","std::thread::scoped_tls","Inserts a value into this scoped thread local storage slot for a\nduration of a closure.",344,{"inputs":[{"name":"scopedkey"},{"name":"t"},{"name":"f"}],"output":{"name":"r"}}],[11,"with","","Gets a value out of this scoped variable.",344,{"inputs":[{"name":"scopedkey"},{"name":"f"}],"output":{"name":"r"}}],[11,"is_set","","Test whether this TLS key has been `set` for the current thread.",344,{"inputs":[{"name":"scopedkey"}],"output":{"name":"bool"}}],[11,"new","std::thread::scoped_tls::imp","",345,{"inputs":[{"name":"keyinner"}],"output":{"name":"keyinner"}}],[11,"set","","",345,null],[11,"get","","",345,null],[11,"new","std::thread","Generates the base configuration for spawning a thread, from which\nconfiguration methods can be chained.",346,{"inputs":[{"name":"builder"}],"output":{"name":"builder"}}],[11,"name","","Names the thread-to-be. Currently the name is used for identification\nonly in panic messages.",346,{"inputs":[{"name":"builder"},{"name":"string"}],"output":{"name":"builder"}}],[11,"stack_size","","Sets the size of the stack for the new thread.",346,{"inputs":[{"name":"builder"},{"name":"usize"}],"output":{"name":"builder"}}],[11,"spawn","","Spawns a new thread, and returns a join handle for it.",346,{"inputs":[{"name":"builder"},{"name":"f"}],"output":{"name":"result"}}],[11,"clone","","",347,{"inputs":[{"name":"thread"}],"output":{"name":"thread"}}],[11,"unpark","","Atomically makes the handle&#39;s token available if it is not already.",347,null],[11,"name","","Gets the thread&#39;s name.",347,{"inputs":[{"name":"thread"}],"output":{"name":"option"}}],[11,"fmt","","",347,{"inputs":[{"name":"thread"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",347,{"inputs":[{"name":"thread"},{"name":"option"}],"output":{"name":"thread"}}],[11,"thread","","Extracts a handle to the underlying thread",348,{"inputs":[{"name":"joinhandle"}],"output":{"name":"thread"}}],[11,"join","","Waits for the associated thread to finish.",348,{"inputs":[{"name":"joinhandle"}],"output":{"name":"result"}}],[11,"clone","std::collections::hash::table","",349,{"inputs":[{"name":"rawbucket"}],"output":{"name":"rawbucket"}}],[11,"clone","","",350,{"inputs":[{"name":"bucket"}],"output":{"name":"bucket"}}],[11,"clone","","",351,{"inputs":[{"name":"safehash"}],"output":{"name":"safehash"}}],[11,"eq","","",351,{"inputs":[{"name":"safehash"},{"name":"safehash"}],"output":{"name":"bool"}}],[11,"ne","","",351,{"inputs":[{"name":"safehash"},{"name":"safehash"}],"output":{"name":"bool"}}],[11,"inspect","","Peek at the hash value, which is guaranteed to be non-zero.",351,{"inputs":[{"name":"safehash"}],"output":{"name":"u64"}}],[11,"table","","Borrow a reference to the table.",352,{"inputs":[{"name":"fullbucket"}],"output":{"name":"m"}}],[11,"into_table","","Move out the reference to the table.",352,{"inputs":[{"name":"fullbucket"}],"output":{"name":"m"}}],[11,"index","","Get the raw index.",352,{"inputs":[{"name":"fullbucket"}],"output":{"name":"usize"}}],[11,"table","","Borrow a reference to the table.",353,{"inputs":[{"name":"emptybucket"}],"output":{"name":"m"}}],[11,"into_table","","Move out the reference to the table.",353,{"inputs":[{"name":"emptybucket"}],"output":{"name":"m"}}],[11,"into_table","","Move out the reference to the table.",350,{"inputs":[{"name":"bucket"}],"output":{"name":"m"}}],[11,"index","","Get the raw index.",350,{"inputs":[{"name":"bucket"}],"output":{"name":"usize"}}],[11,"new","","",350,{"inputs":[{"name":"bucket"},{"name":"m"},{"name":"safehash"}],"output":{"name":"bucket"}}],[11,"at_index","","",350,{"inputs":[{"name":"bucket"},{"name":"m"},{"name":"usize"}],"output":{"name":"bucket"}}],[11,"first","","",350,{"inputs":[{"name":"bucket"},{"name":"m"}],"output":{"name":"bucket"}}],[11,"peek","","Reads a bucket at a given index, returning an enum indicating whether\nit&#39;s initialized or not. You need to match on this enum to get\nthe appropriate types to call most of the other functions in\nthis module.",350,{"inputs":[{"name":"bucket"}],"output":{"name":"bucketstate"}}],[11,"next","","Modifies the bucket pointer in place to make it point to the next slot.",350,null],[11,"next","","",353,{"inputs":[{"name":"emptybucket"}],"output":{"name":"bucket"}}],[11,"into_bucket","","",353,{"inputs":[{"name":"emptybucket"}],"output":{"name":"bucket"}}],[11,"gap_peek","","",353,{"inputs":[{"name":"emptybucket"}],"output":{"name":"option"}}],[11,"put","","Puts given key and value pair, along with the key&#39;s hash,\ninto this bucket in the hashtable. Note how `self` is &#39;moved&#39; into\nthis function, because this slot will no longer be empty when\nwe return! A `FullBucket` is returned for later use, pointing to\nthe newly-filled slot in the hashtable.",353,{"inputs":[{"name":"emptybucket"},{"name":"safehash"},{"name":"k"},{"name":"v"}],"output":{"name":"fullbucket"}}],[11,"next","","",352,{"inputs":[{"name":"fullbucket"}],"output":{"name":"bucket"}}],[11,"into_bucket","","",352,{"inputs":[{"name":"fullbucket"}],"output":{"name":"bucket"}}],[11,"distance","","Get the distance between this bucket and the &#39;ideal&#39; location\nas determined by the key&#39;s hash stored in it.",352,{"inputs":[{"name":"fullbucket"}],"output":{"name":"usize"}}],[11,"hash","","",352,{"inputs":[{"name":"fullbucket"}],"output":{"name":"safehash"}}],[11,"read","","Gets references to the key and value at a given index.",352,null],[11,"take","","Removes this bucket&#39;s key and value from the hashtable.",352,null],[11,"replace","","",352,null],[11,"read_mut","","Gets mutable references to the key and value at a given index.",352,null],[11,"into_refs","","Exchange a bucket state for immutable references into the table.\nBecause the underlying reference to the table is also consumed,\nno further changes to the structure of the table are possible;\nin exchange for this, the returned references have a longer lifetime\nthan the references returned by `read()`.",352,null],[11,"into_mut_refs","","This works similarly to `into_refs`, exchanging a bucket state\nfor mutable references into the table.",352,null],[11,"expect_full","","",354,{"inputs":[{"name":"bucketstate"}],"output":{"name":"fullbucket"}}],[11,"full","","",355,{"inputs":[{"name":"gapthenfull"}],"output":{"name":"fullbucket"}}],[11,"shift","","",355,{"inputs":[{"name":"gapthenfull"}],"output":{"name":"option"}}],[11,"new","","Creates a new raw table from a given capacity. All buckets are\ninitially empty.",356,{"inputs":[{"name":"rawtable"},{"name":"usize"}],"output":{"name":"rawtable"}}],[11,"capacity","","The hashtable&#39;s capacity, similar to a vector&#39;s.",356,{"inputs":[{"name":"rawtable"}],"output":{"name":"usize"}}],[11,"size","","The number of elements ever `put` in the hashtable, minus the number\nof elements ever `take`n.",356,{"inputs":[{"name":"rawtable"}],"output":{"name":"usize"}}],[11,"iter","","",356,{"inputs":[{"name":"rawtable"}],"output":{"name":"iter"}}],[11,"iter_mut","","",356,{"inputs":[{"name":"rawtable"}],"output":{"name":"itermut"}}],[11,"into_iter","","",356,{"inputs":[{"name":"rawtable"}],"output":{"name":"intoiter"}}],[11,"drain","","",356,{"inputs":[{"name":"rawtable"}],"output":{"name":"drain"}}],[11,"clone","","",357,{"inputs":[{"name":"rawbuckets"}],"output":{"name":"rawbuckets"}}],[11,"next","","",357,{"inputs":[{"name":"rawbuckets"}],"output":{"name":"option"}}],[11,"next","","",358,{"inputs":[{"name":"revmovebuckets"}],"output":{"name":"option"}}],[11,"clone","","",359,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",359,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",359,null],[11,"len","","",359,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"next","","",360,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",360,null],[11,"len","","",360,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"next","","",361,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",361,null],[11,"len","","",361,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next","","",362,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",362,null],[11,"len","","",362,{"inputs":[{"name":"drain"}],"output":{"name":"usize"}}],[11,"drop","","",362,null],[11,"clone","","",356,{"inputs":[{"name":"rawtable"}],"output":{"name":"rawtable"}}],[11,"drop","","",356,null],[11,"clone","std::collections::hash::map","",363,{"inputs":[{"name":"defaultresizepolicy"}],"output":{"name":"defaultresizepolicy"}}],[11,"clone","","",364,{"inputs":[{"name":"hashmap"}],"output":{"name":"hashmap"}}],[11,"new","","Creates an empty HashMap.",364,{"inputs":[{"name":"hashmap"}],"output":{"name":"hashmap"}}],[11,"with_capacity","","Creates an empty hash map with the given initial capacity.",364,{"inputs":[{"name":"hashmap"},{"name":"usize"}],"output":{"name":"hashmap"}}],[11,"with_hasher","","Creates an empty hashmap which will use the given hash builder to hash\nkeys.",364,{"inputs":[{"name":"hashmap"},{"name":"s"}],"output":{"name":"hashmap"}}],[11,"with_hash_state","","Deprecated, renamed to `with_hasher`",364,{"inputs":[{"name":"hashmap"},{"name":"s"}],"output":{"name":"hashmap"}}],[11,"with_capacity_and_hasher","","Creates an empty HashMap with space for at least `capacity`\nelements, using `hasher` to hash the keys.",364,{"inputs":[{"name":"hashmap"},{"name":"usize"},{"name":"s"}],"output":{"name":"hashmap"}}],[11,"with_capacity_and_hash_state","","Deprecated, renamed to `with_capacity_and_hasher`",364,{"inputs":[{"name":"hashmap"},{"name":"usize"},{"name":"s"}],"output":{"name":"hashmap"}}],[11,"hasher","","Returns a reference to the map&#39;s hasher.",364,{"inputs":[{"name":"hashmap"}],"output":{"name":"s"}}],[11,"capacity","","Returns the number of elements the map can hold without reallocating.",364,{"inputs":[{"name":"hashmap"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashMap`. The collection may reserve more space to avoid\nfrequent reallocations.",364,null],[11,"shrink_to_fit","","Shrinks the capacity of the map as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",364,null],[11,"keys","","An iterator visiting all keys in arbitrary order.\nIterator element type is `&amp;&#39;a K`.",364,{"inputs":[{"name":"hashmap"}],"output":{"name":"keys"}}],[11,"values","","An iterator visiting all values in arbitrary order.\nIterator element type is `&amp;&#39;a V`.",364,{"inputs":[{"name":"hashmap"}],"output":{"name":"values"}}],[11,"iter","","An iterator visiting all key-value pairs in arbitrary order.\nIterator element type is `(&amp;&#39;a K, &amp;&#39;a V)`.",364,{"inputs":[{"name":"hashmap"}],"output":{"name":"iter"}}],[11,"iter_mut","","An iterator visiting all key-value pairs in arbitrary order,\nwith mutable references to the values.\nIterator element type is `(&amp;&#39;a K, &amp;&#39;a mut V)`.",364,{"inputs":[{"name":"hashmap"}],"output":{"name":"itermut"}}],[11,"entry","","Gets the given key&#39;s corresponding entry in the map for in-place manipulation.",364,{"inputs":[{"name":"hashmap"},{"name":"k"}],"output":{"name":"entry"}}],[11,"len","","Returns the number of elements in the map.",364,{"inputs":[{"name":"hashmap"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the map contains no elements.",364,{"inputs":[{"name":"hashmap"}],"output":{"name":"bool"}}],[11,"drain","","Clears the map, returning all key-value pairs as an iterator. Keeps the\nallocated memory for reuse.",364,{"inputs":[{"name":"hashmap"}],"output":{"name":"drain"}}],[11,"clear","","Clears the map, removing all key-value pairs. Keeps the allocated memory\nfor reuse.",364,null],[11,"get","","Returns a reference to the value corresponding to the key.",364,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"contains_key","","Returns true if the map contains a value for the specified key.",364,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",364,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"insert","","Inserts a key-value pair into the map.",364,{"inputs":[{"name":"hashmap"},{"name":"k"},{"name":"v"}],"output":{"name":"option"}}],[11,"remove","","Removes a key from the map, returning the value at the key if the key\nwas previously in the map.",364,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"eq","","",364,{"inputs":[{"name":"hashmap"},{"name":"hashmap"}],"output":{"name":"bool"}}],[11,"fmt","","",364,{"inputs":[{"name":"hashmap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",364,{"inputs":[{"name":"hashmap"}],"output":{"name":"hashmap"}}],[11,"index","","",364,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"v"}}],[11,"clone","","",365,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"clone","","",366,{"inputs":[{"name":"keys"}],"output":{"name":"keys"}}],[11,"clone","","",367,{"inputs":[{"name":"values"}],"output":{"name":"values"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each key-value\npair out of the map in arbitrary order. The map cannot be used after\ncalling this.",364,{"inputs":[{"name":"hashmap"}],"output":{"name":"intoiter"}}],[11,"next","","",365,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",365,null],[11,"len","","",365,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"next","","",368,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",368,null],[11,"len","","",368,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"next","","",369,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",369,null],[11,"len","","",369,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next","","",366,{"inputs":[{"name":"keys"}],"output":{"name":"option"}}],[11,"size_hint","","",366,null],[11,"len","","",366,{"inputs":[{"name":"keys"}],"output":{"name":"usize"}}],[11,"next","","",367,{"inputs":[{"name":"values"}],"output":{"name":"option"}}],[11,"size_hint","","",367,null],[11,"len","","",367,{"inputs":[{"name":"values"}],"output":{"name":"usize"}}],[11,"next","","",370,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",370,null],[11,"len","","",370,{"inputs":[{"name":"drain"}],"output":{"name":"usize"}}],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.",371,{"inputs":[{"name":"entry"},{"name":"v"}],"output":{"name":"v"}}],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.",371,{"inputs":[{"name":"entry"},{"name":"f"}],"output":{"name":"v"}}],[11,"get","","Gets a reference to the value in the entry.",372,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"get_mut","","Gets a mutable reference to the value in the entry.",372,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"into_mut","","Converts the OccupiedEntry into a mutable reference to the value in the entry\nwith a lifetime bound to the map itself",372,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry, and returns the entry&#39;s old value",372,{"inputs":[{"name":"occupiedentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"remove","","Takes the value out of the entry, and returns it",372,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry with the VacantEntry&#39;s key,\nand returns a mutable reference to it",373,{"inputs":[{"name":"vacantentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"from_iter","","",364,{"inputs":[{"name":"hashmap"},{"name":"t"}],"output":{"name":"hashmap"}}],[11,"extend","","",364,null],[11,"extend","","",364,null],[11,"clone","","",374,{"inputs":[{"name":"randomstate"}],"output":{"name":"randomstate"}}],[11,"new","","Constructs a new `RandomState` that is initialized with random keys.",374,{"inputs":[{"name":"randomstate"}],"output":{"name":"randomstate"}}],[11,"build_hasher","","",374,{"inputs":[{"name":"randomstate"}],"output":{"name":"siphasher"}}],[11,"default","","",374,{"inputs":[{"name":"randomstate"}],"output":{"name":"randomstate"}}],[11,"get","","",364,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"take","","",364,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"replace","","",364,{"inputs":[{"name":"hashmap"},{"name":"k"}],"output":{"name":"option"}}],[11,"clone","std::collections::hash::set","",375,{"inputs":[{"name":"hashset"}],"output":{"name":"hashset"}}],[11,"new","","Creates an empty HashSet.",375,{"inputs":[{"name":"hashset"}],"output":{"name":"hashset"}}],[11,"with_capacity","","Creates an empty HashSet with space for at least `n` elements in\nthe hash table.",375,{"inputs":[{"name":"hashset"},{"name":"usize"}],"output":{"name":"hashset"}}],[11,"with_hasher","","Creates a new empty hash set which will use the given hasher to hash\nkeys.",375,{"inputs":[{"name":"hashset"},{"name":"s"}],"output":{"name":"hashset"}}],[11,"with_capacity_and_hasher","","Creates an empty HashSet with space for at least `capacity`\nelements in the hash table, using `hasher` to hash the keys.",375,{"inputs":[{"name":"hashset"},{"name":"usize"},{"name":"s"}],"output":{"name":"hashset"}}],[11,"hasher","","Returns a reference to the set&#39;s hasher.",375,{"inputs":[{"name":"hashset"}],"output":{"name":"s"}}],[11,"with_hash_state","","Deprecated, renamed to `with_hasher`",375,{"inputs":[{"name":"hashset"},{"name":"s"}],"output":{"name":"hashset"}}],[11,"with_capacity_and_hash_state","","Deprecated, renamed to `with_capacity_and_hasher`",375,{"inputs":[{"name":"hashset"},{"name":"usize"},{"name":"s"}],"output":{"name":"hashset"}}],[11,"capacity","","Returns the number of elements the set can hold without reallocating.",375,{"inputs":[{"name":"hashset"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashSet`. The collection may reserve more space to avoid\nfrequent reallocations.",375,null],[11,"shrink_to_fit","","Shrinks the capacity of the set as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",375,null],[11,"iter","","An iterator visiting all elements in arbitrary order.\nIterator element type is &amp;&#39;a T.",375,{"inputs":[{"name":"hashset"}],"output":{"name":"iter"}}],[11,"difference","","Visit the values representing the difference.",375,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"difference"}}],[11,"symmetric_difference","","Visit the values representing the symmetric difference.",375,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"symmetricdifference"}}],[11,"intersection","","Visit the values representing the intersection.",375,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"intersection"}}],[11,"union","","Visit the values representing the union.",375,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"union"}}],[11,"len","","Returns the number of elements in the set.",375,{"inputs":[{"name":"hashset"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the set contains no elements.",375,{"inputs":[{"name":"hashset"}],"output":{"name":"bool"}}],[11,"drain","","Clears the set, returning all elements in an iterator.",375,{"inputs":[{"name":"hashset"}],"output":{"name":"drain"}}],[11,"clear","","Clears the set, removing all values.",375,null],[11,"contains","","Returns `true` if the set contains a value.",375,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"bool"}}],[11,"get","","Returns a reference to the value in the set, if any, that is equal to the given value.",375,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"option"}}],[11,"is_disjoint","","Returns `true` if the set has no elements in common with `other`.\nThis is equivalent to checking for an empty intersection.",375,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"is_subset","","Returns `true` if the set is a subset of another.",375,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"is_superset","","Returns `true` if the set is a superset of another.",375,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"insert","","Adds a value to the set.",375,{"inputs":[{"name":"hashset"},{"name":"t"}],"output":{"name":"bool"}}],[11,"replace","","Adds a value to the set, replacing the existing value, if any, that is equal to the given\none. Returns the replaced value.",375,{"inputs":[{"name":"hashset"},{"name":"t"}],"output":{"name":"option"}}],[11,"remove","","Removes a value from the set. Returns `true` if the value was\npresent in the set.",375,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"bool"}}],[11,"take","","Removes and returns the value in the set, if any, that is equal to the given one.",375,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"option"}}],[11,"eq","","",375,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"fmt","","",375,{"inputs":[{"name":"hashset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_iter","","",375,{"inputs":[{"name":"hashset"},{"name":"i"}],"output":{"name":"hashset"}}],[11,"extend","","",375,null],[11,"extend","","",375,null],[11,"default","","",375,{"inputs":[{"name":"hashset"}],"output":{"name":"hashset"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out\nof the set in arbitrary order. The set cannot be used after calling\nthis.",375,{"inputs":[{"name":"hashset"}],"output":{"name":"intoiter"}}],[11,"clone","","",376,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",376,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",376,null],[11,"len","","",376,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"next","","",377,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",377,null],[11,"len","","",377,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next","","",378,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",378,null],[11,"len","","",378,{"inputs":[{"name":"drain"}],"output":{"name":"usize"}}],[11,"clone","","",379,{"inputs":[{"name":"intersection"}],"output":{"name":"intersection"}}],[11,"next","","",379,{"inputs":[{"name":"intersection"}],"output":{"name":"option"}}],[11,"size_hint","","",379,null],[11,"clone","","",380,{"inputs":[{"name":"difference"}],"output":{"name":"difference"}}],[11,"next","","",380,{"inputs":[{"name":"difference"}],"output":{"name":"option"}}],[11,"size_hint","","",380,null],[11,"clone","","",381,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"symmetricdifference"}}],[11,"next","","",381,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"option"}}],[11,"size_hint","","",381,null],[11,"clone","","",382,{"inputs":[{"name":"union"}],"output":{"name":"union"}}],[11,"next","","",382,{"inputs":[{"name":"union"}],"output":{"name":"option"}}],[11,"size_hint","","",382,null],[11,"hasher","std::collections::hash::state","",383,{"inputs":[{"name":"defaultstate"}],"output":{"name":"h"}}],[11,"clone","","",383,{"inputs":[{"name":"defaultstate"}],"output":{"name":"defaultstate"}}],[11,"default","","",383,{"inputs":[{"name":"defaultstate"}],"output":{"name":"defaultstate"}}],[11,"clone","collections::binary_heap","",384,{"inputs":[{"name":"binaryheap"}],"output":{"name":"binaryheap"}}],[11,"clone_from","","",384,null],[11,"default","","",384,{"inputs":[{"name":"binaryheap"}],"output":{"name":"binaryheap"}}],[11,"fmt","","",384,{"inputs":[{"name":"binaryheap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates an empty `BinaryHeap` as a max-heap.",384,{"inputs":[{"name":"binaryheap"}],"output":{"name":"binaryheap"}}],[11,"with_capacity","","Creates an empty `BinaryHeap` with a specific capacity.\nThis preallocates enough memory for `capacity` elements,\nso that the `BinaryHeap` does not have to be reallocated\nuntil it contains at least that many values.",384,{"inputs":[{"name":"binaryheap"},{"name":"usize"}],"output":{"name":"binaryheap"}}],[11,"iter","","Returns an iterator visiting all values in the underlying vector, in\narbitrary order.",384,{"inputs":[{"name":"binaryheap"}],"output":{"name":"iter"}}],[11,"peek","","Returns the greatest item in the binary heap, or `None` if it is empty.",384,{"inputs":[{"name":"binaryheap"}],"output":{"name":"option"}}],[11,"capacity","","Returns the number of elements the binary heap can hold without reallocating.",384,{"inputs":[{"name":"binaryheap"}],"output":{"name":"usize"}}],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `BinaryHeap`. Does nothing if the capacity is already sufficient.",384,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the\n`BinaryHeap`. The collection may reserve more space to avoid frequent reallocations.",384,null],[11,"shrink_to_fit","","Discards as much additional capacity as possible.",384,null],[11,"pop","","Removes the greatest item from the binary heap and returns it, or `None` if it\nis empty.",384,{"inputs":[{"name":"binaryheap"}],"output":{"name":"option"}}],[11,"push","","Pushes an item onto the binary heap.",384,null],[11,"push_pop","","Pushes an item onto the binary heap, then pops the greatest item off the queue in\nan optimized fashion.",384,{"inputs":[{"name":"binaryheap"},{"name":"t"}],"output":{"name":"t"}}],[11,"replace","","Pops the greatest item off the binary heap, then pushes an item onto the queue in\nan optimized fashion. The push is done regardless of whether the binary heap\nwas empty.",384,{"inputs":[{"name":"binaryheap"},{"name":"t"}],"output":{"name":"option"}}],[11,"into_vec","","Consumes the `BinaryHeap` and returns the underlying vector\nin arbitrary order.",384,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"into_sorted_vec","","Consumes the `BinaryHeap` and returns a vector in sorted\n(ascending) order.",384,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"len","","Returns the length of the binary heap.",384,{"inputs":[{"name":"binaryheap"}],"output":{"name":"usize"}}],[11,"is_empty","","Checks if the binary heap is empty.",384,{"inputs":[{"name":"binaryheap"}],"output":{"name":"bool"}}],[11,"drain","","Clears the binary heap, returning an iterator over the removed elements.",384,{"inputs":[{"name":"binaryheap"}],"output":{"name":"drain"}}],[11,"clear","","Drops all items from the binary heap.",384,null],[11,"drop","","",385,null],[11,"clone","","",386,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",386,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",386,null],[11,"next_back","","",386,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",387,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",387,null],[11,"next_back","","",387,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"next","","",388,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",388,null],[11,"next_back","","",388,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"from","","",384,{"inputs":[{"name":"binaryheap"},{"name":"vec"}],"output":{"name":"binaryheap"}}],[11,"from","collections::vec","",389,{"inputs":[{"name":"vec"},{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"from_iter","collections::binary_heap","",384,{"inputs":[{"name":"binaryheap"},{"name":"i"}],"output":{"name":"binaryheap"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe binary heap in arbitrary order. The binary heap cannot be used\nafter calling this.",384,{"inputs":[{"name":"binaryheap"}],"output":{"name":"intoiter"}}],[11,"extend","","",384,null],[11,"extend","","",384,null],[11,"clone","collections::linked_list","",390,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"clone","","",391,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"from","","",392,{"inputs":[{"name":"rawlink"},{"name":"option"}],"output":{"name":"rawlink"}}],[11,"clone","","",392,{"inputs":[{"name":"rawlink"}],"output":{"name":"rawlink"}}],[11,"default","","",393,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"new","","Creates an empty `LinkedList`.",393,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"append","","Moves all elements from `other` to the end of the list.",393,null],[11,"iter","","Provides a forward iterator.",393,{"inputs":[{"name":"linkedlist"}],"output":{"name":"iter"}}],[11,"iter_mut","","Provides a forward iterator with mutable references.",393,{"inputs":[{"name":"linkedlist"}],"output":{"name":"itermut"}}],[11,"is_empty","","Returns `true` if the `LinkedList` is empty.",393,{"inputs":[{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"len","","Returns the length of the `LinkedList`.",393,{"inputs":[{"name":"linkedlist"}],"output":{"name":"usize"}}],[11,"clear","","Removes all elements from the `LinkedList`.",393,null],[11,"front","","Provides a reference to the front element, or `None` if the list is\nempty.",393,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the list\nis empty.",393,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"back","","Provides a reference to the back element, or `None` if the list is\nempty.",393,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the list\nis empty.",393,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"push_front","","Adds an element first in the list.",393,null],[11,"pop_front","","Removes the first element and returns it, or `None` if the list is\nempty.",393,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"push_back","","Appends an element to the back of a list",393,null],[11,"pop_back","","Removes the last element from a list and returns it, or `None` if\nit is empty.",393,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"split_off","","Splits the list into two at the given index. Returns everything after the given index,\nincluding the index.",393,{"inputs":[{"name":"linkedlist"},{"name":"usize"}],"output":{"name":"linkedlist"}}],[11,"front_place","","Returns a place for insertion at the front of the list.",393,{"inputs":[{"name":"linkedlist"}],"output":{"name":"frontplace"}}],[11,"back_place","","Returns a place for insertion at the back of the list.",393,{"inputs":[{"name":"linkedlist"}],"output":{"name":"backplace"}}],[11,"drop","","",393,null],[11,"next","","",390,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",390,null],[11,"next_back","","",390,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",394,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",394,null],[11,"next_back","","",394,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"insert_next","","Inserts `elt` just after the element most recently returned by `.next()`.\nThe inserted element does not appear in the iteration.",394,null],[11,"peek_next","","Provides a reference to the next element, without changing the iterator.",394,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",391,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",391,null],[11,"next_back","","",391,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","",393,{"inputs":[{"name":"linkedlist"},{"name":"t"}],"output":{"name":"linkedlist"}}],[11,"into_iter","","Consumes the list into an iterator yielding elements by value.",393,{"inputs":[{"name":"linkedlist"}],"output":{"name":"intoiter"}}],[11,"extend","","",393,null],[11,"extend","","",393,null],[11,"eq","","",393,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"ne","","",393,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",393,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"cmp","","",393,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"ordering"}}],[11,"clone","","",393,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"fmt","","",393,{"inputs":[{"name":"linkedlist"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",393,null],[11,"make_place","","",395,{"inputs":[{"name":"frontplace"}],"output":{"name":"frontplace"}}],[11,"pointer","","",395,null],[11,"finalize","","",395,null],[11,"make_place","","",396,{"inputs":[{"name":"backplace"}],"output":{"name":"backplace"}}],[11,"pointer","","",396,null],[11,"finalize","","",396,null],[11,"clone","collections::vec_deque","",397,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"drop","","",397,null],[11,"default","","",397,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"new","","Creates an empty `VecDeque`.",397,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"with_capacity","","Creates an empty `VecDeque` with space for at least `n` elements.",397,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"get","","Retrieves an element in the `VecDeque` by index.",397,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"get_mut","","Retrieves an element in the `VecDeque` mutably by index.",397,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"swap","","Swaps elements at indices `i` and `j`.",397,null],[11,"capacity","","Returns the number of elements the `VecDeque` can hold without\nreallocating.",397,{"inputs":[{"name":"vecdeque"}],"output":{"name":"usize"}}],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `VecDeque`. Does nothing if the capacity is already sufficient.",397,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the given\n`VecDeque`. The collection may reserve more space to avoid frequent reallocations.",397,null],[11,"shrink_to_fit","","Shrinks the capacity of the `VecDeque` as much as possible.",397,null],[11,"truncate","","Shortens a `VecDeque`, dropping excess elements from the back.",397,null],[11,"iter","","Returns a front-to-back iterator.",397,{"inputs":[{"name":"vecdeque"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a front-to-back iterator that returns mutable references.",397,{"inputs":[{"name":"vecdeque"}],"output":{"name":"itermut"}}],[11,"as_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",397,null],[11,"as_mut_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",397,null],[11,"len","","Returns the number of elements in the `VecDeque`.",397,{"inputs":[{"name":"vecdeque"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the buffer contains no elements",397,{"inputs":[{"name":"vecdeque"}],"output":{"name":"bool"}}],[11,"drain","","Create a draining iterator that removes the specified range in the\n`VecDeque` and yields the removed items.",397,{"inputs":[{"name":"vecdeque"},{"name":"r"}],"output":{"name":"drain"}}],[11,"clear","","Clears the buffer, removing all values.",397,null],[11,"front","","Provides a reference to the front element, or `None` if the sequence is\nempty.",397,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the\nsequence is empty.",397,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"back","","Provides a reference to the back element, or `None` if the sequence is\nempty.",397,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the\nsequence is empty.",397,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"pop_front","","Removes the first element and returns it, or `None` if the sequence is\nempty.",397,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"push_front","","Inserts an element first in the sequence.",397,null],[11,"push_back","","Appends an element to the back of a buffer",397,null],[11,"pop_back","","Removes the last element from a buffer and returns it, or `None` if\nit is empty.",397,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"swap_remove_back","","Removes an element from anywhere in the `VecDeque` and returns it, replacing it with the\nlast element.",397,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"swap_remove_front","","Removes an element from anywhere in the `VecDeque` and returns it,\nreplacing it with the first element.",397,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"insert","","Inserts an element at `index` within the `VecDeque`. Whichever\nend is closer to the insertion point will be moved to make room,\nand all the affected elements will be moved to new positions.",397,null],[11,"remove","","Removes and returns the element at `index` from the `VecDeque`.\nWhichever end is closer to the removal point will be moved to make\nroom, and all the affected elements will be moved to new positions.\nReturns `None` if `index` is out of bounds.",397,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"split_off","","Splits the collection into two at the given index.",397,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",397,null],[11,"retain","","Retains only the elements specified by the predicate.",397,null],[11,"resize","","Modifies the `VecDeque` in-place so that `len()` is equal to new_len,\neither by removing excess elements or by appending copies of a value to the back.",397,null],[11,"clone","","",398,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",398,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",398,null],[11,"next_back","","",398,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",399,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",399,null],[11,"next_back","","",399,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",400,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"next","","",400,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",400,null],[11,"next_back","","",400,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"drop","","",401,null],[11,"next","","",401,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",401,null],[11,"next_back","","",401,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"eq","","",397,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",397,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"cmp","","",397,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"ordering"}}],[11,"hash","","",397,null],[11,"index","","",397,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"a"}}],[11,"index_mut","","",397,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"a"}}],[11,"from_iter","","",397,{"inputs":[{"name":"vecdeque"},{"name":"t"}],"output":{"name":"vecdeque"}}],[11,"into_iter","","Consumes the list into a front-to-back iterator yielding elements by\nvalue.",397,{"inputs":[{"name":"vecdeque"}],"output":{"name":"intoiter"}}],[11,"extend","","",397,null],[11,"extend","","",397,null],[11,"fmt","","",397,{"inputs":[{"name":"vecdeque"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","std::dynamic_lib","",402,null],[11,"open","","Lazily open a dynamic library. When passed None it gives a\nhandle to the calling process",402,{"inputs":[{"name":"dynamiclibrary"},{"name":"option"}],"output":{"name":"result"}}],[11,"prepend_search_path","","Prepends a path to this process&#39;s search path for dynamic libraries",402,null],[11,"create_path","","From a slice of paths, create a new vector which is suitable to be an\nenvironment variable for this platforms dylib search path.",402,null],[11,"envvar","","Returns the environment variable for this process&#39;s dynamic library\nsearch path",402,{"inputs":[{"name":"dynamiclibrary"}],"output":{"name":"str"}}],[11,"search_path","","Returns the current search path for dynamic libraries being used by this\nprocess",402,{"inputs":[{"name":"dynamiclibrary"}],"output":{"name":"vec"}}],[11,"symbol","","Accesses the value at the symbol of the dynamic library.",402,{"inputs":[{"name":"dynamiclibrary"},{"name":"str"}],"output":{"name":"result"}}],[11,"next","std::env","",403,{"inputs":[{"name":"vars"}],"output":{"name":"option"}}],[11,"size_hint","","",403,null],[11,"next","","",404,{"inputs":[{"name":"varsos"}],"output":{"name":"option"}}],[11,"size_hint","","",404,null],[11,"clone","","",405,{"inputs":[{"name":"varerror"}],"output":{"name":"varerror"}}],[11,"eq","","",405,{"inputs":[{"name":"varerror"},{"name":"varerror"}],"output":{"name":"bool"}}],[11,"ne","","",405,{"inputs":[{"name":"varerror"},{"name":"varerror"}],"output":{"name":"bool"}}],[11,"fmt","","",405,{"inputs":[{"name":"varerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",405,{"inputs":[{"name":"varerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",405,{"inputs":[{"name":"varerror"}],"output":{"name":"str"}}],[11,"next","","",406,{"inputs":[{"name":"splitpaths"}],"output":{"name":"option"}}],[11,"size_hint","","",406,null],[11,"fmt","","",407,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",407,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",407,{"inputs":[{"name":"joinpathserror"}],"output":{"name":"str"}}],[11,"next","","",408,{"inputs":[{"name":"args"}],"output":{"name":"option"}}],[11,"size_hint","","",408,null],[11,"len","","",408,{"inputs":[{"name":"args"}],"output":{"name":"usize"}}],[11,"next","","",409,{"inputs":[{"name":"argsos"}],"output":{"name":"option"}}],[11,"size_hint","","",409,null],[11,"len","","",409,{"inputs":[{"name":"argsos"}],"output":{"name":"usize"}}],[11,"clone","std::ffi::c_str","",410,{"inputs":[{"name":"cstring"}],"output":{"name":"cstring"}}],[11,"hash","","",410,null],[11,"cmp","","",410,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",410,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"option"}}],[11,"lt","","",410,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"le","","",410,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"gt","","",410,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"ge","","",410,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"eq","","",410,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"ne","","",410,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"hash","","",411,null],[11,"fmt","","",412,{"inputs":[{"name":"nulerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",412,{"inputs":[{"name":"nulerror"},{"name":"nulerror"}],"output":{"name":"bool"}}],[11,"ne","","",412,{"inputs":[{"name":"nulerror"},{"name":"nulerror"}],"output":{"name":"bool"}}],[11,"clone","","",412,{"inputs":[{"name":"nulerror"}],"output":{"name":"nulerror"}}],[11,"fmt","","",413,{"inputs":[{"name":"intostringerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",413,{"inputs":[{"name":"intostringerror"},{"name":"intostringerror"}],"output":{"name":"bool"}}],[11,"ne","","",413,{"inputs":[{"name":"intostringerror"},{"name":"intostringerror"}],"output":{"name":"bool"}}],[11,"clone","","",413,{"inputs":[{"name":"intostringerror"}],"output":{"name":"intostringerror"}}],[11,"new","","Creates a new C-compatible string from a container of bytes.",410,{"inputs":[{"name":"cstring"},{"name":"t"}],"output":{"name":"result"}}],[11,"from_vec_unchecked","","Creates a C-compatible string from a byte vector without checking for\ninterior 0 bytes.",410,{"inputs":[{"name":"cstring"},{"name":"vec"}],"output":{"name":"cstring"}}],[11,"from_raw","","Retakes ownership of a `CString` that was transferred to C.",410,null],[11,"into_raw","","Transfers ownership of the string to a C caller.",410,null],[11,"into_string","","Converts the `CString` into a `String` if it contains valid Unicode data.",410,{"inputs":[{"name":"cstring"}],"output":{"name":"result"}}],[11,"into_bytes","","Returns the underlying byte buffer.",410,{"inputs":[{"name":"cstring"}],"output":{"name":"vec"}}],[11,"into_bytes_with_nul","","Equivalent to the `into_bytes` function except that the returned vector\nincludes the trailing nul byte.",410,{"inputs":[{"name":"cstring"}],"output":{"name":"vec"}}],[11,"as_bytes","","Returns the contents of this `CString` as a slice of bytes.",410,null],[11,"as_bytes_with_nul","","Equivalent to the `as_bytes` function except that the returned slice\nincludes the trailing nul byte.",410,null],[11,"from_ptr","","Casts a raw C string to a safe C string wrapper.",411,null],[11,"as_ptr","","Returns the inner pointer to this C string.",411,null],[11,"to_bytes","","Converts this C string to a byte slice.",411,null],[11,"to_bytes_with_nul","","Converts this C string to a byte slice containing the trailing 0 byte.",411,null],[11,"to_str","","Yields a `&amp;str` slice if the `CStr` contains valid UTF-8.",411,{"inputs":[{"name":"cstr"}],"output":{"name":"result"}}],[11,"to_string_lossy","","Converts a `CStr` into a `Cow&lt;str&gt;`.",411,{"inputs":[{"name":"cstr"}],"output":{"name":"cow"}}],[11,"deref","","",410,{"inputs":[{"name":"cstring"}],"output":{"name":"cstr"}}],[11,"fmt","","",410,{"inputs":[{"name":"cstring"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","collections::vec","",389,{"inputs":[{"name":"vec"},{"name":"cstring"}],"output":{"name":"vec"}}],[11,"fmt","std::ffi::c_str","",411,{"inputs":[{"name":"cstr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"borrow","","",410,{"inputs":[{"name":"cstring"}],"output":{"name":"cstr"}}],[11,"nul_position","","Returns the position of the nul byte in the slice that was provided to\n`CString::new`.",412,{"inputs":[{"name":"nulerror"}],"output":{"name":"usize"}}],[11,"into_vec","","Consumes this error, returning the underlying vector of bytes which\ngenerated the error in the first place.",412,{"inputs":[{"name":"nulerror"}],"output":{"name":"vec"}}],[11,"description","","",412,{"inputs":[{"name":"nulerror"}],"output":{"name":"str"}}],[11,"fmt","","",412,{"inputs":[{"name":"nulerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","std::io::error","",414,{"inputs":[{"name":"error"},{"name":"nulerror"}],"output":{"name":"error"}}],[11,"into_cstring","std::ffi::c_str","Consumes this error, returning original `CString` which generated the\nerror.",413,{"inputs":[{"name":"intostringerror"}],"output":{"name":"cstring"}}],[11,"utf8_error","","Access the underlying UTF-8 error that was the cause of this error.",413,{"inputs":[{"name":"intostringerror"}],"output":{"name":"utf8error"}}],[11,"description","","",413,{"inputs":[{"name":"intostringerror"}],"output":{"name":"str"}}],[11,"cause","","",413,{"inputs":[{"name":"intostringerror"}],"output":{"name":"option"}}],[11,"fmt","","",413,{"inputs":[{"name":"intostringerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",411,{"inputs":[{"name":"cstr"},{"name":"cstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",411,{"inputs":[{"name":"cstr"},{"name":"cstr"}],"output":{"name":"option"}}],[11,"cmp","","",411,{"inputs":[{"name":"cstr"},{"name":"cstr"}],"output":{"name":"ordering"}}],[11,"to_owned","","",411,{"inputs":[{"name":"cstr"}],"output":{"name":"cstring"}}],[11,"from","","",410,{"inputs":[{"name":"cstring"},{"name":"cstr"}],"output":{"name":"cstring"}}],[11,"index","","",410,{"inputs":[{"name":"cstring"},{"name":"rangefull"}],"output":{"name":"cstr"}}],[11,"as_ref","","",411,{"inputs":[{"name":"cstr"}],"output":{"name":"cstr"}}],[11,"as_ref","","",410,{"inputs":[{"name":"cstring"}],"output":{"name":"cstr"}}],[11,"clone","std::ffi::os_str","",415,{"inputs":[{"name":"osstring"}],"output":{"name":"osstring"}}],[11,"new","","Constructs a new empty `OsString`.",415,{"inputs":[{"name":"osstring"}],"output":{"name":"osstring"}}],[11,"from_bytes","","Constructs an `OsString` from a byte sequence.",415,{"inputs":[{"name":"osstring"},{"name":"b"}],"output":{"name":"option"}}],[11,"as_os_str","","Converts to an `OsStr` slice.",415,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"into_string","","Converts the `OsString` into a `String` if it contains valid Unicode data.",415,{"inputs":[{"name":"osstring"}],"output":{"name":"result"}}],[11,"push","","Extends the string with the given `&amp;OsStr` slice.",415,null],[11,"with_capacity","","Creates a new `OsString` with the given capacity. The string will be\nable to hold exactly `capacity` bytes without reallocating. If\n`capacity` is 0, the string will not allocate.",415,{"inputs":[{"name":"osstring"},{"name":"usize"}],"output":{"name":"osstring"}}],[11,"clear","","Truncates the `OsString` to zero length.",415,null],[11,"capacity","","Returns the number of bytes this `OsString` can hold without\nreallocating.",415,{"inputs":[{"name":"osstring"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more bytes to be inserted\nin the given `OsString`. The collection may reserve more space to avoid\nfrequent reallocations.",415,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more bytes to be\ninserted in the given `OsString`. Does nothing if the capacity is\nalready sufficient.",415,null],[11,"from","","",415,{"inputs":[{"name":"osstring"},{"name":"string"}],"output":{"name":"osstring"}}],[11,"from","","",415,{"inputs":[{"name":"osstring"},{"name":"t"}],"output":{"name":"osstring"}}],[11,"index","","",415,{"inputs":[{"name":"osstring"},{"name":"rangefull"}],"output":{"name":"osstr"}}],[11,"new","","Coerces into an `OsStr` slice.",416,{"inputs":[{"name":"osstr"},{"name":"s"}],"output":{"name":"osstr"}}],[11,"to_str","","Yields a `&amp;str` slice if the `OsStr` is valid unicode.",416,{"inputs":[{"name":"osstr"}],"output":{"name":"option"}}],[11,"to_string_lossy","","Converts an `OsStr` to a `Cow&lt;str&gt;`.",416,{"inputs":[{"name":"osstr"}],"output":{"name":"cow"}}],[11,"to_os_string","","Copies the slice into an owned `OsString`.",416,{"inputs":[{"name":"osstr"}],"output":{"name":"osstring"}}],[11,"to_bytes","","Yields this `OsStr` as a byte slice.",416,{"inputs":[{"name":"osstr"}],"output":{"name":"option"}}],[11,"to_cstring","","Creates a `CString` containing this `OsStr` data.",416,{"inputs":[{"name":"osstr"}],"output":{"name":"option"}}],[11,"is_empty","","Checks whether the `OsStr` is empty.",416,{"inputs":[{"name":"osstr"}],"output":{"name":"bool"}}],[11,"len","","Returns the number of bytes in this `OsStr`.",416,{"inputs":[{"name":"osstr"}],"output":{"name":"usize"}}],[11,"deref","","",415,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"fmt","","",415,{"inputs":[{"name":"osstring"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",415,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"eq","","",415,{"inputs":[{"name":"osstring"},{"name":"str"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",415,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"option"}}],[11,"lt","","",415,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"le","","",415,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"gt","","",415,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"ge","","",415,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",415,{"inputs":[{"name":"osstring"},{"name":"str"}],"output":{"name":"option"}}],[11,"cmp","","",415,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"ordering"}}],[11,"hash","","",415,null],[11,"eq","","",416,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"eq","","",416,{"inputs":[{"name":"osstr"},{"name":"str"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",416,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"lt","","",416,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"le","","",416,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"gt","","",416,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"ge","","",416,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",416,{"inputs":[{"name":"osstr"},{"name":"str"}],"output":{"name":"option"}}],[11,"cmp","","",416,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"ordering"}}],[11,"hash","","",416,null],[11,"fmt","","",416,{"inputs":[{"name":"osstr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"borrow","","",415,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"to_owned","","",416,{"inputs":[{"name":"osstr"}],"output":{"name":"osstring"}}],[11,"as_ref","","",416,{"inputs":[{"name":"osstr"}],"output":{"name":"osstr"}}],[11,"as_ref","","",415,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"as_ref","collections::string","",417,{"inputs":[{"name":"string"}],"output":{"name":"osstr"}}],[11,"clone","std::fs","",418,{"inputs":[{"name":"metadata"}],"output":{"name":"metadata"}}],[11,"clone","","",419,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"fmt","","",420,{"inputs":[{"name":"permissions"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",420,{"inputs":[{"name":"permissions"},{"name":"permissions"}],"output":{"name":"bool"}}],[11,"ne","","",420,{"inputs":[{"name":"permissions"},{"name":"permissions"}],"output":{"name":"bool"}}],[11,"clone","","",420,{"inputs":[{"name":"permissions"}],"output":{"name":"permissions"}}],[11,"hash","","",421,null],[11,"eq","","",421,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"ne","","",421,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"clone","","",421,{"inputs":[{"name":"filetype"}],"output":{"name":"filetype"}}],[11,"open","","Attempts to open a file in read-only mode.",422,{"inputs":[{"name":"file"},{"name":"p"}],"output":{"name":"result"}}],[11,"create","","Opens a file in write-only mode.",422,{"inputs":[{"name":"file"},{"name":"p"}],"output":{"name":"result"}}],[11,"sync_all","","Attempts to sync all OS-internal metadata to disk.",422,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"sync_data","","This function is similar to `sync_all`, except that it may not\nsynchronize file metadata to the filesystem.",422,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"set_len","","Truncates or extends the underlying file, updating the size of\nthis file to become `size`.",422,{"inputs":[{"name":"file"},{"name":"u64"}],"output":{"name":"result"}}],[11,"metadata","","Queries metadata about the underlying file.",422,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying file.",422,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"fmt","","",422,{"inputs":[{"name":"file"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"read","","",422,null],[11,"read_to_end","","",422,{"inputs":[{"name":"file"},{"name":"vec"}],"output":{"name":"result"}}],[11,"write","","",422,null],[11,"flush","","",422,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"seek","","",422,{"inputs":[{"name":"file"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"new","","Creates a blank new set of options ready for configuration.",419,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"read","","Sets the option for read access.",419,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"write","","Sets the option for write access.",419,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"append","","Sets the option for the append mode.",419,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"truncate","","Sets the option for truncating a previous file.",419,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"create","","Sets the option for creating a new file.",419,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"create_new","","Sets the option to always create a new file.",419,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"open","","Opens a file at `path` with the options specified by `self`.",419,{"inputs":[{"name":"openoptions"},{"name":"p"}],"output":{"name":"result"}}],[11,"file_type","","Returns the file type for this metadata.",418,{"inputs":[{"name":"metadata"}],"output":{"name":"filetype"}}],[11,"is_dir","","Returns whether this metadata is for a directory.",418,{"inputs":[{"name":"metadata"}],"output":{"name":"bool"}}],[11,"is_file","","Returns whether this metadata is for a regular file.",418,{"inputs":[{"name":"metadata"}],"output":{"name":"bool"}}],[11,"len","","Returns the size of the file, in bytes, this metadata is for.",418,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"permissions","","Returns the permissions of the file this metadata is for.",418,{"inputs":[{"name":"metadata"}],"output":{"name":"permissions"}}],[11,"modified","","Returns the last modification time listed in this metadata.",418,{"inputs":[{"name":"metadata"}],"output":{"name":"result"}}],[11,"accessed","","Returns the last access time of this metadata.",418,{"inputs":[{"name":"metadata"}],"output":{"name":"result"}}],[11,"created","","Returns the creation time listed in the this metadata.",418,{"inputs":[{"name":"metadata"}],"output":{"name":"result"}}],[11,"readonly","","Returns whether these permissions describe a readonly file.",420,{"inputs":[{"name":"permissions"}],"output":{"name":"bool"}}],[11,"set_readonly","","Modifies the readonly flag for this set of permissions.",420,null],[11,"is_dir","","Test whether this file type represents a directory.",421,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_file","","Test whether this file type represents a regular file.",421,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_symlink","","Test whether this file type represents a symbolic link.",421,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"next","","",423,{"inputs":[{"name":"readdir"}],"output":{"name":"option"}}],[11,"path","","Returns the full path to the file that this entry represents.",424,{"inputs":[{"name":"direntry"}],"output":{"name":"pathbuf"}}],[11,"metadata","","Return the metadata for the file that this entry points at.",424,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"file_type","","Return the file type for the file that this entry points at.",424,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"file_name","","Returns the bare file name of this directory entry without any other\nleading path component.",424,{"inputs":[{"name":"direntry"}],"output":{"name":"osstring"}}],[11,"next","","",425,{"inputs":[{"name":"walkdir"}],"output":{"name":"option"}}],[11,"new","","Creates a new set of options with default mode/security settings for all\nplatforms and also non-recursive.",426,{"inputs":[{"name":"dirbuilder"}],"output":{"name":"dirbuilder"}}],[11,"recursive","","Indicate that directories create should be created recursively, creating\nall parent directories if they do not exist with the same security and\npermissions settings.",426,{"inputs":[{"name":"dirbuilder"},{"name":"bool"}],"output":{"name":"dirbuilder"}}],[11,"create","","Create the specified directory with the options configured in this\nbuilder.",426,{"inputs":[{"name":"dirbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"new","std::io::buffered","Creates a new `BufReader` with a default buffer capacity.",427,{"inputs":[{"name":"bufreader"},{"name":"r"}],"output":{"name":"bufreader"}}],[11,"with_capacity","","Creates a new `BufReader` with the specified buffer capacity.",427,{"inputs":[{"name":"bufreader"},{"name":"usize"},{"name":"r"}],"output":{"name":"bufreader"}}],[11,"get_ref","","Gets a reference to the underlying reader.",427,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"get_mut","","Gets a mutable reference to the underlying reader.",427,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"into_inner","","Unwraps this `BufReader`, returning the underlying reader.",427,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"read","","",427,null],[11,"fill_buf","","",427,{"inputs":[{"name":"bufreader"}],"output":{"name":"result"}}],[11,"consume","","",427,null],[11,"fmt","","",427,{"inputs":[{"name":"bufreader"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"seek","","Seek to an offset, in bytes, in the underlying reader.",427,{"inputs":[{"name":"bufreader"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"fmt","","",428,{"inputs":[{"name":"intoinnererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `BufWriter` with a default buffer capacity.",429,{"inputs":[{"name":"bufwriter"},{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"with_capacity","","Creates a new `BufWriter` with the specified buffer capacity.",429,{"inputs":[{"name":"bufwriter"},{"name":"usize"},{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",429,{"inputs":[{"name":"bufwriter"}],"output":{"name":"w"}}],[11,"get_mut","","Gets a mutable reference to the underlying writer.",429,{"inputs":[{"name":"bufwriter"}],"output":{"name":"w"}}],[11,"into_inner","","Unwraps this `BufWriter`, returning the underlying writer.",429,{"inputs":[{"name":"bufwriter"}],"output":{"name":"result"}}],[11,"write","","",429,null],[11,"flush","","",429,{"inputs":[{"name":"bufwriter"}],"output":{"name":"result"}}],[11,"fmt","","",429,{"inputs":[{"name":"bufwriter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"seek","","Seek to the offset, in bytes, in the underlying writer.",429,{"inputs":[{"name":"bufwriter"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"drop","","",429,null],[11,"error","","Returns the error which caused the call to `into_inner()` to fail.",428,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"error"}}],[11,"into_inner","","Returns the buffered writer instance which generated the error.",428,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"w"}}],[11,"from","std::io::error","",414,{"inputs":[{"name":"error"},{"name":"intoinnererror"}],"output":{"name":"error"}}],[11,"description","std::io::buffered","",428,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"str"}}],[11,"fmt","","",428,{"inputs":[{"name":"intoinnererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `LineWriter`.",430,{"inputs":[{"name":"linewriter"},{"name":"w"}],"output":{"name":"linewriter"}}],[11,"with_capacity","","Creates a new `LineWriter` with a specified capacity for the internal\nbuffer.",430,{"inputs":[{"name":"linewriter"},{"name":"usize"},{"name":"w"}],"output":{"name":"linewriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",430,{"inputs":[{"name":"linewriter"}],"output":{"name":"w"}}],[11,"get_mut","","Gets a mutable reference to the underlying writer.",430,{"inputs":[{"name":"linewriter"}],"output":{"name":"w"}}],[11,"into_inner","","Unwraps this `LineWriter`, returning the underlying writer.",430,{"inputs":[{"name":"linewriter"}],"output":{"name":"result"}}],[11,"write","","",430,null],[11,"flush","","",430,{"inputs":[{"name":"linewriter"}],"output":{"name":"result"}}],[11,"fmt","","",430,{"inputs":[{"name":"linewriter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","std::io::cursor","",431,{"inputs":[{"name":"cursor"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",431,{"inputs":[{"name":"cursor"}],"output":{"name":"cursor"}}],[11,"new","","Creates a new cursor wrapping the provided underlying I/O object.",431,{"inputs":[{"name":"cursor"},{"name":"t"}],"output":{"name":"cursor"}}],[11,"into_inner","","Consumes this cursor, returning the underlying value.",431,{"inputs":[{"name":"cursor"}],"output":{"name":"t"}}],[11,"get_ref","","Gets a reference to the underlying value in this cursor.",431,{"inputs":[{"name":"cursor"}],"output":{"name":"t"}}],[11,"get_mut","","Gets a mutable reference to the underlying value in this cursor.",431,{"inputs":[{"name":"cursor"}],"output":{"name":"t"}}],[11,"position","","Returns the current position of this cursor.",431,{"inputs":[{"name":"cursor"}],"output":{"name":"u64"}}],[11,"set_position","","Sets the position of this cursor.",431,null],[11,"seek","","",431,{"inputs":[{"name":"cursor"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"read","","",431,null],[11,"fill_buf","","",431,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"consume","","",431,null],[11,"write","","",431,null],[11,"flush","","",431,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"write","","",431,null],[11,"flush","","",431,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"write","","",431,null],[11,"flush","","",431,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"fmt","std::io::error","",414,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",432,{"inputs":[{"name":"custom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",433,{"inputs":[{"name":"errorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",433,{"inputs":[{"name":"errorkind"}],"output":{"name":"errorkind"}}],[11,"eq","","",433,{"inputs":[{"name":"errorkind"},{"name":"errorkind"}],"output":{"name":"bool"}}],[11,"ne","","",433,{"inputs":[{"name":"errorkind"},{"name":"errorkind"}],"output":{"name":"bool"}}],[11,"new","","Creates a new I/O error from a known kind of error as well as an\narbitrary error payload.",414,{"inputs":[{"name":"error"},{"name":"errorkind"},{"name":"e"}],"output":{"name":"error"}}],[11,"last_os_error","","Returns an error representing the last OS error which occurred.",414,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"from_raw_os_error","","Creates a new instance of an `Error` from a particular OS error code.",414,{"inputs":[{"name":"error"},{"name":"i32"}],"output":{"name":"error"}}],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",414,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"get_ref","","Returns a reference to the inner error wrapped by this error (if any).",414,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"get_mut","","Returns a mutable reference to the inner error wrapped by this error\n(if any).",414,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"into_inner","","Consumes the `Error`, returning its inner error (if any).",414,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"kind","","Returns the corresponding `ErrorKind` for this error.",414,{"inputs":[{"name":"error"}],"output":{"name":"errorkind"}}],[11,"fmt","","",434,{"inputs":[{"name":"repr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",414,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",414,{"inputs":[{"name":"error"}],"output":{"name":"str"}}],[11,"cause","","",414,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"read","alloc::boxed","",329,null],[11,"read_to_end","","",329,{"inputs":[{"name":"box"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_to_string","","",329,{"inputs":[{"name":"box"},{"name":"string"}],"output":{"name":"result"}}],[11,"read_exact","","",329,null],[11,"write","","",329,null],[11,"flush","","",329,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"write_all","","",329,null],[11,"write_fmt","","",329,{"inputs":[{"name":"box"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"seek","","",329,{"inputs":[{"name":"box"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"fill_buf","","",329,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"consume","","",329,null],[11,"read_until","","",329,{"inputs":[{"name":"box"},{"name":"u8"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_line","","",329,{"inputs":[{"name":"box"},{"name":"string"}],"output":{"name":"result"}}],[11,"write","collections::vec","",389,null],[11,"write_all","","",389,null],[11,"flush","","",389,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[11,"new","std::io::lazy","",435,null],[11,"get","","",435,{"inputs":[{"name":"lazy"}],"output":{"name":"option"}}],[11,"read","std::io::util","",436,null],[11,"fill_buf","","",436,{"inputs":[{"name":"empty"}],"output":{"name":"result"}}],[11,"consume","","",436,null],[11,"read","","",437,null],[11,"write","","",438,null],[11,"flush","","",438,{"inputs":[{"name":"sink"}],"output":{"name":"result"}}],[11,"read","std::io::stdio","",439,null],[11,"write","","",440,null],[11,"flush","","",440,{"inputs":[{"name":"stdoutraw"}],"output":{"name":"result"}}],[11,"write","","",441,null],[11,"flush","","",441,{"inputs":[{"name":"stderrraw"}],"output":{"name":"result"}}],[11,"write","","",442,null],[11,"flush","","",442,{"inputs":[{"name":"maybe"}],"output":{"name":"result"}}],[11,"read","","",442,null],[11,"lock","","Locks this handle to the standard input stream, returning a readable\nguard.",443,{"inputs":[{"name":"stdin"}],"output":{"name":"stdinlock"}}],[11,"read_line","","Locks this handle and reads a line of input into the specified buffer.",443,{"inputs":[{"name":"stdin"},{"name":"string"}],"output":{"name":"result"}}],[11,"read","","",443,null],[11,"read_to_end","","",443,{"inputs":[{"name":"stdin"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_to_string","","",443,{"inputs":[{"name":"stdin"},{"name":"string"}],"output":{"name":"result"}}],[11,"read_exact","","",443,null],[11,"read","","",444,null],[11,"read_to_end","","",444,{"inputs":[{"name":"stdinlock"},{"name":"vec"}],"output":{"name":"result"}}],[11,"fill_buf","","",444,{"inputs":[{"name":"stdinlock"}],"output":{"name":"result"}}],[11,"consume","","",444,null],[11,"lock","","Locks this handle to the standard output stream, returning a writable\nguard.",445,{"inputs":[{"name":"stdout"}],"output":{"name":"stdoutlock"}}],[11,"write","","",445,null],[11,"flush","","",445,{"inputs":[{"name":"stdout"}],"output":{"name":"result"}}],[11,"write_all","","",445,null],[11,"write_fmt","","",445,{"inputs":[{"name":"stdout"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"write","","",446,null],[11,"flush","","",446,{"inputs":[{"name":"stdoutlock"}],"output":{"name":"result"}}],[11,"lock","","Locks this handle to the standard error stream, returning a writable\nguard.",447,{"inputs":[{"name":"stderr"}],"output":{"name":"stderrlock"}}],[11,"write","","",447,null],[11,"flush","","",447,{"inputs":[{"name":"stderr"}],"output":{"name":"result"}}],[11,"write_all","","",447,null],[11,"write_fmt","","",447,{"inputs":[{"name":"stderr"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"write","","",448,null],[11,"flush","","",448,{"inputs":[{"name":"stderrlock"}],"output":{"name":"result"}}],[11,"fmt","std::io","",449,{"inputs":[{"name":"seekfrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",449,{"inputs":[{"name":"seekfrom"}],"output":{"name":"seekfrom"}}],[11,"eq","","",449,{"inputs":[{"name":"seekfrom"},{"name":"seekfrom"}],"output":{"name":"bool"}}],[11,"ne","","",449,{"inputs":[{"name":"seekfrom"},{"name":"seekfrom"}],"output":{"name":"bool"}}],[11,"write","","",450,null],[11,"flush","","",450,{"inputs":[{"name":"broadcast"}],"output":{"name":"result"}}],[11,"read","","",451,null],[11,"limit","","Returns the number of bytes that can be read before this instance will\nreturn EOF.",452,{"inputs":[{"name":"take"}],"output":{"name":"u64"}}],[11,"read","","",452,null],[11,"fill_buf","","",452,{"inputs":[{"name":"take"}],"output":{"name":"result"}}],[11,"consume","","",452,null],[11,"read","","",453,null],[11,"next","","",454,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"fmt","","",455,{"inputs":[{"name":"charserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",456,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"description","","",455,{"inputs":[{"name":"charserror"}],"output":{"name":"str"}}],[11,"cause","","",455,{"inputs":[{"name":"charserror"}],"output":{"name":"option"}}],[11,"fmt","","",455,{"inputs":[{"name":"charserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",457,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"next","","",458,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"cmp","std::net::ip","",459,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",459,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"option"}}],[11,"lt","","",459,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"le","","",459,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"gt","","",459,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"ge","","",459,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"hash","","",459,null],[11,"fmt","","",459,{"inputs":[{"name":"ipaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",459,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"ne","","",459,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"clone","","",459,{"inputs":[{"name":"ipaddr"}],"output":{"name":"ipaddr"}}],[11,"fmt","","",460,{"inputs":[{"name":"ipv6multicastscope"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",460,null],[11,"clone","","",460,{"inputs":[{"name":"ipv6multicastscope"}],"output":{"name":"ipv6multicastscope"}}],[11,"eq","","",460,{"inputs":[{"name":"ipv6multicastscope"},{"name":"ipv6multicastscope"}],"output":{"name":"bool"}}],[11,"ne","","",460,{"inputs":[{"name":"ipv6multicastscope"},{"name":"ipv6multicastscope"}],"output":{"name":"bool"}}],[11,"new","","Creates a new IPv4 address from four eight-bit octets.",461,{"inputs":[{"name":"ipv4addr"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"ipv4addr"}}],[11,"octets","","Returns the four eight-bit integers that make up this address.",461,null],[11,"is_unspecified","","Returns true for the special &#39;unspecified&#39; address 0.0.0.0.",461,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_loopback","","Returns true if this is a loopback address (127.0.0.0/8).",461,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_private","","Returns true if this is a private address.",461,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_link_local","","Returns true if the address is link-local (169.254.0.0/16).",461,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_global","","Returns true if the address appears to be globally routable.",461,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_multicast","","Returns true if this is a multicast address.",461,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_broadcast","","Returns true if this is a broadcast address.",461,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_documentation","","Returns true if this address is in a range designated for documentation.",461,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"to_ipv6_compatible","","Converts this address to an IPv4-compatible IPv6 address.",461,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv6addr"}}],[11,"to_ipv6_mapped","","Converts this address to an IPv4-mapped IPv6 address.",461,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv6addr"}}],[11,"fmt","","",459,{"inputs":[{"name":"ipaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",461,{"inputs":[{"name":"ipv4addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",461,{"inputs":[{"name":"ipv4addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",461,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv4addr"}}],[11,"eq","","",461,{"inputs":[{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"hash","","",461,null],[11,"partial_cmp","","",461,{"inputs":[{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"option"}}],[11,"cmp","","",461,{"inputs":[{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"ordering"}}],[11,"from","","",461,{"inputs":[{"name":"ipv4addr"},{"name":"u32"}],"output":{"name":"ipv4addr"}}],[11,"new","","Creates a new IPv6 address from eight 16-bit segments.",462,{"inputs":[{"name":"ipv6addr"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"ipv6addr"}}],[11,"segments","","Returns the eight 16-bit segments that make up this address.",462,null],[11,"is_unspecified","","Returns true for the special &#39;unspecified&#39; address ::.",462,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_loopback","","Returns true if this is a loopback address (::1).",462,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_global","","Returns true if the address appears to be globally routable.",462,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unique_local","","Returns true if this is a unique local address (IPv6).",462,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unicast_link_local","","Returns true if the address is unicast and link-local (fe80::/10).",462,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unicast_site_local","","Returns true if this is a deprecated unicast site-local address (IPv6\nfec0::/10).",462,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unicast_global","","Returns true if the address is a globally routable unicast address.",462,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"multicast_scope","","Returns the address&#39;s multicast scope if the address is multicast.",462,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"option"}}],[11,"is_multicast","","Returns true if this is a multicast address.",462,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"to_ipv4","","Converts this address to an IPv4 address. Returns None if this address is\nneither IPv4-compatible or IPv4-mapped.",462,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"option"}}],[11,"fmt","","",462,{"inputs":[{"name":"ipv6addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",462,{"inputs":[{"name":"ipv6addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",462,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"ipv6addr"}}],[11,"eq","","",462,{"inputs":[{"name":"ipv6addr"},{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"hash","","",462,null],[11,"partial_cmp","","",462,{"inputs":[{"name":"ipv6addr"},{"name":"ipv6addr"}],"output":{"name":"option"}}],[11,"cmp","","",462,{"inputs":[{"name":"ipv6addr"},{"name":"ipv6addr"}],"output":{"name":"ordering"}}],[11,"fmt","std::net::addr","",463,{"inputs":[{"name":"socketaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",463,null],[11,"eq","","",463,{"inputs":[{"name":"socketaddr"},{"name":"socketaddr"}],"output":{"name":"bool"}}],[11,"ne","","",463,{"inputs":[{"name":"socketaddr"},{"name":"socketaddr"}],"output":{"name":"bool"}}],[11,"clone","","",463,{"inputs":[{"name":"socketaddr"}],"output":{"name":"socketaddr"}}],[11,"new","","Creates a new socket address from the (ip, port) pair.",463,{"inputs":[{"name":"socketaddr"},{"name":"ipaddr"},{"name":"u16"}],"output":{"name":"socketaddr"}}],[11,"ip","","Returns the IP address associated with this socket address.",463,{"inputs":[{"name":"socketaddr"}],"output":{"name":"ipaddr"}}],[11,"set_ip","","Change the IP address associated with this socket address.",463,null],[11,"port","","Returns the port number associated with this socket address.",463,{"inputs":[{"name":"socketaddr"}],"output":{"name":"u16"}}],[11,"set_port","","Change the port number associated with this socket address.",463,null],[11,"new","","Creates a new socket address from the (ip, port) pair.",464,{"inputs":[{"name":"socketaddrv4"},{"name":"ipv4addr"},{"name":"u16"}],"output":{"name":"socketaddrv4"}}],[11,"ip","","Returns the IP address associated with this socket address.",464,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"ipv4addr"}}],[11,"set_ip","","Change the IP address associated with this socket address.",464,null],[11,"port","","Returns the port number associated with this socket address.",464,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"u16"}}],[11,"set_port","","Change the port number associated with this socket address.",464,null],[11,"new","","Creates a new socket address from the ip/port/flowinfo/scope_id\ncomponents.",465,{"inputs":[{"name":"socketaddrv6"},{"name":"ipv6addr"},{"name":"u16"},{"name":"u32"},{"name":"u32"}],"output":{"name":"socketaddrv6"}}],[11,"ip","","Returns the IP address associated with this socket address.",465,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"ipv6addr"}}],[11,"set_ip","","Change the IP address associated with this socket address.",465,null],[11,"port","","Returns the port number associated with this socket address.",465,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"u16"}}],[11,"set_port","","Change the port number associated with this socket address.",465,null],[11,"flowinfo","","Returns the flow information associated with this address,\ncorresponding to the `sin6_flowinfo` field in C.",465,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"u32"}}],[11,"set_flowinfo","","Change the flow information associated with this socket address.",465,null],[11,"scope_id","","Returns the scope ID associated with this address,\ncorresponding to the `sin6_scope_id` field in C.",465,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"u32"}}],[11,"set_scope_id","","Change the scope ID associated with this socket address.",465,null],[11,"fmt","","",463,{"inputs":[{"name":"socketaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",464,{"inputs":[{"name":"socketaddrv4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",464,{"inputs":[{"name":"socketaddrv4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",465,{"inputs":[{"name":"socketaddrv6"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",465,{"inputs":[{"name":"socketaddrv6"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",464,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"socketaddrv4"}}],[11,"clone","","",465,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"socketaddrv6"}}],[11,"eq","","",464,{"inputs":[{"name":"socketaddrv4"},{"name":"socketaddrv4"}],"output":{"name":"bool"}}],[11,"eq","","",465,{"inputs":[{"name":"socketaddrv6"},{"name":"socketaddrv6"}],"output":{"name":"bool"}}],[11,"hash","","",464,null],[11,"hash","","",465,null],[11,"to_socket_addrs","","",463,{"inputs":[{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"to_socket_addrs","","",464,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"result"}}],[11,"to_socket_addrs","","",465,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"result"}}],[11,"connect","std::net::tcp","Opens a TCP connection to a remote host.",466,{"inputs":[{"name":"tcpstream"},{"name":"a"}],"output":{"name":"result"}}],[11,"peer_addr","","Returns the socket address of the remote peer of this TCP connection.",466,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the socket address of the local half of this TCP connection.",466,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",466,{"inputs":[{"name":"tcpstream"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",466,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",466,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",466,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","Returns the read timeout of this socket.",466,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"write_timeout","","Returns the write timeout of this socket.",466,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"read","","",466,null],[11,"read_to_end","","",466,{"inputs":[{"name":"tcpstream"},{"name":"vec"}],"output":{"name":"result"}}],[11,"write","","",466,null],[11,"flush","","",466,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"fmt","","",466,{"inputs":[{"name":"tcpstream"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","Creates a new `TcpListener` which will be bound to the specified\naddress.",467,{"inputs":[{"name":"tcplistener"},{"name":"a"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the local socket address of this listener.",467,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",467,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"accept","","Accept a new incoming connection from this listener.",467,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"incoming","","Returns an iterator over the connections being received on this\nlistener.",467,{"inputs":[{"name":"tcplistener"}],"output":{"name":"incoming"}}],[11,"next","","",468,{"inputs":[{"name":"incoming"}],"output":{"name":"option"}}],[11,"fmt","","",467,{"inputs":[{"name":"tcplistener"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","std::net::udp","Creates a UDP socket from the given address.",469,{"inputs":[{"name":"udpsocket"},{"name":"a"}],"output":{"name":"result"}}],[11,"recv_from","","Receives data from the socket. On success, returns the number of bytes\nread and the address from whence the data came.",469,null],[11,"send_to","","Sends data on the socket to the given address. On success, returns the\nnumber of bytes written.",469,null],[11,"local_addr","","Returns the socket address that this socket was created from.",469,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",469,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",469,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",469,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","Returns the read timeout of this socket.",469,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"write_timeout","","Returns the write timeout of this socket.",469,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"fmt","","",469,{"inputs":[{"name":"udpsocket"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","std::net::ip","",459,{"inputs":[{"name":"ipaddr"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",461,{"inputs":[{"name":"ipv4addr"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",462,{"inputs":[{"name":"ipv6addr"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","std::net::addr","",464,{"inputs":[{"name":"socketaddrv4"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",465,{"inputs":[{"name":"socketaddrv6"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",463,{"inputs":[{"name":"socketaddr"},{"name":"str"}],"output":{"name":"result"}}],[11,"eq","std::net::parser","",470,{"inputs":[{"name":"addrparseerror"},{"name":"addrparseerror"}],"output":{"name":"bool"}}],[11,"ne","","",470,{"inputs":[{"name":"addrparseerror"},{"name":"addrparseerror"}],"output":{"name":"bool"}}],[11,"clone","","",470,{"inputs":[{"name":"addrparseerror"}],"output":{"name":"addrparseerror"}}],[11,"fmt","","",470,{"inputs":[{"name":"addrparseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",470,{"inputs":[{"name":"addrparseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",470,{"inputs":[{"name":"addrparseerror"}],"output":{"name":"str"}}],[11,"fmt","std::net","",471,{"inputs":[{"name":"shutdown"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",471,{"inputs":[{"name":"shutdown"},{"name":"shutdown"}],"output":{"name":"bool"}}],[11,"ne","","",471,{"inputs":[{"name":"shutdown"},{"name":"shutdown"}],"output":{"name":"bool"}}],[11,"clone","","",471,{"inputs":[{"name":"shutdown"}],"output":{"name":"shutdown"}}],[11,"next","","",472,{"inputs":[{"name":"lookuphost"}],"output":{"name":"option"}}],[11,"clone","std::os::linux::raw::arch","",473,{"inputs":[{"name":"stat"}],"output":{"name":"stat"}}],[11,"as_raw_stat","std::fs","",418,{"inputs":[{"name":"metadata"}],"output":{"name":"stat"}}],[11,"st_dev","","",418,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"st_ino","","",418,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"st_mode","","",418,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"st_nlink","","",418,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"st_uid","","",418,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"st_gid","","",418,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"st_rdev","","",418,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"st_size","","",418,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"st_atime","","",418,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"st_atime_nsec","","",418,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"st_mtime","","",418,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"st_mtime_nsec","","",418,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"st_ctime","","",418,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"st_ctime_nsec","","",418,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"st_blksize","","",418,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"st_blocks","","",418,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"as_raw_fd","","",422,{"inputs":[{"name":"file"}],"output":{"name":"i32"}}],[11,"from_raw_fd","","",422,{"inputs":[{"name":"file"},{"name":"i32"}],"output":{"name":"file"}}],[11,"into_raw_fd","","",422,{"inputs":[{"name":"file"}],"output":{"name":"i32"}}],[11,"as_raw_fd","std::net::tcp","",466,{"inputs":[{"name":"tcpstream"}],"output":{"name":"i32"}}],[11,"as_raw_fd","","",467,{"inputs":[{"name":"tcplistener"}],"output":{"name":"i32"}}],[11,"as_raw_fd","std::net::udp","",469,{"inputs":[{"name":"udpsocket"}],"output":{"name":"i32"}}],[11,"from_raw_fd","std::net::tcp","",466,{"inputs":[{"name":"tcpstream"},{"name":"i32"}],"output":{"name":"tcpstream"}}],[11,"from_raw_fd","","",467,{"inputs":[{"name":"tcplistener"},{"name":"i32"}],"output":{"name":"tcplistener"}}],[11,"from_raw_fd","std::net::udp","",469,{"inputs":[{"name":"udpsocket"},{"name":"i32"}],"output":{"name":"udpsocket"}}],[11,"into_raw_fd","std::net::tcp","",466,{"inputs":[{"name":"tcpstream"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",467,{"inputs":[{"name":"tcplistener"}],"output":{"name":"i32"}}],[11,"into_raw_fd","std::net::udp","",469,{"inputs":[{"name":"udpsocket"}],"output":{"name":"i32"}}],[11,"from_vec","std::ffi::os_str","",415,{"inputs":[{"name":"osstring"},{"name":"vec"}],"output":{"name":"osstring"}}],[11,"into_vec","","",415,{"inputs":[{"name":"osstring"}],"output":{"name":"vec"}}],[11,"from_bytes","","",416,null],[11,"as_bytes","","",416,null],[11,"mode","std::fs","",420,{"inputs":[{"name":"permissions"}],"output":{"name":"u32"}}],[11,"set_mode","","",420,null],[11,"from_mode","","",420,{"inputs":[{"name":"permissions"},{"name":"u32"}],"output":{"name":"permissions"}}],[11,"mode","","",419,{"inputs":[{"name":"openoptions"},{"name":"u32"}],"output":{"name":"openoptions"}}],[11,"custom_flags","","",419,{"inputs":[{"name":"openoptions"},{"name":"i32"}],"output":{"name":"openoptions"}}],[11,"dev","","",418,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"ino","","",418,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"mode","","",418,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"nlink","","",418,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"uid","","",418,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"gid","","",418,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"rdev","","",418,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"size","","",418,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"atime","","",418,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"atime_nsec","","",418,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"mtime","","",418,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"mtime_nsec","","",418,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"ctime","","",418,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"ctime_nsec","","",418,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"blksize","","",418,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"blocks","","",418,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"is_block_device","","",421,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_char_device","","",421,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_fifo","","",421,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_socket","","",421,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"ino","","",424,{"inputs":[{"name":"direntry"}],"output":{"name":"u64"}}],[11,"mode","","",426,{"inputs":[{"name":"dirbuilder"},{"name":"u32"}],"output":{"name":"dirbuilder"}}],[11,"uid","std::process","",474,{"inputs":[{"name":"command"},{"name":"u32"}],"output":{"name":"command"}}],[11,"gid","","",474,{"inputs":[{"name":"command"},{"name":"u32"}],"output":{"name":"command"}}],[11,"session_leader","","",474,{"inputs":[{"name":"command"},{"name":"bool"}],"output":{"name":"command"}}],[11,"before_exec","","",474,{"inputs":[{"name":"command"},{"name":"f"}],"output":{"name":"command"}}],[11,"exec","","",474,{"inputs":[{"name":"command"}],"output":{"name":"error"}}],[11,"signal","","",475,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"from_raw_fd","","",476,{"inputs":[{"name":"stdio"},{"name":"i32"}],"output":{"name":"stdio"}}],[11,"as_raw_fd","","",477,{"inputs":[{"name":"childstdin"}],"output":{"name":"i32"}}],[11,"as_raw_fd","","",478,{"inputs":[{"name":"childstdout"}],"output":{"name":"i32"}}],[11,"as_raw_fd","","",479,{"inputs":[{"name":"childstderr"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",477,{"inputs":[{"name":"childstdin"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",478,{"inputs":[{"name":"childstdout"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",479,{"inputs":[{"name":"childstderr"}],"output":{"name":"i32"}}],[11,"as_pthread_t","std::thread","",348,{"inputs":[{"name":"joinhandle"}],"output":{"name":"u64"}}],[11,"into_pthread_t","","",348,{"inputs":[{"name":"joinhandle"}],"output":{"name":"u64"}}],[11,"new","std::panic","Creates a new `AssertRecoverSafe` wrapper around the provided type.",480,{"inputs":[{"name":"assertrecoversafe"},{"name":"t"}],"output":{"name":"assertrecoversafe"}}],[11,"into_inner","","Consumes the `AssertRecoverSafe`, returning the wrapped value.",480,{"inputs":[{"name":"assertrecoversafe"}],"output":{"name":"t"}}],[11,"deref","","",480,{"inputs":[{"name":"assertrecoversafe"}],"output":{"name":"t"}}],[11,"deref_mut","","",480,{"inputs":[{"name":"assertrecoversafe"}],"output":{"name":"t"}}],[11,"eq","std::path","",481,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"ne","","",481,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"cmp","","",481,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",481,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"option"}}],[11,"lt","","",481,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"le","","",481,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"gt","","",481,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"ge","","",481,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"hash","","",481,null],[11,"fmt","","",481,{"inputs":[{"name":"prefix"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",481,{"inputs":[{"name":"prefix"}],"output":{"name":"prefix"}}],[11,"is_verbatim","","Determines if the prefix is verbatim, i.e. begins with `\\\\?\\`.",481,{"inputs":[{"name":"prefix"}],"output":{"name":"bool"}}],[11,"fmt","","",482,{"inputs":[{"name":"state"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",482,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"option"}}],[11,"lt","","",482,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"le","","",482,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"gt","","",482,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"ge","","",482,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"eq","","",482,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"ne","","",482,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"clone","","",482,{"inputs":[{"name":"state"}],"output":{"name":"state"}}],[11,"fmt","","",483,{"inputs":[{"name":"prefixcomponent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",483,{"inputs":[{"name":"prefixcomponent"}],"output":{"name":"prefixcomponent"}}],[11,"kind","","The parsed prefix data.",483,{"inputs":[{"name":"prefixcomponent"}],"output":{"name":"prefix"}}],[11,"as_os_str","","The raw `OsStr` slice for this prefix.",483,{"inputs":[{"name":"prefixcomponent"}],"output":{"name":"osstr"}}],[11,"eq","","",483,{"inputs":[{"name":"prefixcomponent"},{"name":"prefixcomponent"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",483,{"inputs":[{"name":"prefixcomponent"},{"name":"prefixcomponent"}],"output":{"name":"option"}}],[11,"cmp","","",483,{"inputs":[{"name":"prefixcomponent"},{"name":"prefixcomponent"}],"output":{"name":"ordering"}}],[11,"hash","","",483,null],[11,"fmt","","",484,{"inputs":[{"name":"component"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",484,null],[11,"cmp","","",484,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",484,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"option"}}],[11,"lt","","",484,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"le","","",484,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"gt","","",484,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"ge","","",484,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"eq","","",484,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"ne","","",484,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"clone","","",484,{"inputs":[{"name":"component"}],"output":{"name":"component"}}],[11,"as_os_str","","Extracts the underlying `OsStr` slice",484,{"inputs":[{"name":"component"}],"output":{"name":"osstr"}}],[11,"as_ref","","",484,{"inputs":[{"name":"component"}],"output":{"name":"osstr"}}],[11,"clone","","",485,{"inputs":[{"name":"components"}],"output":{"name":"components"}}],[11,"clone","","",486,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",485,{"inputs":[{"name":"components"}],"output":{"name":"path"}}],[11,"peek","","Examine the next component without consuming it.",485,{"inputs":[{"name":"components"}],"output":{"name":"option"}}],[11,"as_ref","","",485,{"inputs":[{"name":"components"}],"output":{"name":"path"}}],[11,"as_ref","","",485,{"inputs":[{"name":"components"}],"output":{"name":"osstr"}}],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",486,{"inputs":[{"name":"iter"}],"output":{"name":"path"}}],[11,"as_ref","","",486,{"inputs":[{"name":"iter"}],"output":{"name":"path"}}],[11,"as_ref","","",486,{"inputs":[{"name":"iter"}],"output":{"name":"osstr"}}],[11,"next","","",486,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next_back","","",486,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",485,{"inputs":[{"name":"components"}],"output":{"name":"option"}}],[11,"next_back","","",485,{"inputs":[{"name":"components"}],"output":{"name":"option"}}],[11,"eq","","",485,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",485,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"option"}}],[11,"cmp","","",485,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"ordering"}}],[11,"clone","","",487,{"inputs":[{"name":"pathbuf"}],"output":{"name":"pathbuf"}}],[11,"new","","Allocates an empty `PathBuf`.",487,{"inputs":[{"name":"pathbuf"}],"output":{"name":"pathbuf"}}],[11,"as_path","","Coerces to a `Path` slice.",487,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"push","","Extends `self` with `path`.",487,null],[11,"pop","","Truncate `self` to `self.parent()`.",487,{"inputs":[{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"set_file_name","","Updates `self.file_name()` to `file_name`.",487,null],[11,"set_extension","","Updates `self.extension()` to `extension`.",487,{"inputs":[{"name":"pathbuf"},{"name":"s"}],"output":{"name":"bool"}}],[11,"into_os_string","","Consumes the `PathBuf`, yielding its internal `OsString` storage.",487,{"inputs":[{"name":"pathbuf"}],"output":{"name":"osstring"}}],[11,"from","","",487,{"inputs":[{"name":"pathbuf"},{"name":"t"}],"output":{"name":"pathbuf"}}],[11,"from","","",487,{"inputs":[{"name":"pathbuf"},{"name":"osstring"}],"output":{"name":"pathbuf"}}],[11,"from","","",487,{"inputs":[{"name":"pathbuf"},{"name":"string"}],"output":{"name":"pathbuf"}}],[11,"from_iter","","",487,{"inputs":[{"name":"pathbuf"},{"name":"i"}],"output":{"name":"pathbuf"}}],[11,"extend","","",487,null],[11,"fmt","","",487,{"inputs":[{"name":"pathbuf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Directly wrap a string slice as a `Path` slice.",488,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"path"}}],[11,"as_os_str","","Yields the underlying `OsStr` slice.",488,{"inputs":[{"name":"path"}],"output":{"name":"osstr"}}],[11,"to_str","","Yields a `&amp;str` slice if the `Path` is valid unicode.",488,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"to_string_lossy","","Converts a `Path` to a `Cow&lt;str&gt;`.",488,{"inputs":[{"name":"path"}],"output":{"name":"cow"}}],[11,"to_path_buf","","Converts a `Path` to an owned `PathBuf`.",488,{"inputs":[{"name":"path"}],"output":{"name":"pathbuf"}}],[11,"is_absolute","","A path is *absolute* if it is independent of the current directory.",488,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_relative","","A path is *relative* if it is not absolute.",488,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"prefix","","Returns the *prefix* of a path, if any.",488,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"has_root","","A path has a root if the body of the path begins with the directory separator.",488,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"parent","","The path without its final component, if any.",488,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"file_name","","The final component of the path, if it is a normal file.",488,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"relative_from","","Returns a path that, when joined onto `base`, yields `self`.",488,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"option"}}],[11,"strip_prefix","","Returns a path that, when joined onto `base`, yields `self`.",488,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"result"}}],[11,"starts_with","","Determines whether `base` is a prefix of `self`.",488,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"bool"}}],[11,"ends_with","","Determines whether `child` is a suffix of `self`.",488,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"bool"}}],[11,"file_stem","","Extracts the stem (non-extension) portion of `self.file_name()`.",488,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"extension","","Extracts the extension of `self.file_name()`, if possible.",488,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"join","","Creates an owned `PathBuf` with `path` adjoined to `self`.",488,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"pathbuf"}}],[11,"with_file_name","","Creates an owned `PathBuf` like `self` but with the given file name.",488,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"pathbuf"}}],[11,"with_extension","","Creates an owned `PathBuf` like `self` but with the given extension.",488,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"pathbuf"}}],[11,"components","","Produce an iterator over the components of the path.",488,{"inputs":[{"name":"path"}],"output":{"name":"components"}}],[11,"iter","","Produce an iterator over the path&#39;s components viewed as `OsStr` slices.",488,{"inputs":[{"name":"path"}],"output":{"name":"iter"}}],[11,"display","","Returns an object that implements `Display` for safely printing paths\nthat may contain non-Unicode data.",488,{"inputs":[{"name":"path"}],"output":{"name":"display"}}],[11,"metadata","","Query the file system to get information about a file, directory, etc.",488,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"symlink_metadata","","Query the metadata about a file without following symlinks.",488,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"canonicalize","","Returns the canonical form of the path with all intermediate components\nnormalized and symbolic links resolved.",488,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"read_link","","Reads a symbolic link, returning the file that the link points to.",488,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"read_dir","","Returns an iterator over the entries within a directory.",488,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"exists","","Returns whether the path points at an existing entity.",488,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_file","","Returns whether the path is pointing at a regular file.",488,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_dir","","Returns whether the path is pointing at a directory.",488,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"deref","","",487,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"borrow","","",487,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"into_cow","","",487,{"inputs":[{"name":"pathbuf"}],"output":{"name":"cow"}}],[11,"from","collections::borrow","",489,{"inputs":[{"name":"cow"},{"name":"path"}],"output":{"name":"cow"}}],[11,"from","","",489,{"inputs":[{"name":"cow"},{"name":"pathbuf"}],"output":{"name":"cow"}}],[11,"to_owned","std::path","",488,{"inputs":[{"name":"path"}],"output":{"name":"pathbuf"}}],[11,"eq","","",487,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"hash","","",487,null],[11,"partial_cmp","","",487,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"option"}}],[11,"cmp","","",487,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"ordering"}}],[11,"as_ref","","",487,{"inputs":[{"name":"pathbuf"}],"output":{"name":"osstr"}}],[11,"into","","",487,{"inputs":[{"name":"pathbuf"}],"output":{"name":"osstring"}}],[11,"eq","","",490,{"inputs":[{"name":"stripprefixerror"},{"name":"stripprefixerror"}],"output":{"name":"bool"}}],[11,"ne","","",490,{"inputs":[{"name":"stripprefixerror"},{"name":"stripprefixerror"}],"output":{"name":"bool"}}],[11,"clone","","",490,{"inputs":[{"name":"stripprefixerror"}],"output":{"name":"stripprefixerror"}}],[11,"fmt","","",490,{"inputs":[{"name":"stripprefixerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",488,{"inputs":[{"name":"path"}],"output":{"name":"osstr"}}],[11,"fmt","","",488,{"inputs":[{"name":"path"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",491,{"inputs":[{"name":"display"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",491,{"inputs":[{"name":"display"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",488,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"bool"}}],[11,"hash","","",488,null],[11,"partial_cmp","","",488,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"option"}}],[11,"cmp","","",488,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"ordering"}}],[11,"as_ref","","",488,{"inputs":[{"name":"path"}],"output":{"name":"path"}}],[11,"as_ref","std::ffi::os_str","",416,{"inputs":[{"name":"osstr"}],"output":{"name":"path"}}],[11,"as_ref","","",415,{"inputs":[{"name":"osstring"}],"output":{"name":"path"}}],[11,"as_ref","collections::string","",417,{"inputs":[{"name":"string"}],"output":{"name":"path"}}],[11,"as_ref","std::path","",487,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"eq","","",487,{"inputs":[{"name":"pathbuf"},{"name":"path"}],"output":{"name":"bool"}}],[11,"eq","","",488,{"inputs":[{"name":"path"},{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"eq","","",487,{"inputs":[{"name":"pathbuf"},{"name":"path"}],"output":{"name":"bool"}}],[11,"eq","collections::borrow","",489,{"inputs":[{"name":"cow"},{"name":"path"}],"output":{"name":"bool"}}],[11,"eq","std::path","",488,{"inputs":[{"name":"path"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"eq","collections::borrow","",489,{"inputs":[{"name":"cow"},{"name":"path"}],"output":{"name":"bool"}}],[11,"eq","","",489,{"inputs":[{"name":"cow"},{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"eq","std::path","",487,{"inputs":[{"name":"pathbuf"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"fmt","","",490,{"inputs":[{"name":"stripprefixerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",490,{"inputs":[{"name":"stripprefixerror"}],"output":{"name":"str"}}],[11,"write","std::process","",477,null],[11,"flush","","",477,{"inputs":[{"name":"childstdin"}],"output":{"name":"result"}}],[11,"read","","",478,null],[11,"read","","",479,null],[11,"new","","Constructs a new `Command` for launching the program at\npath `program`, with the following default configuration:",474,{"inputs":[{"name":"command"},{"name":"s"}],"output":{"name":"command"}}],[11,"arg","","Add an argument to pass to the program.",474,{"inputs":[{"name":"command"},{"name":"s"}],"output":{"name":"command"}}],[11,"args","","Add multiple arguments to pass to the program.",474,null],[11,"env","","Inserts or updates an environment variable mapping.",474,{"inputs":[{"name":"command"},{"name":"k"},{"name":"v"}],"output":{"name":"command"}}],[11,"env_remove","","Removes an environment variable mapping.",474,{"inputs":[{"name":"command"},{"name":"k"}],"output":{"name":"command"}}],[11,"env_clear","","Clears the entire environment map for the child process.",474,{"inputs":[{"name":"command"}],"output":{"name":"command"}}],[11,"current_dir","","Sets the working directory for the child process.",474,{"inputs":[{"name":"command"},{"name":"p"}],"output":{"name":"command"}}],[11,"stdin","","Configuration for the child process&#39;s stdin handle (file descriptor 0).",474,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"command"}}],[11,"stdout","","Configuration for the child process&#39;s stdout handle (file descriptor 1).",474,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"command"}}],[11,"stderr","","Configuration for the child process&#39;s stderr handle (file descriptor 2).",474,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"command"}}],[11,"spawn","","Executes the command as a child process, returning a handle to it.",474,{"inputs":[{"name":"command"}],"output":{"name":"result"}}],[11,"output","","Executes the command as a child process, waiting for it to finish and\ncollecting all of its output.",474,{"inputs":[{"name":"command"}],"output":{"name":"result"}}],[11,"status","","Executes a command as a child process, waiting for it to finish and\ncollecting its exit status.",474,{"inputs":[{"name":"command"}],"output":{"name":"result"}}],[11,"fmt","","Format the program and arguments of a Command for display. Any\nnon-utf8 data is lossily converted using the utf8 replacement\ncharacter.",474,{"inputs":[{"name":"command"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",492,{"inputs":[{"name":"output"}],"output":{"name":"output"}}],[11,"eq","","",492,{"inputs":[{"name":"output"},{"name":"output"}],"output":{"name":"bool"}}],[11,"ne","","",492,{"inputs":[{"name":"output"},{"name":"output"}],"output":{"name":"bool"}}],[11,"fmt","","",492,{"inputs":[{"name":"output"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"piped","","A new pipe should be arranged to connect the parent and child processes.",476,{"inputs":[{"name":"stdio"}],"output":{"name":"stdio"}}],[11,"inherit","","The child inherits from the corresponding parent descriptor.",476,{"inputs":[{"name":"stdio"}],"output":{"name":"stdio"}}],[11,"null","","This stream will be ignored. This is the equivalent of attaching the\nstream to `/dev/null`",476,{"inputs":[{"name":"stdio"}],"output":{"name":"stdio"}}],[11,"fmt","","",475,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",475,{"inputs":[{"name":"exitstatus"}],"output":{"name":"exitstatus"}}],[11,"eq","","",475,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"ne","","",475,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"success","","Was termination successful? Signal termination not considered a success,\nand success is defined as a zero exit status.",475,{"inputs":[{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"code","","Returns the exit code of the process, if any.",475,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"fmt","","",475,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"kill","","Forces the child to exit. This is equivalent to sending a\nSIGKILL on unix platforms.",493,{"inputs":[{"name":"child"}],"output":{"name":"result"}}],[11,"id","","Returns the OS-assigned process identifier associated with this child.",493,{"inputs":[{"name":"child"}],"output":{"name":"u32"}}],[11,"wait","","Waits for the child to exit completely, returning the status that it\nexited with. This function will continue to have the same return value\nafter it has been called at least once.",493,{"inputs":[{"name":"child"}],"output":{"name":"result"}}],[11,"wait_with_output","","Simultaneously waits for the child to exit and collect all remaining\noutput on the stdout/stderr handles, returning an `Output`\ninstance.",493,{"inputs":[{"name":"child"}],"output":{"name":"result"}}],[11,"clone","std::sync::mpsc::blocking","",494,{"inputs":[{"name":"signaltoken"}],"output":{"name":"signaltoken"}}],[11,"signal","","",494,{"inputs":[{"name":"signaltoken"}],"output":{"name":"bool"}}],[11,"cast_to_usize","","Convert to an unsafe usize value. Useful for storing in a pipe&#39;s state\nflag.",494,{"inputs":[{"name":"signaltoken"}],"output":{"name":"usize"}}],[11,"cast_from_usize","","Convert from an unsafe usize value. Useful for retrieving a pipe&#39;s state\nflag.",494,{"inputs":[{"name":"signaltoken"},{"name":"usize"}],"output":{"name":"signaltoken"}}],[11,"wait","","",495,null],[11,"new","std::sync::mpsc::oneshot","",496,{"inputs":[{"name":"packet"}],"output":{"name":"packet"}}],[11,"send","","",496,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"sent","","",496,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"recv","","",496,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",496,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"upgrade","","",496,{"inputs":[{"name":"packet"},{"name":"receiver"}],"output":{"name":"upgraderesult"}}],[11,"drop_chan","","",496,null],[11,"drop_port","","",496,null],[11,"can_recv","","",496,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"start_selection","","",496,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"selectionresult"}}],[11,"abort_selection","","",496,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"drop","","",496,null],[11,"eq","std::sync::mpsc::select","",497,{"inputs":[{"name":"startresult"},{"name":"startresult"}],"output":{"name":"bool"}}],[11,"ne","","",497,{"inputs":[{"name":"startresult"},{"name":"startresult"}],"output":{"name":"bool"}}],[11,"new","","Creates a new selection structure. This set is initially empty.",498,{"inputs":[{"name":"select"}],"output":{"name":"select"}}],[11,"handle","","Creates a new handle into this receiver set for a new receiver. Note\nthat this does *not* add the receiver to the receiver set, for that you\nmust call the `add` method on the handle itself.",498,{"inputs":[{"name":"select"},{"name":"receiver"}],"output":{"name":"handle"}}],[11,"wait","","Waits for an event on this receiver set. The returned value is *not* an\nindex, but rather an id. This id can be queried against any active\n`Handle` structures (each one has an `id` method). The handle with\nthe matching `id` will have some sort of event available on it. The\nevent could either be that data is available or the corresponding\nchannel has been closed.",498,{"inputs":[{"name":"select"}],"output":{"name":"usize"}}],[11,"id","","Retrieves the id of this handle.",499,{"inputs":[{"name":"handle"}],"output":{"name":"usize"}}],[11,"recv","","Blocks to receive a value on the underlying receiver, returning `Some` on\nsuccess or `None` if the channel disconnects. This function has the same\nsemantics as `Receiver.recv`",499,{"inputs":[{"name":"handle"}],"output":{"name":"result"}}],[11,"add","","Adds this handle to the receiver set that the handle was created from. This\nmethod can be called multiple times, but it has no effect if `add` was\ncalled previously.",499,null],[11,"remove","","Removes this handle from the `Select` set. This method is unsafe because\nit has no guarantee that the `Handle` was not moved since `add` was\ncalled.",499,null],[11,"drop","","",498,null],[11,"drop","","",499,null],[11,"next","","",500,{"inputs":[{"name":"packets"}],"output":{"name":"option"}}],[11,"fmt","","",498,{"inputs":[{"name":"select"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",499,{"inputs":[{"name":"handle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","std::sync::mpsc::shared","",501,{"inputs":[{"name":"packet"}],"output":{"name":"packet"}}],[11,"postinit_lock","","",501,{"inputs":[{"name":"packet"}],"output":{"name":"mutexguard"}}],[11,"inherit_blocker","","",501,null],[11,"send","","",501,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"recv","","",501,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",501,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"clone_chan","","",501,null],[11,"drop_chan","","",501,null],[11,"drop_port","","",501,null],[11,"can_recv","","",501,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"start_selection","","",501,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"startresult"}}],[11,"abort_selection","","",501,{"inputs":[{"name":"packet"},{"name":"bool"}],"output":{"name":"bool"}}],[11,"drop","","",501,null],[11,"new","std::sync::mpsc::stream","",502,{"inputs":[{"name":"packet"}],"output":{"name":"packet"}}],[11,"send","","",502,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"upgrade","","",502,{"inputs":[{"name":"packet"},{"name":"receiver"}],"output":{"name":"upgraderesult"}}],[11,"recv","","",502,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",502,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"drop_chan","","",502,null],[11,"drop_port","","",502,null],[11,"can_recv","","",502,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"start_selection","","",502,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"selectionresult"}}],[11,"abort_selection","","",502,{"inputs":[{"name":"packet"},{"name":"bool"}],"output":{"name":"result"}}],[11,"drop","","",502,null],[11,"fmt","std::sync::mpsc::sync","",503,{"inputs":[{"name":"failure"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",504,{"inputs":[{"name":"packet"},{"name":"usize"}],"output":{"name":"packet"}}],[11,"send","","",504,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"try_send","","",504,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"recv","","",504,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",504,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"clone_chan","","",504,null],[11,"drop_chan","","",504,null],[11,"drop_port","","",504,null],[11,"can_recv","","",504,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"start_selection","","",504,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"startresult"}}],[11,"abort_selection","","",504,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"drop","","",504,null],[11,"new","std::sync::mpsc::mpsc_queue","Creates a new queue that is safe to share among multiple producers and\none consumer.",505,{"inputs":[{"name":"queue"}],"output":{"name":"queue"}}],[11,"push","","Pushes a new value onto this queue.",505,null],[11,"pop","","Pops some data from this queue.",505,{"inputs":[{"name":"queue"}],"output":{"name":"popresult"}}],[11,"drop","","",505,null],[11,"new","std::sync::mpsc::spsc_queue","Creates a new queue.",506,{"inputs":[{"name":"queue"},{"name":"usize"}],"output":{"name":"queue"}}],[11,"push","","Pushes a new value onto this queue. Note that to use this function\nsafely, it must be externally guaranteed that there is only one pusher.",506,null],[11,"pop","","Attempts to pop a value from this queue. Remember that to use this type\nsafely you must ensure that there is only one popper at a time.",506,{"inputs":[{"name":"queue"}],"output":{"name":"option"}}],[11,"peek","","Attempts to peek at the head of the queue, returning `None` if the queue\nhas no data currently",506,{"inputs":[{"name":"queue"}],"output":{"name":"option"}}],[11,"drop","","",506,null],[11,"clone","std::sync::mpsc","",507,{"inputs":[{"name":"senderror"}],"output":{"name":"senderror"}}],[11,"eq","","",507,{"inputs":[{"name":"senderror"},{"name":"senderror"}],"output":{"name":"bool"}}],[11,"ne","","",507,{"inputs":[{"name":"senderror"},{"name":"senderror"}],"output":{"name":"bool"}}],[11,"fmt","","",508,{"inputs":[{"name":"recverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",508,{"inputs":[{"name":"recverror"}],"output":{"name":"recverror"}}],[11,"eq","","",508,{"inputs":[{"name":"recverror"},{"name":"recverror"}],"output":{"name":"bool"}}],[11,"ne","","",508,{"inputs":[{"name":"recverror"},{"name":"recverror"}],"output":{"name":"bool"}}],[11,"fmt","","",509,{"inputs":[{"name":"tryrecverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",509,{"inputs":[{"name":"tryrecverror"}],"output":{"name":"tryrecverror"}}],[11,"eq","","",509,{"inputs":[{"name":"tryrecverror"},{"name":"tryrecverror"}],"output":{"name":"bool"}}],[11,"ne","","",509,{"inputs":[{"name":"tryrecverror"},{"name":"tryrecverror"}],"output":{"name":"bool"}}],[11,"clone","","",510,{"inputs":[{"name":"trysenderror"}],"output":{"name":"trysenderror"}}],[11,"eq","","",510,{"inputs":[{"name":"trysenderror"},{"name":"trysenderror"}],"output":{"name":"bool"}}],[11,"ne","","",510,{"inputs":[{"name":"trysenderror"},{"name":"trysenderror"}],"output":{"name":"bool"}}],[11,"send","","Attempts to send a value on this channel, returning it back if it could\nnot be sent.",511,{"inputs":[{"name":"sender"},{"name":"t"}],"output":{"name":"result"}}],[11,"clone","","",511,{"inputs":[{"name":"sender"}],"output":{"name":"sender"}}],[11,"drop","","",511,null],[11,"fmt","","",511,{"inputs":[{"name":"sender"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"send","","Sends a value on this synchronous channel.",512,{"inputs":[{"name":"syncsender"},{"name":"t"}],"output":{"name":"result"}}],[11,"try_send","","Attempts to send a value on this channel without blocking.",512,{"inputs":[{"name":"syncsender"},{"name":"t"}],"output":{"name":"result"}}],[11,"clone","","",512,{"inputs":[{"name":"syncsender"}],"output":{"name":"syncsender"}}],[11,"drop","","",512,null],[11,"fmt","","",512,{"inputs":[{"name":"syncsender"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"try_recv","","Attempts to return a pending value on this receiver without blocking",513,{"inputs":[{"name":"receiver"}],"output":{"name":"result"}}],[11,"recv","","Attempts to wait for a value on this receiver, returning an error if the\ncorresponding channel has hung up.",513,{"inputs":[{"name":"receiver"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator that will block waiting for messages, but never\n`panic!`. It will return `None` when the channel has hung up.",513,{"inputs":[{"name":"receiver"}],"output":{"name":"iter"}}],[11,"next","","",514,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",515,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"into_iter","","",513,{"inputs":[{"name":"receiver"}],"output":{"name":"intoiter"}}],[11,"drop","","",513,null],[11,"fmt","","",513,{"inputs":[{"name":"receiver"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",507,{"inputs":[{"name":"senderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",507,{"inputs":[{"name":"senderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",507,{"inputs":[{"name":"senderror"}],"output":{"name":"str"}}],[11,"cause","","",507,{"inputs":[{"name":"senderror"}],"output":{"name":"option"}}],[11,"fmt","","",510,{"inputs":[{"name":"trysenderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",510,{"inputs":[{"name":"trysenderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",510,{"inputs":[{"name":"trysenderror"}],"output":{"name":"str"}}],[11,"cause","","",510,{"inputs":[{"name":"trysenderror"}],"output":{"name":"option"}}],[11,"fmt","","",508,{"inputs":[{"name":"recverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",508,{"inputs":[{"name":"recverror"}],"output":{"name":"str"}}],[11,"cause","","",508,{"inputs":[{"name":"recverror"}],"output":{"name":"option"}}],[11,"fmt","","",509,{"inputs":[{"name":"tryrecverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",509,{"inputs":[{"name":"tryrecverror"}],"output":{"name":"str"}}],[11,"cause","","",509,{"inputs":[{"name":"tryrecverror"}],"output":{"name":"option"}}],[11,"new","std::sync::barrier","Creates a new barrier that can block a given number of threads.",516,{"inputs":[{"name":"barrier"},{"name":"usize"}],"output":{"name":"barrier"}}],[11,"wait","","Blocks the current thread until all threads has rendezvoused here.",516,{"inputs":[{"name":"barrier"}],"output":{"name":"barrierwaitresult"}}],[11,"is_leader","","Returns whether this thread from `wait` is the &quot;leader thread&quot;.",517,{"inputs":[{"name":"barrierwaitresult"}],"output":{"name":"bool"}}],[11,"clone","std::sync::condvar","",518,{"inputs":[{"name":"waittimeoutresult"}],"output":{"name":"waittimeoutresult"}}],[11,"eq","","",518,{"inputs":[{"name":"waittimeoutresult"},{"name":"waittimeoutresult"}],"output":{"name":"bool"}}],[11,"ne","","",518,{"inputs":[{"name":"waittimeoutresult"},{"name":"waittimeoutresult"}],"output":{"name":"bool"}}],[11,"fmt","","",518,{"inputs":[{"name":"waittimeoutresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"timed_out","","Returns whether the wait was known to have timed out.",518,{"inputs":[{"name":"waittimeoutresult"}],"output":{"name":"bool"}}],[11,"new","","Creates a new condition variable which is ready to be waited on and\nnotified.",519,{"inputs":[{"name":"condvar"}],"output":{"name":"condvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",519,{"inputs":[{"name":"condvar"},{"name":"mutexguard"}],"output":{"name":"result"}}],[11,"wait_timeout_ms","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",519,{"inputs":[{"name":"condvar"},{"name":"mutexguard"},{"name":"u32"}],"output":{"name":"result"}}],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",519,{"inputs":[{"name":"condvar"},{"name":"mutexguard"},{"name":"duration"}],"output":{"name":"result"}}],[11,"wait_timeout_with","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",519,{"inputs":[{"name":"condvar"},{"name":"mutexguard"},{"name":"duration"},{"name":"f"}],"output":{"name":"result"}}],[11,"notify_one","","Wakes up one blocked thread on this condvar.",519,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",519,null],[11,"drop","","",519,null],[11,"new","","Creates a new condition variable",520,{"inputs":[{"name":"staticcondvar"}],"output":{"name":"staticcondvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",520,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"}],"output":{"name":"result"}}],[11,"wait_timeout_ms","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",520,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"},{"name":"u32"}],"output":{"name":"result"}}],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",520,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"},{"name":"duration"}],"output":{"name":"result"}}],[11,"wait_timeout_with","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",520,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"},{"name":"duration"},{"name":"f"}],"output":{"name":"result"}}],[11,"notify_one","","Wakes up one blocked thread on this condvar.",520,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",520,null],[11,"destroy","","Deallocates all resources associated with this static condvar.",520,null],[11,"drop","std::sync::mutex","",328,null],[11,"fmt","","",328,{"inputs":[{"name":"mutex"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new mutex in an unlocked state ready for use.",521,{"inputs":[{"name":"staticmutex"}],"output":{"name":"staticmutex"}}],[11,"lock","","Acquires this lock, see `Mutex::lock`",521,{"inputs":[{"name":"staticmutex"}],"output":{"name":"result"}}],[11,"try_lock","","Attempts to grab this lock, see `Mutex::try_lock`",521,{"inputs":[{"name":"staticmutex"}],"output":{"name":"result"}}],[11,"destroy","","Deallocates resources associated with this static mutex.",521,null],[11,"deref","","",522,{"inputs":[{"name":"mutexguard"}],"output":{"name":"t"}}],[11,"deref_mut","","",522,{"inputs":[{"name":"mutexguard"}],"output":{"name":"t"}}],[11,"drop","","",522,null],[11,"new","std::sync::once","Creates a new `Once` value.",523,{"inputs":[{"name":"once"}],"output":{"name":"once"}}],[11,"call_once","","Performs an initialization routine once and only once. The given closure\nwill be executed if this is the first time `call_once` has been called,\nand otherwise the routine will *not* be invoked.",523,null],[11,"new","std::sync::rwlock","Creates a new instance of an `RwLock&lt;T&gt;` which is unlocked.",524,{"inputs":[{"name":"rwlock"},{"name":"t"}],"output":{"name":"rwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",524,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"try_read","","Attempts to acquire this rwlock with shared read access.",524,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",524,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",524,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"is_poisoned","","Determines whether the lock is poisoned.",524,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"into_inner","","Consumes this `RwLock`, returning the underlying data.",524,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"get_mut","","Returns a mutable reference to the underlying data.",524,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"drop","","",524,null],[11,"fmt","","",524,{"inputs":[{"name":"rwlock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new rwlock.",525,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"staticrwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",525,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"try_read","","Attempts to acquire this lock with shared read access.",525,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",525,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",525,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"destroy","","Deallocates all resources associated with this static lock.",525,null],[11,"map","","Transform this guard to hold a sub-borrow of the original data.",526,{"inputs":[{"name":"rwlockreadguard"},{"name":"rwlockreadguard"},{"name":"f"}],"output":{"name":"rwlockreadguard"}}],[11,"map","","Transform this guard to hold a sub-borrow of the original data.",527,{"inputs":[{"name":"rwlockwriteguard"},{"name":"rwlockwriteguard"},{"name":"f"}],"output":{"name":"rwlockwriteguard"}}],[11,"deref","","",526,{"inputs":[{"name":"rwlockreadguard"}],"output":{"name":"t"}}],[11,"deref","","",527,{"inputs":[{"name":"rwlockwriteguard"}],"output":{"name":"t"}}],[11,"deref_mut","","",527,{"inputs":[{"name":"rwlockwriteguard"}],"output":{"name":"t"}}],[11,"drop","","",526,null],[11,"drop","","",527,null],[11,"new","std::sync::semaphore","Creates a new semaphore with the initial count specified.",528,{"inputs":[{"name":"semaphore"},{"name":"isize"}],"output":{"name":"semaphore"}}],[11,"acquire","","Acquires a resource of this semaphore, blocking the current thread until\nit can do so.",528,null],[11,"release","","Release a resource from this semaphore.",528,null],[11,"access","","Acquires a resource of this semaphore, returning an RAII guard to\nrelease the semaphore when dropped.",528,{"inputs":[{"name":"semaphore"}],"output":{"name":"semaphoreguard"}}],[11,"drop","","",529,null],[11,"default","core::sync::atomic","",530,{"inputs":[{"name":"atomicbool"}],"output":{"name":"atomicbool"}}],[11,"default","","",531,{"inputs":[{"name":"atomicisize"}],"output":{"name":"atomicisize"}}],[11,"default","","",532,{"inputs":[{"name":"atomicusize"}],"output":{"name":"atomicusize"}}],[11,"default","","",533,{"inputs":[{"name":"atomicptr"}],"output":{"name":"atomicptr"}}],[11,"clone","","",534,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"new","","Creates a new `AtomicBool`.",530,{"inputs":[{"name":"atomicbool"},{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",530,{"inputs":[{"name":"atomicbool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"store","","Stores a value into the bool.",530,null],[11,"swap","","Stores a value into the bool, returning the old value.",530,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",530,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_and","","Logical &quot;and&quot; with a boolean value.",530,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_nand","","Logical &quot;nand&quot; with a boolean value.",530,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_or","","Logical &quot;or&quot; with a boolean value.",530,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_xor","","Logical &quot;xor&quot; with a boolean value.",530,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `AtomicIsize`.",531,{"inputs":[{"name":"atomicisize"},{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the isize.",531,{"inputs":[{"name":"atomicisize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"store","","Stores a value into the isize.",531,null],[11,"swap","","Stores a value into the isize, returning the old value.",531,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"compare_and_swap","","Stores a value into the `isize` if the current value is the same as the `current` value.",531,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_add","","Add an isize to the current value, returning the previous value.",531,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_sub","","Subtract an isize from the current value, returning the previous value.",531,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_and","","Bitwise and with the current isize, returning the previous value.",531,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_or","","Bitwise or with the current isize, returning the previous value.",531,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_xor","","Bitwise xor with the current isize, returning the previous value.",531,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"new","","Creates a new `AtomicUsize`.",532,{"inputs":[{"name":"atomicusize"},{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the usize.",532,{"inputs":[{"name":"atomicusize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"store","","Stores a value into the usize.",532,null],[11,"swap","","Stores a value into the usize, returning the old value.",532,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_and_swap","","Stores a value into the `usize` if the current value is the same as the `current` value.",532,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_add","","Add to the current usize, returning the previous value.",532,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_sub","","Subtract from the current usize, returning the previous value.",532,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_and","","Bitwise and with the current usize, returning the previous value.",532,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_or","","Bitwise or with the current usize, returning the previous value.",532,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_xor","","Bitwise xor with the current usize, returning the previous value.",532,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"new","","Creates a new `AtomicPtr`.",533,null],[11,"load","","Loads a value from the pointer.",533,null],[11,"store","","Stores a value into the pointer.",533,null],[11,"swap","","Stores a value into the pointer, returning the old value.",533,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",533,null],[11,"fmt","","",532,{"inputs":[{"name":"atomicusize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",531,{"inputs":[{"name":"atomicisize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",530,{"inputs":[{"name":"atomicbool"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",533,{"inputs":[{"name":"atomicptr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","std::time::duration","",535,null],[11,"fmt","","",535,{"inputs":[{"name":"duration"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",535,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",535,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"option"}}],[11,"lt","","",535,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"le","","",535,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"gt","","",535,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ge","","",535,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"eq","","",535,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ne","","",535,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"clone","","",535,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[11,"new","","Creates a new `Duration` from the specified number of seconds and\nadditional nanosecond precision.",535,{"inputs":[{"name":"duration"},{"name":"u64"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"span","","Runs a closure, returning the duration of time it took to run the\nclosure.",535,{"inputs":[{"name":"duration"},{"name":"f"}],"output":{"name":"duration"}}],[11,"from_secs","","Creates a new `Duration` from the specified number of seconds.",535,{"inputs":[{"name":"duration"},{"name":"u64"}],"output":{"name":"duration"}}],[11,"from_millis","","Creates a new `Duration` from the specified number of milliseconds.",535,{"inputs":[{"name":"duration"},{"name":"u64"}],"output":{"name":"duration"}}],[11,"as_secs","","Returns the number of whole seconds represented by this duration.",535,{"inputs":[{"name":"duration"}],"output":{"name":"u64"}}],[11,"subsec_nanos","","Returns the nanosecond precision represented by this duration.",535,{"inputs":[{"name":"duration"}],"output":{"name":"u32"}}],[11,"add","","",535,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"sub","","",535,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"mul","","",535,{"inputs":[{"name":"duration"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"div","","",535,{"inputs":[{"name":"duration"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"cmp","std::time","",536,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",536,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"option"}}],[11,"lt","","",536,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"le","","",536,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"gt","","",536,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"ge","","",536,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"eq","","",536,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"ne","","",536,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"clone","","",536,{"inputs":[{"name":"instant"}],"output":{"name":"instant"}}],[11,"cmp","","",537,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",537,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"option"}}],[11,"lt","","",537,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"le","","",537,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"gt","","",537,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"ge","","",537,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"eq","","",537,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"ne","","",537,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"clone","","",537,{"inputs":[{"name":"systemtime"}],"output":{"name":"systemtime"}}],[11,"fmt","","",538,{"inputs":[{"name":"systemtimeerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",538,{"inputs":[{"name":"systemtimeerror"}],"output":{"name":"systemtimeerror"}}],[11,"now","","Returns an instant corresponding to &quot;now&quot;.",536,{"inputs":[{"name":"instant"}],"output":{"name":"instant"}}],[11,"duration_from_earlier","","Returns the amount of time elapsed from another instant to this one.",536,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"duration"}}],[11,"elapsed","","Returns the amount of time elapsed since this instant was created.",536,{"inputs":[{"name":"instant"}],"output":{"name":"duration"}}],[11,"add","","",536,{"inputs":[{"name":"instant"},{"name":"duration"}],"output":{"name":"instant"}}],[11,"sub","","",536,{"inputs":[{"name":"instant"},{"name":"duration"}],"output":{"name":"instant"}}],[11,"fmt","","",536,{"inputs":[{"name":"instant"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"now","","Returns the system time corresponding to &quot;now&quot;.",537,{"inputs":[{"name":"systemtime"}],"output":{"name":"systemtime"}}],[11,"duration_from_earlier","","Returns the amount of time elapsed from an earlier point in time.",537,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"result"}}],[11,"elapsed","","Returns the amount of time elapsed since this system time was created.",537,{"inputs":[{"name":"systemtime"}],"output":{"name":"result"}}],[11,"add","","",537,{"inputs":[{"name":"systemtime"},{"name":"duration"}],"output":{"name":"systemtime"}}],[11,"sub","","",537,{"inputs":[{"name":"systemtime"},{"name":"duration"}],"output":{"name":"systemtime"}}],[11,"fmt","","",537,{"inputs":[{"name":"systemtime"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"duration","","Returns the positive duration which represents how far forward the\nsecond system time was from the first.",538,{"inputs":[{"name":"systemtimeerror"}],"output":{"name":"duration"}}],[11,"description","","",538,{"inputs":[{"name":"systemtimeerror"}],"output":{"name":"str"}}],[11,"fmt","","",538,{"inputs":[{"name":"systemtimeerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","std::sys_common::condvar","Creates a new condition variable for use.",539,{"inputs":[{"name":"condvar"}],"output":{"name":"condvar"}}],[11,"notify_one","","Signals one waiter on this condition variable to wake up.",539,null],[11,"notify_all","","Awakens all current waiters on this condition variable.",539,null],[11,"wait","","Waits for a signal on the specified mutex.",539,null],[11,"wait_timeout","","Waits for a signal on the specified mutex with a timeout duration\nspecified by `dur` (a relative time into the future).",539,{"inputs":[{"name":"condvar"},{"name":"mutex"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"destroy","","Deallocates all resources associated with this condition variable.",539,null],[11,"clone","std::sys_common::dwarf::eh","",540,{"inputs":[{"name":"ehcontext"}],"output":{"name":"ehcontext"}}],[11,"new","std::sys_common::dwarf","",541,null],[11,"read","","",541,{"inputs":[{"name":"dwarfreader"}],"output":{"name":"t"}}],[11,"read_uleb128","","",541,{"inputs":[{"name":"dwarfreader"}],"output":{"name":"u64"}}],[11,"read_sleb128","","",541,{"inputs":[{"name":"dwarfreader"}],"output":{"name":"i64"}}],[11,"clone","std::sys_common::libunwind","",542,{"inputs":[{"name":"_unwind_action"}],"output":{"name":"_unwind_action"}}],[11,"clone","","",543,{"inputs":[{"name":"_unwind_reason_code"}],"output":{"name":"_unwind_reason_code"}}],[11,"new","std::sys_common::mutex","Creates a new mutex for use.",544,{"inputs":[{"name":"mutex"}],"output":{"name":"mutex"}}],[11,"lock","","Locks the mutex blocking the current thread until it is available.",544,null],[11,"try_lock","","Attempts to lock the mutex without blocking, returning whether it was\nsuccessfully acquired or not.",544,{"inputs":[{"name":"mutex"}],"output":{"name":"bool"}}],[11,"unlock","","Unlocks the mutex.",544,null],[11,"destroy","","Deallocates all resources associated with this mutex.",544,null],[11,"next","std::sys_common::net","",545,{"inputs":[{"name":"lookuphost"}],"output":{"name":"option"}}],[11,"drop","","",545,null],[11,"connect","","",546,{"inputs":[{"name":"tcpstream"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"socket","","",546,{"inputs":[{"name":"tcpstream"}],"output":{"name":"socket"}}],[11,"into_socket","","",546,{"inputs":[{"name":"tcpstream"}],"output":{"name":"socket"}}],[11,"set_read_timeout","","",546,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","",546,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","",546,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"write_timeout","","",546,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"read","","",546,null],[11,"write","","",546,null],[11,"peer_addr","","",546,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"socket_addr","","",546,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"shutdown","","",546,{"inputs":[{"name":"tcpstream"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"duplicate","","",546,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"fmt","","",546,{"inputs":[{"name":"tcpstream"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","",547,{"inputs":[{"name":"tcplistener"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"socket","","",547,{"inputs":[{"name":"tcplistener"}],"output":{"name":"socket"}}],[11,"into_socket","","",547,{"inputs":[{"name":"tcplistener"}],"output":{"name":"socket"}}],[11,"socket_addr","","",547,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"accept","","",547,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"duplicate","","",547,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"fmt","","",547,{"inputs":[{"name":"tcplistener"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","",548,{"inputs":[{"name":"udpsocket"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"socket","","",548,{"inputs":[{"name":"udpsocket"}],"output":{"name":"socket"}}],[11,"into_socket","","",548,{"inputs":[{"name":"udpsocket"}],"output":{"name":"socket"}}],[11,"socket_addr","","",548,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"recv_from","","",548,null],[11,"send_to","","",548,null],[11,"duplicate","","",548,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"set_read_timeout","","",548,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","",548,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","",548,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"write_timeout","","",548,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"fmt","","",548,{"inputs":[{"name":"udpsocket"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","std::sys_common::poison","",549,{"inputs":[{"name":"flag"}],"output":{"name":"flag"}}],[11,"borrow","","",549,{"inputs":[{"name":"flag"}],"output":{"name":"result"}}],[11,"done","","",549,null],[11,"get","","",549,{"inputs":[{"name":"flag"}],"output":{"name":"bool"}}],[11,"fmt","","",550,{"inputs":[{"name":"poisonerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",550,{"inputs":[{"name":"poisonerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",550,{"inputs":[{"name":"poisonerror"}],"output":{"name":"str"}}],[11,"new","","Creates a `PoisonError`.",550,{"inputs":[{"name":"poisonerror"},{"name":"t"}],"output":{"name":"poisonerror"}}],[11,"into_inner","","Consumes this error indicating that a lock is poisoned, returning the\nunderlying guard to allow access regardless.",550,{"inputs":[{"name":"poisonerror"}],"output":{"name":"t"}}],[11,"get_ref","","Reaches into this error indicating that a lock is poisoned, returning a\nreference to the underlying guard to allow access regardless.",550,{"inputs":[{"name":"poisonerror"}],"output":{"name":"t"}}],[11,"get_mut","","Reaches into this error indicating that a lock is poisoned, returning a\nmutable reference to the underlying guard to allow access regardless.",550,{"inputs":[{"name":"poisonerror"}],"output":{"name":"t"}}],[11,"from","","",551,{"inputs":[{"name":"trylockerror"},{"name":"poisonerror"}],"output":{"name":"trylockerror"}}],[11,"fmt","","",551,{"inputs":[{"name":"trylockerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",551,{"inputs":[{"name":"trylockerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",551,{"inputs":[{"name":"trylockerror"}],"output":{"name":"str"}}],[11,"cause","","",551,{"inputs":[{"name":"trylockerror"}],"output":{"name":"option"}}],[11,"new","std::sys_common::remutex","Creates a new reentrant mutex in an unlocked state.",552,{"inputs":[{"name":"reentrantmutex"},{"name":"t"}],"output":{"name":"reentrantmutex"}}],[11,"lock","","Acquires a mutex, blocking the current thread until it is able to do so.",552,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"result"}}],[11,"try_lock","","Attempts to acquire this lock.",552,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"result"}}],[11,"drop","","",552,null],[11,"fmt","","",552,{"inputs":[{"name":"reentrantmutex"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",553,{"inputs":[{"name":"reentrantmutexguard"}],"output":{"name":"t"}}],[11,"drop","","",553,null],[11,"new","std::sys_common::rwlock","Creates a new reader-writer lock for use.",554,{"inputs":[{"name":"rwlock"}],"output":{"name":"rwlock"}}],[11,"read","","Acquires shared access to the underlying lock, blocking the current\nthread to do so.",554,null],[11,"try_read","","Attempts to acquire shared access to this lock, returning whether it\nsucceeded or not.",554,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"write","","Acquires write access to the underlying lock, blocking the current thread\nto do so.",554,null],[11,"try_write","","Attempts to acquire exclusive access to this lock, returning whether it\nsucceeded or not.",554,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"read_unlock","","Unlocks previously acquired shared access to this lock.",554,null],[11,"write_unlock","","Unlocks previously acquired exclusive access to this lock.",554,null],[11,"destroy","","Destroys OS-related resources with this RWLock.",554,null],[11,"new","std::sys_common::thread_local","",555,{"inputs":[{"name":"statickey"},{"name":"option"}],"output":{"name":"statickey"}}],[11,"get","","Gets the value associated with this TLS key",555,null],[11,"set","","Sets this TLS key to a new value.",555,null],[11,"destroy","","Deallocates this OS TLS key.",555,null],[11,"new","","Creates a new managed OS TLS key.",556,{"inputs":[{"name":"key"},{"name":"option"}],"output":{"name":"key"}}],[11,"get","","See StaticKey::get",556,null],[11,"set","","See StaticKey::set",556,null],[11,"drop","","",556,null],[11,"clone","std::sys_common::wtf8","",557,{"inputs":[{"name":"codepoint"}],"output":{"name":"codepoint"}}],[11,"partial_cmp","","",557,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"option"}}],[11,"lt","","",557,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"le","","",557,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"gt","","",557,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"ge","","",557,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"cmp","","",557,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"ordering"}}],[11,"eq","","",557,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"ne","","",557,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"fmt","","",557,{"inputs":[{"name":"codepoint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_u32_unchecked","","Unsafely creates a new `CodePoint` without checking the value.",557,{"inputs":[{"name":"codepoint"},{"name":"u32"}],"output":{"name":"codepoint"}}],[11,"from_u32","","Creates a new `CodePoint` if the value is a valid code point.",557,{"inputs":[{"name":"codepoint"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_char","","Creates a new `CodePoint` from a `char`.",557,{"inputs":[{"name":"codepoint"},{"name":"char"}],"output":{"name":"codepoint"}}],[11,"to_u32","","Returns the numeric value of the code point.",557,{"inputs":[{"name":"codepoint"}],"output":{"name":"u32"}}],[11,"to_char","","Optionally returns a Unicode scalar value for the code point.",557,{"inputs":[{"name":"codepoint"}],"output":{"name":"option"}}],[11,"to_char_lossy","","Returns a Unicode scalar value for the code point.",557,{"inputs":[{"name":"codepoint"}],"output":{"name":"char"}}],[11,"clone","","",558,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8buf"}}],[11,"partial_cmp","","",558,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"option"}}],[11,"lt","","",558,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"le","","",558,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"gt","","",558,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"ge","","",558,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"cmp","","",558,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"ordering"}}],[11,"eq","","",558,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"ne","","",558,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"from_str","","Creates a WTF-8 slice from a UTF-8 `&amp;str` slice.",559,{"inputs":[{"name":"wtf8"},{"name":"str"}],"output":{"name":"wtf8"}}],[11,"len","","Returns the length, in WTF-8 bytes.",559,{"inputs":[{"name":"wtf8"}],"output":{"name":"usize"}}],[11,"is_empty","","",559,{"inputs":[{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"ascii_byte_at","","Returns the code point at `position` if it is in the ASCII range,\nor `b&#39;\\xFF&#39; otherwise.",559,{"inputs":[{"name":"wtf8"},{"name":"usize"}],"output":{"name":"u8"}}],[11,"code_points","","Returns an iterator for the string’s code points.",559,{"inputs":[{"name":"wtf8"}],"output":{"name":"wtf8codepoints"}}],[11,"as_str","","Tries to convert the string to UTF-8 and return a `&amp;str` slice.",559,{"inputs":[{"name":"wtf8"}],"output":{"name":"option"}}],[11,"to_string_lossy","","Lossily converts the string to UTF-8.\nReturns a UTF-8 `&amp;str` slice if the contents are well-formed in UTF-8.",559,{"inputs":[{"name":"wtf8"}],"output":{"name":"cow"}}],[11,"encode_wide","","Converts the WTF-8 string to potentially ill-formed UTF-16\nand return an iterator of 16-bit code units.",559,{"inputs":[{"name":"wtf8"}],"output":{"name":"encodewide"}}],[11,"deref","","",558,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8"}}],[11,"fmt","","",558,{"inputs":[{"name":"wtf8buf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new, empty WTF-8 string.",558,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8buf"}}],[11,"with_capacity","","Creates a new, empty WTF-8 string with pre-allocated capacity for `n` bytes.",558,{"inputs":[{"name":"wtf8buf"},{"name":"usize"}],"output":{"name":"wtf8buf"}}],[11,"from_string","","Creates a WTF-8 string from a UTF-8 `String`.",558,{"inputs":[{"name":"wtf8buf"},{"name":"string"}],"output":{"name":"wtf8buf"}}],[11,"from_str","","Creates a WTF-8 string from a UTF-8 `&amp;str` slice.",558,{"inputs":[{"name":"wtf8buf"},{"name":"str"}],"output":{"name":"wtf8buf"}}],[11,"clear","","",558,null],[11,"from_wide","","Creates a WTF-8 string from a potentially ill-formed UTF-16 slice of 16-bit code units.",558,null],[11,"as_slice","","",558,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8"}}],[11,"reserve","","Reserves capacity for at least `additional` more bytes to be inserted\nin the given `Wtf8Buf`.\nThe collection may reserve more space to avoid frequent reallocations.",558,null],[11,"reserve_exact","","",558,null],[11,"capacity","","Returns the number of bytes that this string buffer can hold without reallocating.",558,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"usize"}}],[11,"push_str","","Append a UTF-8 slice at the end of the string.",558,null],[11,"push_wtf8","","Append a WTF-8 slice at the end of the string.",558,null],[11,"push_char","","Append a Unicode scalar value at the end of the string.",558,null],[11,"push","","Append a code point at the end of the string.",558,null],[11,"truncate","","Shortens a string to the specified length.",558,null],[11,"into_string","","Consumes the WTF-8 string and tries to convert it to UTF-8.",558,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"result"}}],[11,"into_string_lossy","","Consumes the WTF-8 string and converts it lossily to UTF-8.",558,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"string"}}],[11,"from_iter","","",558,{"inputs":[{"name":"wtf8buf"},{"name":"t"}],"output":{"name":"wtf8buf"}}],[11,"extend","","",558,null],[11,"partial_cmp","","",559,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"option"}}],[11,"lt","","",559,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"le","","",559,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"gt","","",559,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"ge","","",559,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"eq","","",559,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"ne","","",559,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"cmp","","",559,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"ordering"}}],[11,"fmt","","",559,{"inputs":[{"name":"wtf8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"index","","",559,{"inputs":[{"name":"wtf8"},{"name":"range"}],"output":{"name":"wtf8"}}],[11,"index","","",559,{"inputs":[{"name":"wtf8"},{"name":"rangefrom"}],"output":{"name":"wtf8"}}],[11,"index","","",559,{"inputs":[{"name":"wtf8"},{"name":"rangeto"}],"output":{"name":"wtf8"}}],[11,"index","","",559,{"inputs":[{"name":"wtf8"},{"name":"rangefull"}],"output":{"name":"wtf8"}}],[11,"clone","","",560,{"inputs":[{"name":"wtf8codepoints"}],"output":{"name":"wtf8codepoints"}}],[11,"next","","",560,{"inputs":[{"name":"wtf8codepoints"}],"output":{"name":"option"}}],[11,"size_hint","","",560,null],[11,"clone","","",561,{"inputs":[{"name":"encodewide"}],"output":{"name":"encodewide"}}],[11,"next","","",561,{"inputs":[{"name":"encodewide"}],"output":{"name":"option"}}],[11,"size_hint","","",561,null],[11,"hash","","",557,null],[11,"hash","","",558,null],[11,"hash","","",559,null],[11,"is_ascii","","",559,{"inputs":[{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"to_ascii_uppercase","","",559,{"inputs":[{"name":"wtf8"}],"output":{"name":"wtf8buf"}}],[11,"to_ascii_lowercase","","",559,{"inputs":[{"name":"wtf8"}],"output":{"name":"wtf8buf"}}],[11,"eq_ignore_ascii_case","","",559,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"make_ascii_uppercase","","",559,null],[11,"make_ascii_lowercase","","",559,null],[11,"new","std::sys::weak","",562,{"inputs":[{"name":"weak"},{"name":"str"}],"output":{"name":"weak"}}],[11,"get","","",562,{"inputs":[{"name":"weak"}],"output":{"name":"option"}}],[11,"new","std::sys::condvar","",563,{"inputs":[{"name":"condvar"}],"output":{"name":"condvar"}}],[11,"notify_one","","",563,null],[11,"notify_all","","",563,null],[11,"wait","","",563,null],[11,"wait_timeout","","",563,{"inputs":[{"name":"condvar"},{"name":"mutex"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"destroy","","",563,null],[11,"new","std::sys::fd","",564,{"inputs":[{"name":"filedesc"},{"name":"i32"}],"output":{"name":"filedesc"}}],[11,"raw","","",564,{"inputs":[{"name":"filedesc"}],"output":{"name":"i32"}}],[11,"into_raw","","Extracts the actual filedescriptor without closing it.",564,{"inputs":[{"name":"filedesc"}],"output":{"name":"i32"}}],[11,"read","","",564,null],[11,"write","","",564,null],[11,"set_cloexec","","",564,null],[11,"duplicate","","",564,{"inputs":[{"name":"filedesc"}],"output":{"name":"result"}}],[11,"drop","","",564,null],[11,"clone","std::sys::fs","",565,{"inputs":[{"name":"fileattr"}],"output":{"name":"fileattr"}}],[11,"clone","","",566,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"fmt","","",567,{"inputs":[{"name":"filepermissions"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",567,{"inputs":[{"name":"filepermissions"},{"name":"filepermissions"}],"output":{"name":"bool"}}],[11,"ne","","",567,{"inputs":[{"name":"filepermissions"},{"name":"filepermissions"}],"output":{"name":"bool"}}],[11,"clone","","",567,{"inputs":[{"name":"filepermissions"}],"output":{"name":"filepermissions"}}],[11,"hash","","",568,null],[11,"eq","","",568,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"ne","","",568,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"clone","","",568,{"inputs":[{"name":"filetype"}],"output":{"name":"filetype"}}],[11,"size","","",565,{"inputs":[{"name":"fileattr"}],"output":{"name":"u64"}}],[11,"perm","","",565,{"inputs":[{"name":"fileattr"}],"output":{"name":"filepermissions"}}],[11,"file_type","","",565,{"inputs":[{"name":"fileattr"}],"output":{"name":"filetype"}}],[11,"modified","","",565,{"inputs":[{"name":"fileattr"}],"output":{"name":"result"}}],[11,"accessed","","",565,{"inputs":[{"name":"fileattr"}],"output":{"name":"result"}}],[11,"created","","",565,{"inputs":[{"name":"fileattr"}],"output":{"name":"result"}}],[11,"readonly","","",567,{"inputs":[{"name":"filepermissions"}],"output":{"name":"bool"}}],[11,"set_readonly","","",567,null],[11,"mode","","",567,{"inputs":[{"name":"filepermissions"}],"output":{"name":"u32"}}],[11,"is_dir","","",568,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_file","","",568,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_symlink","","",568,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is","","",568,{"inputs":[{"name":"filetype"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"next","","",569,{"inputs":[{"name":"readdir"}],"output":{"name":"option"}}],[11,"drop","","",570,null],[11,"path","","",571,{"inputs":[{"name":"direntry"}],"output":{"name":"pathbuf"}}],[11,"file_name","","",571,{"inputs":[{"name":"direntry"}],"output":{"name":"osstring"}}],[11,"metadata","","",571,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"file_type","","",571,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"ino","","",571,{"inputs":[{"name":"direntry"}],"output":{"name":"u64"}}],[11,"new","","",566,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"read","","",566,null],[11,"write","","",566,null],[11,"append","","",566,null],[11,"truncate","","",566,null],[11,"create","","",566,null],[11,"create_new","","",566,null],[11,"custom_flags","","",566,null],[11,"mode","","",566,null],[11,"open","","",572,{"inputs":[{"name":"file"},{"name":"path"},{"name":"openoptions"}],"output":{"name":"result"}}],[11,"open_c","","",572,{"inputs":[{"name":"file"},{"name":"cstr"},{"name":"openoptions"}],"output":{"name":"result"}}],[11,"file_attr","","",572,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"fsync","","",572,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"datasync","","",572,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"truncate","","",572,{"inputs":[{"name":"file"},{"name":"u64"}],"output":{"name":"result"}}],[11,"read","","",572,null],[11,"write","","",572,null],[11,"flush","","",572,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"seek","","",572,{"inputs":[{"name":"file"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"duplicate","","",572,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"fd","","",572,{"inputs":[{"name":"file"}],"output":{"name":"filedesc"}}],[11,"into_fd","","",572,{"inputs":[{"name":"file"}],"output":{"name":"filedesc"}}],[11,"new","","",573,{"inputs":[{"name":"dirbuilder"}],"output":{"name":"dirbuilder"}}],[11,"mkdir","","",573,{"inputs":[{"name":"dirbuilder"},{"name":"path"}],"output":{"name":"result"}}],[11,"set_mode","","",573,null],[11,"fmt","","",572,{"inputs":[{"name":"file"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","std::sys::mutex","",574,{"inputs":[{"name":"mutex"}],"output":{"name":"mutex"}}],[11,"lock","","",574,null],[11,"unlock","","",574,null],[11,"try_lock","","",574,{"inputs":[{"name":"mutex"}],"output":{"name":"bool"}}],[11,"destroy","","",574,null],[11,"uninitialized","","",575,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"reentrantmutex"}}],[11,"init","","",575,null],[11,"lock","","",575,null],[11,"try_lock","","",575,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"bool"}}],[11,"unlock","","",575,null],[11,"destroy","","",575,null],[11,"new","std::sys::net","",576,{"inputs":[{"name":"socket"},{"name":"socketaddr"},{"name":"i32"}],"output":{"name":"result"}}],[11,"accept","","",576,null],[11,"duplicate","","",576,{"inputs":[{"name":"socket"}],"output":{"name":"result"}}],[11,"read","","",576,null],[11,"set_timeout","","",576,{"inputs":[{"name":"socket"},{"name":"option"},{"name":"i32"}],"output":{"name":"result"}}],[11,"timeout","","",576,{"inputs":[{"name":"socket"},{"name":"i32"}],"output":{"name":"result"}}],[11,"shutdown","","",576,{"inputs":[{"name":"socket"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"clone","libc::unix","",577,{"inputs":[{"name":"utimbuf"}],"output":{"name":"utimbuf"}}],[11,"clone","","",578,{"inputs":[{"name":"timeval"}],"output":{"name":"timeval"}}],[11,"clone","","",579,{"inputs":[{"name":"timespec"}],"output":{"name":"timespec"}}],[11,"clone","","",580,{"inputs":[{"name":"rlimit"}],"output":{"name":"rlimit"}}],[11,"clone","","",581,{"inputs":[{"name":"rusage"}],"output":{"name":"rusage"}}],[11,"clone","","",582,{"inputs":[{"name":"in_addr"}],"output":{"name":"in_addr"}}],[11,"clone","","",583,{"inputs":[{"name":"in6_addr"}],"output":{"name":"in6_addr"}}],[11,"clone","","",584,{"inputs":[{"name":"ip_mreq"}],"output":{"name":"ip_mreq"}}],[11,"clone","","",585,{"inputs":[{"name":"ipv6_mreq"}],"output":{"name":"ipv6_mreq"}}],[11,"clone","","",586,{"inputs":[{"name":"hostent"}],"output":{"name":"hostent"}}],[11,"clone","","",587,{"inputs":[{"name":"iovec"}],"output":{"name":"iovec"}}],[11,"clone","","",588,{"inputs":[{"name":"pollfd"}],"output":{"name":"pollfd"}}],[11,"clone","libc::unix::notbsd","",589,{"inputs":[{"name":"sockaddr"}],"output":{"name":"sockaddr"}}],[11,"clone","","",590,{"inputs":[{"name":"sockaddr_in"}],"output":{"name":"sockaddr_in"}}],[11,"clone","","",591,{"inputs":[{"name":"sockaddr_in6"}],"output":{"name":"sockaddr_in6"}}],[11,"clone","","",592,{"inputs":[{"name":"sockaddr_un"}],"output":{"name":"sockaddr_un"}}],[11,"clone","","",593,{"inputs":[{"name":"sockaddr_storage"}],"output":{"name":"sockaddr_storage"}}],[11,"clone","","",594,{"inputs":[{"name":"addrinfo"}],"output":{"name":"addrinfo"}}],[11,"clone","","",595,{"inputs":[{"name":"sockaddr_ll"}],"output":{"name":"sockaddr_ll"}}],[11,"clone","","",596,{"inputs":[{"name":"fd_set"}],"output":{"name":"fd_set"}}],[11,"clone","","",597,{"inputs":[{"name":"tm"}],"output":{"name":"tm"}}],[11,"clone","","",598,{"inputs":[{"name":"sched_param"}],"output":{"name":"sched_param"}}],[11,"clone","","",599,{"inputs":[{"name":"dl_info"}],"output":{"name":"dl_info"}}],[11,"clone","","",600,{"inputs":[{"name":"epoll_event"}],"output":{"name":"epoll_event"}}],[11,"clone","","",601,{"inputs":[{"name":"utsname"}],"output":{"name":"utsname"}}],[11,"clone","libc::unix::notbsd::linux","",602,{"inputs":[{"name":"dirent"}],"output":{"name":"dirent"}}],[11,"clone","","",603,{"inputs":[{"name":"dirent64"}],"output":{"name":"dirent64"}}],[11,"clone","","",604,{"inputs":[{"name":"rlimit64"}],"output":{"name":"rlimit64"}}],[11,"clone","","",605,{"inputs":[{"name":"glob_t"}],"output":{"name":"glob_t"}}],[11,"clone","","",606,{"inputs":[{"name":"ifaddrs"}],"output":{"name":"ifaddrs"}}],[11,"clone","","",607,{"inputs":[{"name":"pthread_mutex_t"}],"output":{"name":"pthread_mutex_t"}}],[11,"clone","","",608,{"inputs":[{"name":"pthread_rwlock_t"}],"output":{"name":"pthread_rwlock_t"}}],[11,"clone","","",609,{"inputs":[{"name":"pthread_mutexattr_t"}],"output":{"name":"pthread_mutexattr_t"}}],[11,"clone","","",610,{"inputs":[{"name":"pthread_cond_t"}],"output":{"name":"pthread_cond_t"}}],[11,"clone","","",611,{"inputs":[{"name":"passwd"}],"output":{"name":"passwd"}}],[11,"clone","","",612,{"inputs":[{"name":"statvfs"}],"output":{"name":"statvfs"}}],[11,"clone","","",613,{"inputs":[{"name":"sockaddr_nl"}],"output":{"name":"sockaddr_nl"}}],[11,"clone","","",614,{"inputs":[{"name":"dqblk"}],"output":{"name":"dqblk"}}],[11,"clone","","",615,{"inputs":[{"name":"signalfd_siginfo"}],"output":{"name":"signalfd_siginfo"}}],[11,"clone","","",616,{"inputs":[{"name":"fsid_t"}],"output":{"name":"fsid_t"}}],[11,"clone","","",617,{"inputs":[{"name":"mq_attr"}],"output":{"name":"mq_attr"}}],[11,"clone","","",618,{"inputs":[{"name":"cpu_set_t"}],"output":{"name":"cpu_set_t"}}],[11,"clone","libc::unix::notbsd::linux::other","",619,{"inputs":[{"name":"sigaction"}],"output":{"name":"sigaction"}}],[11,"clone","","",620,{"inputs":[{"name":"stack_t"}],"output":{"name":"stack_t"}}],[11,"clone","","",621,{"inputs":[{"name":"siginfo_t"}],"output":{"name":"siginfo_t"}}],[11,"clone","","",622,{"inputs":[{"name":"glob64_t"}],"output":{"name":"glob64_t"}}],[11,"clone","","",623,{"inputs":[{"name":"ucred"}],"output":{"name":"ucred"}}],[11,"clone","","",624,{"inputs":[{"name":"statfs"}],"output":{"name":"statfs"}}],[11,"clone","","",625,{"inputs":[{"name":"msghdr"}],"output":{"name":"msghdr"}}],[11,"clone","","",626,{"inputs":[{"name":"termios"}],"output":{"name":"termios"}}],[11,"clone","","",627,{"inputs":[{"name":"flock"}],"output":{"name":"flock"}}],[11,"clone","libc::unix::notbsd::linux::other::b64","",628,{"inputs":[{"name":"sigset_t"}],"output":{"name":"sigset_t"}}],[11,"clone","libc::unix::notbsd::linux::other::b64::x86_64","",629,{"inputs":[{"name":"stat"}],"output":{"name":"stat"}}],[11,"clone","","",630,{"inputs":[{"name":"stat64"}],"output":{"name":"stat64"}}],[11,"clone","","",631,{"inputs":[{"name":"pthread_attr_t"}],"output":{"name":"pthread_attr_t"}}],[11,"clone","libc::unix::notbsd::linux::other","",632,{"inputs":[{"name":"ipc_perm"}],"output":{"name":"ipc_perm"}}],[11,"clone","","",633,{"inputs":[{"name":"shmid_ds"}],"output":{"name":"shmid_ds"}}],[11,"next","std::sys::os","",634,{"inputs":[{"name":"splitpaths"}],"output":{"name":"option"}}],[11,"size_hint","","",634,null],[11,"fmt","","",635,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",635,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",635,{"inputs":[{"name":"joinpathserror"}],"output":{"name":"str"}}],[11,"next","","",636,{"inputs":[{"name":"args"}],"output":{"name":"option"}}],[11,"size_hint","","",636,null],[11,"len","","",636,{"inputs":[{"name":"args"}],"output":{"name":"usize"}}],[11,"next","","",637,{"inputs":[{"name":"env"}],"output":{"name":"option"}}],[11,"size_hint","","",637,null],[11,"hash","std::sys::os_str","",638,null],[11,"clone","","",638,{"inputs":[{"name":"buf"}],"output":{"name":"buf"}}],[11,"fmt","","",639,{"inputs":[{"name":"slice"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",638,{"inputs":[{"name":"buf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_string","","",638,{"inputs":[{"name":"buf"},{"name":"string"}],"output":{"name":"buf"}}],[11,"with_capacity","","",638,{"inputs":[{"name":"buf"},{"name":"usize"}],"output":{"name":"buf"}}],[11,"clear","","",638,null],[11,"capacity","","",638,{"inputs":[{"name":"buf"}],"output":{"name":"usize"}}],[11,"reserve","","",638,null],[11,"reserve_exact","","",638,null],[11,"as_slice","","",638,{"inputs":[{"name":"buf"}],"output":{"name":"slice"}}],[11,"into_string","","",638,{"inputs":[{"name":"buf"}],"output":{"name":"result"}}],[11,"push_slice","","",638,null],[11,"from_str","","",639,{"inputs":[{"name":"slice"},{"name":"str"}],"output":{"name":"slice"}}],[11,"to_str","","",639,{"inputs":[{"name":"slice"}],"output":{"name":"option"}}],[11,"to_string_lossy","","",639,{"inputs":[{"name":"slice"}],"output":{"name":"cow"}}],[11,"to_owned","","",639,{"inputs":[{"name":"slice"}],"output":{"name":"buf"}}],[11,"from_fd","std::sys::pipe","",640,{"inputs":[{"name":"anonpipe"},{"name":"i32"}],"output":{"name":"anonpipe"}}],[11,"read","","",640,null],[11,"write","","",640,null],[11,"fd","","",640,{"inputs":[{"name":"anonpipe"}],"output":{"name":"filedesc"}}],[11,"into_fd","","",640,{"inputs":[{"name":"anonpipe"}],"output":{"name":"filedesc"}}],[11,"new","std::sys::process","",641,{"inputs":[{"name":"command"},{"name":"osstr"}],"output":{"name":"command"}}],[11,"arg","","",641,null],[11,"env","","",641,null],[11,"env_remove","","",641,null],[11,"env_clear","","",641,null],[11,"cwd","","",641,null],[11,"uid","","",641,null],[11,"gid","","",641,null],[11,"session_leader","","",641,null],[11,"before_exec","","",641,null],[11,"stdin","","",641,null],[11,"stdout","","",641,null],[11,"stderr","","",641,null],[11,"spawn","","",641,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"result"}}],[11,"exec","","",641,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"error"}}],[11,"fmt","","",641,{"inputs":[{"name":"command"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",642,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",642,{"inputs":[{"name":"exitstatus"}],"output":{"name":"exitstatus"}}],[11,"eq","","",642,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"ne","","",642,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"success","","",642,{"inputs":[{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"code","","",642,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"signal","","",642,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"fmt","","",642,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"id","","",643,{"inputs":[{"name":"process"}],"output":{"name":"u32"}}],[11,"kill","","",643,{"inputs":[{"name":"process"}],"output":{"name":"result"}}],[11,"wait","","",643,{"inputs":[{"name":"process"}],"output":{"name":"result"}}],[11,"new","std::sys::rand::imp","Create a new `OsRng`.",644,{"inputs":[{"name":"osrng"}],"output":{"name":"result"}}],[11,"next_u32","","",644,{"inputs":[{"name":"osrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",644,{"inputs":[{"name":"osrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",644,null],[11,"new","std::sys::rwlock","",645,{"inputs":[{"name":"rwlock"}],"output":{"name":"rwlock"}}],[11,"read","","",645,null],[11,"try_read","","",645,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"write","","",645,null],[11,"try_write","","",645,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"read_unlock","","",645,null],[11,"write_unlock","","",645,null],[11,"destroy","","",645,null],[11,"new","std::sys::stack_overflow","",646,{"inputs":[{"name":"handler"}],"output":{"name":"handler"}}],[11,"drop","","",646,null],[11,"new","std::sys::thread","",647,{"inputs":[{"name":"thread"},{"name":"usize"},{"name":"box"}],"output":{"name":"result"}}],[11,"yield_now","","",647,null],[11,"set_name","","",647,null],[11,"sleep","","",647,null],[11,"join","","",647,null],[11,"id","","",647,{"inputs":[{"name":"thread"}],"output":{"name":"u64"}}],[11,"into_id","","",647,{"inputs":[{"name":"thread"}],"output":{"name":"u64"}}],[11,"drop","","",647,null],[11,"clone","std::sys::time::inner","",648,{"inputs":[{"name":"timespec"}],"output":{"name":"timespec"}}],[11,"cmp","","",649,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",649,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"option"}}],[11,"lt","","",649,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"le","","",649,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"gt","","",649,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"ge","","",649,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"eq","","",649,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"ne","","",649,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"clone","","",649,{"inputs":[{"name":"instant"}],"output":{"name":"instant"}}],[11,"cmp","","",650,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",650,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"option"}}],[11,"lt","","",650,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"le","","",650,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"gt","","",650,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"ge","","",650,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"eq","","",650,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"ne","","",650,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"clone","","",650,{"inputs":[{"name":"systemtime"}],"output":{"name":"systemtime"}}],[11,"now","","",649,{"inputs":[{"name":"instant"}],"output":{"name":"instant"}}],[11,"sub_instant","","",649,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"duration"}}],[11,"add_duration","","",649,{"inputs":[{"name":"instant"},{"name":"duration"}],"output":{"name":"instant"}}],[11,"sub_duration","","",649,{"inputs":[{"name":"instant"},{"name":"duration"}],"output":{"name":"instant"}}],[11,"fmt","","",649,{"inputs":[{"name":"instant"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"now","","",650,{"inputs":[{"name":"systemtime"}],"output":{"name":"systemtime"}}],[11,"sub_time","","",650,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"result"}}],[11,"add_duration","","",650,{"inputs":[{"name":"systemtime"},{"name":"duration"}],"output":{"name":"systemtime"}}],[11,"sub_duration","","",650,{"inputs":[{"name":"systemtime"},{"name":"duration"}],"output":{"name":"systemtime"}}],[11,"from","","",650,{"inputs":[{"name":"systemtime"},{"name":"timespec"}],"output":{"name":"systemtime"}}],[11,"fmt","","",650,{"inputs":[{"name":"systemtime"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"now","","",648,{"inputs":[{"name":"timespec"},{"name":"i32"}],"output":{"name":"timespec"}}],[11,"eq","","",648,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",648,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"option"}}],[11,"cmp","","",648,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"ordering"}}],[11,"new","std::sys::stdio","",651,{"inputs":[{"name":"stdin"}],"output":{"name":"result"}}],[11,"read","","",651,null],[11,"new","","",652,{"inputs":[{"name":"stdout"}],"output":{"name":"result"}}],[11,"write","","",652,null],[11,"new","","",653,{"inputs":[{"name":"stderr"}],"output":{"name":"result"}}],[11,"write","","",653,null],[11,"write","","",653,null],[11,"flush","","",653,{"inputs":[{"name":"stderr"}],"output":{"name":"result"}}],[11,"clone","std::panicking","",654,{"inputs":[{"name":"handler"}],"output":{"name":"handler"}}],[11,"payload","","Returns the payload associated with the panic.",655,{"inputs":[{"name":"panicinfo"}],"output":{"name":"any"}}],[11,"location","","Returns information about the location from which the panic originated,\nif available.",655,{"inputs":[{"name":"panicinfo"}],"output":{"name":"option"}}],[11,"file","","Returns the name of the source file from which the panic originated.",656,{"inputs":[{"name":"location"}],"output":{"name":"str"}}],[11,"line","","Returns the line number from which the panic originated.",656,{"inputs":[{"name":"location"}],"output":{"name":"u32"}}],[11,"new","std::rand::reader","Create a new `ReaderRng` from a `Read`.",657,{"inputs":[{"name":"readerrng"},{"name":"r"}],"output":{"name":"readerrng"}}],[11,"next_u32","","",657,{"inputs":[{"name":"readerrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",657,{"inputs":[{"name":"readerrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",657,null],[11,"clone","std::rand","",658,{"inputs":[{"name":"stdrng"}],"output":{"name":"stdrng"}}],[11,"new","","Create a randomly seeded instance of `StdRng`.",658,{"inputs":[{"name":"stdrng"}],"output":{"name":"result"}}],[11,"next_u32","","",658,{"inputs":[{"name":"stdrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",658,{"inputs":[{"name":"stdrng"}],"output":{"name":"u64"}}],[11,"reseed","","",658,null],[11,"from_seed","","",658,null],[11,"reseed","","",659,null],[11,"clone","","",660,{"inputs":[{"name":"threadrng"}],"output":{"name":"threadrng"}}],[11,"next_u32","","",660,{"inputs":[{"name":"threadrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",660,{"inputs":[{"name":"threadrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",660,null],[11,"new","","Create a new `OsRng`.",661,{"inputs":[{"name":"osrng"}],"output":{"name":"result"}}],[11,"next_u32","","",661,{"inputs":[{"name":"osrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",661,{"inputs":[{"name":"osrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",661,null],[11,"fmt","","",662,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",662,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is","","Returns true if the boxed type is the same as `T`",662,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",662,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",662,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",662,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",662,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",662,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"hash","core::any","",663,null],[11,"fmt","","",663,{"inputs":[{"name":"typeid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",663,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"ne","","",663,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"clone","","",663,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",663,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"new","core::cell","Creates a new `Cell` containing the given value.",664,{"inputs":[{"name":"cell"},{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",664,{"inputs":[{"name":"cell"}],"output":{"name":"t"}}],[11,"set","","Sets the contained value.",664,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",664,{"inputs":[{"name":"cell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",664,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"default","","",664,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"eq","","",664,{"inputs":[{"name":"cell"},{"name":"cell"}],"output":{"name":"bool"}}],[11,"fmt","","",665,{"inputs":[{"name":"borrowstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",665,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"ne","","",665,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"clone","","",665,{"inputs":[{"name":"borrowstate"}],"output":{"name":"borrowstate"}}],[11,"new","","Creates a new `RefCell` containing `value`.",666,{"inputs":[{"name":"refcell"},{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",666,{"inputs":[{"name":"refcell"}],"output":{"name":"t"}}],[11,"borrow_state","","Query the current state of this `RefCell`",666,{"inputs":[{"name":"refcell"}],"output":{"name":"borrowstate"}}],[11,"borrow","","Immutably borrows the wrapped value.",666,{"inputs":[{"name":"refcell"}],"output":{"name":"ref"}}],[11,"borrow_mut","","Mutably borrows the wrapped value.",666,{"inputs":[{"name":"refcell"}],"output":{"name":"refmut"}}],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",666,{"inputs":[{"name":"refcell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",666,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"default","","",666,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"eq","","",666,{"inputs":[{"name":"refcell"},{"name":"refcell"}],"output":{"name":"bool"}}],[11,"drop","","",667,null],[11,"clone","","",667,{"inputs":[{"name":"borrowref"}],"output":{"name":"borrowref"}}],[11,"deref","","",668,{"inputs":[{"name":"ref"}],"output":{"name":"t"}}],[11,"clone","","Copies a `Ref`.",668,{"inputs":[{"name":"ref"},{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",668,{"inputs":[{"name":"ref"},{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"filter_map","","Make a new `Ref` for an optional component of the borrowed data, e.g. an\nenum variant.",668,{"inputs":[{"name":"ref"},{"name":"ref"},{"name":"f"}],"output":{"name":"option"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",669,{"inputs":[{"name":"refmut"},{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"filter_map","","Make a new `RefMut` for an optional component of the borrowed data, e.g.\nan enum variant.",669,{"inputs":[{"name":"refmut"},{"name":"refmut"},{"name":"f"}],"output":{"name":"option"}}],[11,"drop","","",670,null],[11,"deref","","",669,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"deref_mut","","",669,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",671,{"inputs":[{"name":"unsafecell"},{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",671,{"inputs":[{"name":"unsafecell"}],"output":{"name":"t"}}],[11,"get","","Gets a mutable pointer to the wrapped value.",671,null],[11,"fmt","core::cmp","",672,{"inputs":[{"name":"ordering"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",672,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"ne","","",672,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"clone","","",672,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"reverse","","Reverse the `Ordering`.",672,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"cmp","","",672,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",672,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"option"}}],[11,"new","core::hash::sip","Creates a new `SipHasher` with the two initial keys set to 0.",673,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",673,{"inputs":[{"name":"siphasher"},{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",673,null],[11,"finish","","",673,{"inputs":[{"name":"siphasher"}],"output":{"name":"u64"}}],[11,"clone","","",673,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"default","","",673,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"build_hasher","core::hash","",674,{"inputs":[{"name":"buildhasherdefault"}],"output":{"name":"h"}}],[11,"clone","","",674,{"inputs":[{"name":"buildhasherdefault"}],"output":{"name":"buildhasherdefault"}}],[11,"default","","",674,{"inputs":[{"name":"buildhasherdefault"}],"output":{"name":"buildhasherdefault"}}],[11,"clone","core::iter","",675,{"inputs":[{"name":"rev"}],"output":{"name":"rev"}}],[11,"next","","",675,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"size_hint","","",675,null],[11,"next_back","","",675,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"clone","","",676,{"inputs":[{"name":"cloned"}],"output":{"name":"cloned"}}],[11,"next","","",676,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"size_hint","","",676,null],[11,"next_back","","",676,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"clone","","",677,{"inputs":[{"name":"cycle"}],"output":{"name":"cycle"}}],[11,"next","","",677,{"inputs":[{"name":"cycle"}],"output":{"name":"option"}}],[11,"size_hint","","",677,null],[11,"clone","","",678,{"inputs":[{"name":"chain"}],"output":{"name":"chain"}}],[11,"clone","","",679,{"inputs":[{"name":"chainstate"}],"output":{"name":"chainstate"}}],[11,"next","","",678,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"count","","",678,{"inputs":[{"name":"chain"}],"output":{"name":"usize"}}],[11,"nth","","",678,{"inputs":[{"name":"chain"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",678,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"size_hint","","",678,null],[11,"next_back","","",678,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"clone","","",680,{"inputs":[{"name":"zip"}],"output":{"name":"zip"}}],[11,"next","","",680,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",680,null],[11,"next_back","","",680,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"clone","","",681,{"inputs":[{"name":"map"}],"output":{"name":"map"}}],[11,"next","","",681,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"size_hint","","",681,null],[11,"next_back","","",681,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"clone","","",682,{"inputs":[{"name":"filter"}],"output":{"name":"filter"}}],[11,"next","","",682,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"size_hint","","",682,null],[11,"next_back","","",682,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"clone","","",683,{"inputs":[{"name":"filtermap"}],"output":{"name":"filtermap"}}],[11,"next","","",683,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"size_hint","","",683,null],[11,"next_back","","",683,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"clone","","",684,{"inputs":[{"name":"enumerate"}],"output":{"name":"enumerate"}}],[11,"next","","# Overflow Behavior",684,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"size_hint","","",684,null],[11,"nth","","",684,{"inputs":[{"name":"enumerate"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",684,{"inputs":[{"name":"enumerate"}],"output":{"name":"usize"}}],[11,"next_back","","",684,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"clone","","",685,{"inputs":[{"name":"peekable"}],"output":{"name":"peekable"}}],[11,"next","","",685,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"count","","",685,{"inputs":[{"name":"peekable"}],"output":{"name":"usize"}}],[11,"nth","","",685,{"inputs":[{"name":"peekable"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",685,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"size_hint","","",685,null],[11,"peek","","Returns a reference to the next() value without advancing the iterator.",685,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"is_empty","","Checks if the iterator has finished iterating.",685,{"inputs":[{"name":"peekable"}],"output":{"name":"bool"}}],[11,"clone","","",686,{"inputs":[{"name":"skipwhile"}],"output":{"name":"skipwhile"}}],[11,"next","","",686,{"inputs":[{"name":"skipwhile"}],"output":{"name":"option"}}],[11,"size_hint","","",686,null],[11,"clone","","",687,{"inputs":[{"name":"takewhile"}],"output":{"name":"takewhile"}}],[11,"next","","",687,{"inputs":[{"name":"takewhile"}],"output":{"name":"option"}}],[11,"size_hint","","",687,null],[11,"clone","","",688,{"inputs":[{"name":"skip"}],"output":{"name":"skip"}}],[11,"next","","",688,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"nth","","",688,{"inputs":[{"name":"skip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",688,{"inputs":[{"name":"skip"}],"output":{"name":"usize"}}],[11,"last","","",688,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"size_hint","","",688,null],[11,"clone","","",689,{"inputs":[{"name":"take"}],"output":{"name":"take"}}],[11,"next","","",689,{"inputs":[{"name":"take"}],"output":{"name":"option"}}],[11,"nth","","",689,{"inputs":[{"name":"take"},{"name":"usize"}],"output":{"name":"option"}}],[11,"size_hint","","",689,null],[11,"clone","","",690,{"inputs":[{"name":"scan"}],"output":{"name":"scan"}}],[11,"next","","",690,{"inputs":[{"name":"scan"}],"output":{"name":"option"}}],[11,"size_hint","","",690,null],[11,"clone","","",691,{"inputs":[{"name":"flatmap"}],"output":{"name":"flatmap"}}],[11,"next","","",691,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"size_hint","","",691,null],[11,"next_back","","",691,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"clone","","",692,{"inputs":[{"name":"fuse"}],"output":{"name":"fuse"}}],[11,"next","","",692,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"nth","","",692,{"inputs":[{"name":"fuse"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",692,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"count","","",692,{"inputs":[{"name":"fuse"}],"output":{"name":"usize"}}],[11,"size_hint","","",692,null],[11,"next_back","","",692,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"clone","","",693,{"inputs":[{"name":"inspect"}],"output":{"name":"inspect"}}],[11,"next","","",693,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"size_hint","","",693,null],[11,"next_back","","",693,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"clone","","",694,{"inputs":[{"name":"stepby"}],"output":{"name":"stepby"}}],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",695,{"inputs":[{"name":"rangefrom"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",696,{"inputs":[{"name":"range"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"next","core::iter","",694,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",694,null],[11,"clone","","",697,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"rangeinclusive"}}],[11,"next","","",697,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"size_hint","","",697,null],[11,"next_back","","",697,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"next","","",694,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",694,null],[11,"next","core::ops","",696,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"size_hint","","",696,null],[11,"next_back","","",696,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next","","",695,{"inputs":[{"name":"rangefrom"}],"output":{"name":"option"}}],[11,"clone","core::iter","",698,{"inputs":[{"name":"repeat"}],"output":{"name":"repeat"}}],[11,"next","","",698,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"size_hint","","",698,null],[11,"next_back","","",698,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"next","","",699,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"size_hint","","",699,null],[11,"next_back","","",699,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"len","","",699,{"inputs":[{"name":"empty"}],"output":{"name":"usize"}}],[11,"clone","","",699,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"default","","",699,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"clone","","",700,{"inputs":[{"name":"once"}],"output":{"name":"once"}}],[11,"next","","",700,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"size_hint","","",700,null],[11,"next_back","","",700,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"len","","",700,{"inputs":[{"name":"once"}],"output":{"name":"usize"}}],[11,"hash","core::marker","",701,null],[11,"eq","","",701,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",701,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"option"}}],[11,"cmp","","",701,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"ordering"}}],[11,"clone","","",701,{"inputs":[{"name":"phantomdata"}],"output":{"name":"phantomdata"}}],[11,"default","","",701,{"inputs":[{"name":"phantomdata"}],"output":{"name":"phantomdata"}}],[11,"eq","core::ops","",702,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"ne","","",702,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"clone","","",702,{"inputs":[{"name":"rangefull"}],"output":{"name":"rangefull"}}],[11,"fmt","","",702,{"inputs":[{"name":"rangefull"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",696,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"ne","","",696,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"clone","","",696,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"fmt","","",696,{"inputs":[{"name":"range"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",695,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"ne","","",695,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"clone","","",695,{"inputs":[{"name":"rangefrom"}],"output":{"name":"rangefrom"}}],[11,"fmt","","",695,{"inputs":[{"name":"rangefrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",703,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"ne","","",703,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"clone","","",703,{"inputs":[{"name":"rangeto"}],"output":{"name":"rangeto"}}],[11,"fmt","","",703,{"inputs":[{"name":"rangeto"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","core::ptr","Creates a new `Unique`.",704,null],[11,"get","","Dereferences the content.",704,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"get_mut","","Mutably dereferences the content.",704,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"deref","","",704,null],[11,"fmt","","",704,{"inputs":[{"name":"unique"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `Shared`.",705,null],[11,"clone","","",705,{"inputs":[{"name":"shared"}],"output":{"name":"shared"}}],[11,"deref","","",705,null],[11,"fmt","","",705,{"inputs":[{"name":"shared"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","core::raw","",706,{"inputs":[{"name":"slice"}],"output":{"name":"slice"}}],[11,"clone","","",707,{"inputs":[{"name":"traitobject"}],"output":{"name":"traitobject"}}],[11,"hash","core::result","",708,null],[11,"fmt","","",708,{"inputs":[{"name":"result"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",708,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",708,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"option"}}],[11,"lt","","",708,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"le","","",708,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"gt","","",708,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ge","","",708,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"eq","","",708,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ne","","",708,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"clone","","",708,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"is_ok","","Returns true if the result is `Ok`",708,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"is_err","","Returns true if the result is `Err`",708,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"ok","","Converts from `Result&lt;T, E&gt;` to `Option&lt;T&gt;`",708,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"err","","Converts from `Result&lt;T, E&gt;` to `Option&lt;E&gt;`",708,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"as_ref","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;T, &amp;E&gt;`",708,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_mut","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;mut T, &amp;mut E&gt;`",708,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"map","","Maps a `Result&lt;T, E&gt;` to `Result&lt;U, E&gt;` by applying a function to a\ncontained `Ok` value, leaving an `Err` value untouched.",708,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"map_err","","Maps a `Result&lt;T, E&gt;` to `Result&lt;T, F&gt;` by applying a function to a\ncontained `Err` value, leaving an `Ok` value untouched.",708,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",708,{"inputs":[{"name":"result"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",708,{"inputs":[{"name":"result"}],"output":{"name":"itermut"}}],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",708,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",708,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",708,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",708,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",708,{"inputs":[{"name":"result"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",708,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"t"}}],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",708,{"inputs":[{"name":"result"}],"output":{"name":"t"}}],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",708,{"inputs":[{"name":"result"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",708,{"inputs":[{"name":"result"}],"output":{"name":"e"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",708,{"inputs":[{"name":"result"}],"output":{"name":"intoiter"}}],[11,"next","","",709,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",709,null],[11,"next_back","","",709,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",709,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",710,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",710,null],[11,"next_back","","",710,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",711,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",711,null],[11,"next_back","","",711,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",708,{"inputs":[{"name":"result"},{"name":"i"}],"output":{"name":"result"}}],[11,"hash","core::option","",712,null],[11,"fmt","","",712,{"inputs":[{"name":"option"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",712,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",712,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"lt","","",712,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"le","","",712,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"gt","","",712,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ge","","",712,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"eq","","",712,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ne","","",712,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"clone","","",712,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"is_some","","Returns `true` if the option is a `Some` value",712,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"is_none","","Returns `true` if the option is a `None` value",712,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"as_ref","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;T&gt;`",712,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;mut T&gt;`",712,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"expect","","Unwraps an option, yielding the content of a `Some`.",712,{"inputs":[{"name":"option"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap","","Moves the value `v` out of the `Option&lt;T&gt;` if it is `Some(v)`.",712,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"unwrap_or","","Returns the contained value or a default.",712,{"inputs":[{"name":"option"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",712,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"t"}}],[11,"map","","Maps an `Option&lt;T&gt;` to `Option&lt;U&gt;` by applying a function to a contained value",712,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",712,{"inputs":[{"name":"option"},{"name":"u"},{"name":"f"}],"output":{"name":"u"}}],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",712,{"inputs":[{"name":"option"},{"name":"d"},{"name":"f"}],"output":{"name":"u"}}],[11,"ok_or","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",712,{"inputs":[{"name":"option"},{"name":"e"}],"output":{"name":"result"}}],[11,"ok_or_else","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",712,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",712,{"inputs":[{"name":"option"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",712,{"inputs":[{"name":"option"}],"output":{"name":"itermut"}}],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",712,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",712,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",712,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",712,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",712,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"cloned","","Maps an `Option&lt;&amp;T&gt;` to an `Option&lt;T&gt;` by cloning the contents of the\noption.",712,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"unwrap_or_default","","Returns the contained value or a default",712,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"default","","",712,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",712,{"inputs":[{"name":"option"}],"output":{"name":"intoiter"}}],[11,"clone","","",713,{"inputs":[{"name":"item"}],"output":{"name":"item"}}],[11,"next","","",713,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"size_hint","","",713,null],[11,"next_back","","",713,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"next","","",714,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",714,null],[11,"next_back","","",714,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",714,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",715,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",715,null],[11,"next_back","","",715,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",716,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"next","","",716,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",716,null],[11,"next_back","","",716,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",712,{"inputs":[{"name":"option"},{"name":"i"}],"output":{"name":"option"}}],[11,"clone","alloc::boxed","",717,{"inputs":[{"name":"exchangeheapsingleton"}],"output":{"name":"exchangeheapsingleton"}}],[11,"pointer","","",718,null],[11,"make_place","","",718,{"inputs":[{"name":"intermediatebox"}],"output":{"name":"intermediatebox"}}],[11,"finalize","","",718,{"inputs":[{"name":"intermediatebox"}],"output":{"name":"box"}}],[11,"finalize","","",329,{"inputs":[{"name":"box"},{"name":"intermediatebox"}],"output":{"name":"box"}}],[11,"make_place","","",717,{"inputs":[{"name":"exchangeheapsingleton"}],"output":{"name":"intermediatebox"}}],[11,"drop","","",718,null],[11,"new","","Allocates memory on the heap and then places `x` into it.",329,{"inputs":[{"name":"box"},{"name":"t"}],"output":{"name":"box"}}],[11,"from_raw","","Constructs a box from a raw pointer.",329,null],[11,"into_raw","","Consumes the `Box`, returning the wrapped raw pointer.",329,null],[11,"default","","",329,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"default","","",329,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone","","Returns a new box with a `clone()` of this box&#39;s contents.",329,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone_from","","Copies `source`&#39;s contents into `self` without creating a new allocation.",329,null],[11,"clone","","",329,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"eq","","",329,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"ne","","",329,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",329,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"option"}}],[11,"lt","","",329,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"le","","",329,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"ge","","",329,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"gt","","",329,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"cmp","","",329,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"ordering"}}],[11,"hash","","",329,null],[11,"from","","",329,{"inputs":[{"name":"box"},{"name":"t"}],"output":{"name":"box"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",329,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",329,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"fmt","","",329,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",329,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",329,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",329,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"deref_mut","","",329,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"next","","",329,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"size_hint","","",329,null],[11,"next_back","","",329,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"call_once","","",329,{"inputs":[{"name":"box"},{"name":"a"}],"output":{"name":"r"}}],[11,"call_once","","",329,{"inputs":[{"name":"box"},{"name":"a"}],"output":{"name":"r"}}],[11,"clone","","",329,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"borrow","","",329,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"borrow_mut","","",329,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"as_ref","","",329,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"as_mut","","",329,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"new","alloc::rc","Constructs a new `Rc&lt;T&gt;`.",719,{"inputs":[{"name":"rc"},{"name":"t"}],"output":{"name":"rc"}}],[11,"try_unwrap","","Unwraps the contained value if the `Rc&lt;T&gt;` has only one strong reference.\nThis will succeed even if there are outstanding weak references.",719,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"result"}}],[11,"would_unwrap","","Checks if `Rc::try_unwrap` would return `Ok`.",719,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"downgrade","","Downgrades the `Rc&lt;T&gt;` to a `Weak&lt;T&gt;` reference.",719,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"weak"}}],[11,"weak_count","","Get the number of weak references to this value.",719,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"usize"}}],[11,"strong_count","","Get the number of strong references to this value.",719,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"usize"}}],[11,"is_unique","","Returns true if there are no other `Rc` or `Weak&lt;T&gt;` values that share\nthe same inner value.",719,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the contained value if the `Rc&lt;T&gt;` has\none strong reference and no weak references.",719,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"option"}}],[11,"make_mut","","Make a mutable reference into the given `Rc&lt;T&gt;` by cloning the inner\ndata if the `Rc&lt;T&gt;` doesn&#39;t have one strong reference and no weak\nreferences.",719,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"t"}}],[11,"deref","","",719,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"drop","","Drops the `Rc&lt;T&gt;`.",719,null],[11,"clone","","Makes a clone of the `Rc&lt;T&gt;`.",719,{"inputs":[{"name":"rc"}],"output":{"name":"rc"}}],[11,"default","","Creates a new `Rc&lt;T&gt;`, with the `Default` value for `T`.",719,{"inputs":[{"name":"rc"}],"output":{"name":"rc"}}],[11,"eq","","Equality for two `Rc&lt;T&gt;`s.",719,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"ne","","Inequality for two `Rc&lt;T&gt;`s.",719,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"partial_cmp","","Partial comparison for two `Rc&lt;T&gt;`s.",719,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"option"}}],[11,"lt","","Less-than comparison for two `Rc&lt;T&gt;`s.",719,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"le","","&#39;Less-than or equal to&#39; comparison for two `Rc&lt;T&gt;`s.",719,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"gt","","Greater-than comparison for two `Rc&lt;T&gt;`s.",719,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"ge","","&#39;Greater-than or equal to&#39; comparison for two `Rc&lt;T&gt;`s.",719,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"cmp","","Comparison for two `Rc&lt;T&gt;`s.",719,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"ordering"}}],[11,"hash","","",719,null],[11,"fmt","","",719,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",719,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",719,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",719,{"inputs":[{"name":"rc"},{"name":"t"}],"output":{"name":"rc"}}],[11,"upgrade","","Upgrades a weak reference to a strong reference.",720,{"inputs":[{"name":"weak"}],"output":{"name":"option"}}],[11,"drop","","Drops the `Weak&lt;T&gt;`.",720,null],[11,"clone","","Makes a clone of the `Weak&lt;T&gt;`.",720,{"inputs":[{"name":"weak"}],"output":{"name":"weak"}}],[11,"fmt","","",720,{"inputs":[{"name":"weak"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Constructs a new `Weak&lt;T&gt;` without an accompanying instance of T.",720,{"inputs":[{"name":"weak"}],"output":{"name":"weak"}}],[11,"borrow","","",719,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"as_ref","","",719,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"borrow","collections::borrow","",489,{"inputs":[{"name":"cow"}],"output":{"name":"b"}}],[11,"clone","","",489,{"inputs":[{"name":"cow"}],"output":{"name":"cow"}}],[11,"to_mut","","Acquires a mutable reference to the owned form of the data.",489,null],[11,"into_owned","","Extracts the owned data.",489,null],[11,"deref","","",489,{"inputs":[{"name":"cow"}],"output":{"name":"b"}}],[11,"cmp","","",489,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"ordering"}}],[11,"eq","","",489,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",489,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"option"}}],[11,"fmt","","",489,{"inputs":[{"name":"cow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",489,{"inputs":[{"name":"cow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",489,null],[11,"into_cow","","",489,{"inputs":[{"name":"cow"}],"output":{"name":"cow"}}],[11,"as_ref","","",489,{"inputs":[{"name":"cow"}],"output":{"name":"t"}}],[11,"clone","core::fmt::rt::v1","",721,{"inputs":[{"name":"argument"}],"output":{"name":"argument"}}],[11,"clone","","",722,{"inputs":[{"name":"formatspec"}],"output":{"name":"formatspec"}}],[11,"eq","","",723,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"ne","","",723,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"clone","","",723,{"inputs":[{"name":"alignment"}],"output":{"name":"alignment"}}],[11,"clone","","",724,{"inputs":[{"name":"count"}],"output":{"name":"count"}}],[11,"clone","","",725,{"inputs":[{"name":"position"}],"output":{"name":"position"}}],[11,"borrow","collections::vec","",389,null],[11,"borrow_mut","","",389,null],[11,"clone","collections::str","",726,{"inputs":[{"name":"utf16units"}],"output":{"name":"utf16units"}}],[11,"next","","",726,{"inputs":[{"name":"utf16units"}],"output":{"name":"option"}}],[11,"size_hint","","",726,null],[11,"borrow","collections::string","",417,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"fmt","core::str::pattern","",727,{"inputs":[{"name":"searchstep"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",727,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"ne","","",727,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"clone","","",727,{"inputs":[{"name":"searchstep"}],"output":{"name":"searchstep"}}],[11,"clone","","",728,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"chareqsearcher"}}],[11,"into_searcher","","",729,{"inputs":[{"name":"chareqpattern"},{"name":"str"}],"output":{"name":"chareqsearcher"}}],[11,"haystack","","",728,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"str"}}],[11,"next","","",728,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"next_back","","",728,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"clone","","",730,{"inputs":[{"name":"charsearcher"}],"output":{"name":"charsearcher"}}],[11,"haystack","","",730,{"inputs":[{"name":"charsearcher"}],"output":{"name":"str"}}],[11,"next","","",730,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",730,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",730,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",730,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",730,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",730,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"clone","","",731,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"charslicesearcher"}}],[11,"haystack","","",731,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"str"}}],[11,"next","","",731,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",731,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",731,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",731,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",731,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",731,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"clone","","",732,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"charpredicatesearcher"}}],[11,"haystack","","",732,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"str"}}],[11,"next","","",732,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",732,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",732,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",732,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",732,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",732,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"fmt","","",733,{"inputs":[{"name":"strsearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",733,{"inputs":[{"name":"strsearcher"}],"output":{"name":"strsearcher"}}],[11,"fmt","","",734,{"inputs":[{"name":"strsearcherimpl"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",734,{"inputs":[{"name":"strsearcherimpl"}],"output":{"name":"strsearcherimpl"}}],[11,"fmt","","",735,{"inputs":[{"name":"emptyneedle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",735,{"inputs":[{"name":"emptyneedle"}],"output":{"name":"emptyneedle"}}],[11,"haystack","","",733,{"inputs":[{"name":"strsearcher"}],"output":{"name":"str"}}],[11,"next","","",733,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",733,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",733,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",733,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"fmt","","",736,{"inputs":[{"name":"twowaysearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",736,{"inputs":[{"name":"twowaysearcher"}],"output":{"name":"twowaysearcher"}}],[11,"use_early_reject","","",737,{"inputs":[{"name":"matchonly"}],"output":{"name":"bool"}}],[11,"rejecting","","",737,null],[11,"matching","","",737,null],[11,"use_early_reject","","",738,{"inputs":[{"name":"rejectandmatch"}],"output":{"name":"bool"}}],[11,"rejecting","","",738,null],[11,"matching","","",738,null],[11,"cmp","collections::string","",417,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",417,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"option"}}],[11,"lt","","",417,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"le","","",417,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"gt","","",417,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ge","","",417,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"fmt","","",334,{"inputs":[{"name":"fromutf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",335,{"inputs":[{"name":"fromutf16error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new empty `String`.",417,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"with_capacity","","Creates a new empty `String` with a particular capacity.",417,{"inputs":[{"name":"string"},{"name":"usize"}],"output":{"name":"string"}}],[11,"from_utf8","","Converts a vector of bytes to a `String`.",417,{"inputs":[{"name":"string"},{"name":"vec"}],"output":{"name":"result"}}],[11,"from_utf8_lossy","","Converts a slice of bytes to a string, including invalid characters.",417,null],[11,"from_utf16","","Decode a UTF-16 encoded vector `v` into a `String`, returning `Err`\nif `v` contains any invalid data.",417,null],[11,"from_utf16_lossy","","Decode a UTF-16 encoded vector `v` into a string, replacing\ninvalid data with the replacement character (U+FFFD).",417,null],[11,"from_raw_parts","","Creates a new `String` from a length, capacity, and pointer.",417,null],[11,"from_utf8_unchecked","","Converts a vector of bytes to a `String` without checking that the\nstring contains valid UTF-8.",417,{"inputs":[{"name":"string"},{"name":"vec"}],"output":{"name":"string"}}],[11,"into_bytes","","Converts a `String` into a byte vector.",417,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"as_str","","Extracts a string slice containing the entire string.",417,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"as_mut_str","","Extracts a string slice containing the entire string.",417,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"push_str","","Appends a given string slice onto the end of this `String`.",417,null],[11,"capacity","","Returns this `String`&#39;s capacity, in bytes.",417,{"inputs":[{"name":"string"}],"output":{"name":"usize"}}],[11,"reserve","","Ensures that this `String`&#39;s capacity is at least `additional` bytes\nlarger than its length.",417,null],[11,"reserve_exact","","Ensures that this `String`&#39;s capacity is `additional` bytes\nlarger than its length.",417,null],[11,"shrink_to_fit","","Shrinks the capacity of this `String` to match its length.",417,null],[11,"push","","Appends the given `char` to the end of this `String`.",417,null],[11,"as_bytes","","Returns a byte slice of this `String`&#39;s contents.",417,null],[11,"truncate","","Shortens this `String` to the specified length.",417,null],[11,"pop","","Removes the last character from the string buffer and returns it.",417,{"inputs":[{"name":"string"}],"output":{"name":"option"}}],[11,"remove","","Removes a `char` from this `String` at a byte position and returns it.",417,{"inputs":[{"name":"string"},{"name":"usize"}],"output":{"name":"char"}}],[11,"insert","","Inserts a character into this `String` at a byte position.",417,null],[11,"as_mut_vec","","Returns a mutable reference to the contents of this `String`.",417,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"len","","Returns the length of this `String`, in bytes.",417,{"inputs":[{"name":"string"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns `true` if this `String` has a length of zero.",417,{"inputs":[{"name":"string"}],"output":{"name":"bool"}}],[11,"clear","","Truncates this `String`, removing all contents.",417,null],[11,"drain","","Create a draining iterator that removes the specified range in the string\nand yields the removed chars.",417,{"inputs":[{"name":"string"},{"name":"r"}],"output":{"name":"drain"}}],[11,"into_boxed_str","","Converts this `String` into a `Box&lt;str&gt;`.",417,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"into_bytes","","Returns the bytes that were attempted to convert to a `String`.",334,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"vec"}}],[11,"utf8_error","","Fetch a `Utf8Error` to get more details about the conversion failure.",334,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"utf8error"}}],[11,"fmt","","",334,{"inputs":[{"name":"fromutf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",335,{"inputs":[{"name":"fromutf16error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",417,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"clone_from","","",417,null],[11,"from_iter","","",417,{"inputs":[{"name":"string"},{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",417,{"inputs":[{"name":"string"},{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",417,{"inputs":[{"name":"string"},{"name":"i"}],"output":{"name":"string"}}],[11,"extend","","",417,null],[11,"extend","","",417,null],[11,"extend","","",417,null],[11,"extend","","",417,null],[11,"eq","","",417,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ne","","",417,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"eq","","",417,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",417,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",417,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",417,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","collections::borrow","",489,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",489,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",489,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",489,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",489,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ne","","",489,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"bool"}}],[11,"eq","collections::string","",417,{"inputs":[{"name":"string"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"ne","","",417,{"inputs":[{"name":"string"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"default","","",417,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"fmt","","",417,{"inputs":[{"name":"string"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",417,{"inputs":[{"name":"string"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",417,null],[11,"add","","",417,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"string"}}],[11,"index","","",417,{"inputs":[{"name":"string"},{"name":"range"}],"output":{"name":"str"}}],[11,"index","","",417,{"inputs":[{"name":"string"},{"name":"rangeto"}],"output":{"name":"str"}}],[11,"index","","",417,{"inputs":[{"name":"string"},{"name":"rangefrom"}],"output":{"name":"str"}}],[11,"index","","",417,{"inputs":[{"name":"string"},{"name":"rangefull"}],"output":{"name":"str"}}],[11,"index_mut","","",417,{"inputs":[{"name":"string"},{"name":"range"}],"output":{"name":"str"}}],[11,"index_mut","","",417,{"inputs":[{"name":"string"},{"name":"rangeto"}],"output":{"name":"str"}}],[11,"index_mut","","",417,{"inputs":[{"name":"string"},{"name":"rangefrom"}],"output":{"name":"str"}}],[11,"index_mut","","",417,{"inputs":[{"name":"string"},{"name":"rangefull"}],"output":{"name":"str"}}],[11,"deref","","",417,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"deref_mut","","",417,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"from_str","","",417,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",336,{"inputs":[{"name":"parseerror"}],"output":{"name":"parseerror"}}],[11,"fmt","","",336,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",336,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",336,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"as_ref","","",417,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"as_ref","","",417,null],[11,"from","","",417,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"string"}}],[11,"from","collections::borrow","",489,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"cow"}}],[11,"from","","",489,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"cow"}}],[11,"into","collections::string","",417,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"into_cow","","",417,{"inputs":[{"name":"string"}],"output":{"name":"cow"}}],[11,"write_str","","",417,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_char","","",417,{"inputs":[{"name":"string"},{"name":"char"}],"output":{"name":"result"}}],[11,"drop","","",739,null],[11,"next","","",739,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",739,null],[11,"next_back","","",739,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"new","collections::vec","Constructs a new, empty `Vec&lt;T&gt;`.",389,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"with_capacity","","Constructs a new, empty `Vec&lt;T&gt;` with the specified capacity.",389,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"vec"}}],[11,"from_raw_parts","","Creates a `Vec&lt;T&gt;` directly from the raw components of another vector.",389,null],[11,"capacity","","Returns the number of elements the vector can hold without\nreallocating.",389,{"inputs":[{"name":"vec"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the given `Vec&lt;T&gt;`. The collection may reserve more space to avoid\nfrequent reallocations.",389,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to\nbe inserted in the given `Vec&lt;T&gt;`. Does nothing if the capacity is already\nsufficient.",389,null],[11,"shrink_to_fit","","Shrinks the capacity of the vector as much as possible.",389,null],[11,"into_boxed_slice","","Converts the vector into Box&lt;[T]&gt;.",389,{"inputs":[{"name":"vec"}],"output":{"name":"box"}}],[11,"truncate","","Shorten a vector to be `len` elements long, dropping excess elements.",389,null],[11,"as_slice","","Extracts a slice containing the entire vector.",389,null],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",389,null],[11,"set_len","","Sets the length of a vector.",389,null],[11,"swap_remove","","Removes an element from anywhere in the vector and return it, replacing\nit with the last element.",389,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"insert","","Inserts an element at position `index` within the vector, shifting all\nelements after it to the right.",389,null],[11,"remove","","Removes and returns the element at position `index` within the vector,\nshifting all elements after it to the left.",389,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"retain","","Retains only the elements specified by the predicate.",389,null],[11,"push","","Appends an element to the back of a collection.",389,null],[11,"pop","","Removes the last element from a vector and returns it, or `None` if it\nis empty.",389,{"inputs":[{"name":"vec"}],"output":{"name":"option"}}],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",389,null],[11,"drain","","Create a draining iterator that removes the specified range in the vector\nand yields the removed items.",389,{"inputs":[{"name":"vec"},{"name":"r"}],"output":{"name":"drain"}}],[11,"clear","","Clears the vector, removing all values.",389,null],[11,"len","","Returns the number of elements in the vector.",389,{"inputs":[{"name":"vec"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns `true` if the vector contains no elements.",389,{"inputs":[{"name":"vec"}],"output":{"name":"bool"}}],[11,"split_off","","Splits the collection into two at the given index.",389,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"vec"}}],[11,"resize","","Resizes the `Vec` in-place so that `len()` is equal to `new_len`.",389,null],[11,"push_all","","",389,null],[11,"extend_from_slice","","Appends all elements in a slice to the `Vec`.",389,null],[11,"dedup","","Removes consecutive repeated elements in the vector.",389,null],[11,"clone","","",389,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"clone_from","","",389,null],[11,"hash","","",389,null],[11,"index","","",389,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index_mut","","",389,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index","","",389,null],[11,"index","","",389,null],[11,"index","","",389,null],[11,"index","","",389,null],[11,"index_mut","","",389,null],[11,"index_mut","","",389,null],[11,"index_mut","","",389,null],[11,"index_mut","","",389,null],[11,"deref","","",389,null],[11,"deref_mut","","",389,null],[11,"from_iter","","",389,{"inputs":[{"name":"vec"},{"name":"i"}],"output":{"name":"vec"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe vector (from start to end). The vector cannot be used after calling\nthis.",389,{"inputs":[{"name":"vec"}],"output":{"name":"intoiter"}}],[11,"extend","","",389,null],[11,"extend","","",389,null],[11,"eq","","",389,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"ne","","",389,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","collections::borrow","",489,null],[11,"ne","","",489,null],[11,"eq","","",489,null],[11,"ne","","",489,null],[11,"eq","","",489,{"inputs":[{"name":"cow"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"ne","","",489,{"inputs":[{"name":"cow"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"eq","collections::vec","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"partial_cmp","","",389,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"option"}}],[11,"cmp","","",389,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"ordering"}}],[11,"drop","","",389,null],[11,"default","","",389,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"fmt","","",389,{"inputs":[{"name":"vec"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",389,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"as_mut","","",389,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"as_ref","","",389,null],[11,"as_mut","","",389,null],[11,"from","","",389,null],[11,"from","","",389,{"inputs":[{"name":"vec"},{"name":"str"}],"output":{"name":"vec"}}],[11,"from","collections::borrow","",489,null],[11,"from","","",489,{"inputs":[{"name":"cow"},{"name":"vec"}],"output":{"name":"cow"}}],[11,"from_iter","","",489,{"inputs":[{"name":"cow"},{"name":"i"}],"output":{"name":"cow"}}],[11,"into_cow","collections::vec","",389,{"inputs":[{"name":"vec"}],"output":{"name":"cow"}}],[11,"next","","",740,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",740,null],[11,"count","","",740,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next_back","","",740,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"drop","","",740,null],[11,"next","","",741,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",741,null],[11,"next_back","","",741,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"drop","","",741,null],[11,"next","rustc_unicode::char","",742,{"inputs":[{"name":"tolowercase"}],"output":{"name":"option"}}],[11,"next","","",743,{"inputs":[{"name":"touppercase"}],"output":{"name":"option"}}],[11,"next","","",744,{"inputs":[{"name":"casemappingiter"}],"output":{"name":"option"}}],[11,"clone","","",745,{"inputs":[{"name":"decodeutf16"}],"output":{"name":"decodeutf16"}}],[11,"next","","",745,{"inputs":[{"name":"decodeutf16"}],"output":{"name":"option"}}],[11,"size_hint","","",745,null],[11,"deref","shared_library::dynamic_library::dl","",746,{"inputs":[{"name":"lock"}],"output":{"name":"mutex"}}],[11,"clone","shared_library","",747,{"inputs":[{"name":"loadingerror"}],"output":{"name":"loadingerror"}}],[11,"fmt","","",747,{"inputs":[{"name":"loadingerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","vulkano","",0,{"inputs":[{"name":"oomerror"},{"name":"oomerror"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"oomerror"},{"name":"oomerror"}],"output":{"name":"bool"}}],[11,"fmt","","",0,{"inputs":[{"name":"oomerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"oomerror"}],"output":{"name":"oomerror"}}],[11,"description","","",0,{"inputs":[{"name":"oomerror"}],"output":{"name":"str"}}],[11,"fmt","","",0,{"inputs":[{"name":"oomerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",0,{"inputs":[{"name":"oomerror"},{"name":"error"}],"output":{"name":"oomerror"}}],[14,"single_pass_renderpass!","","Builds a `RenderPass` object.",null,null],[14,"impl_vertex!","","",null,null],[11,"hash","vulkano::instance","",248,null],[11,"eq","","",248,{"inputs":[{"name":"features"},{"name":"features"}],"output":{"name":"bool"}}],[11,"ne","","",248,{"inputs":[{"name":"features"},{"name":"features"}],"output":{"name":"bool"}}],[11,"clone","","",248,{"inputs":[{"name":"features"}],"output":{"name":"features"}}],[11,"fmt","","",248,{"inputs":[{"name":"features"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"none","","Builds a `Features` object with all values to false.",248,{"inputs":[{"name":"features"}],"output":{"name":"features"}}],[11,"superset_of","","Returns true if `self` is a superset of the parameter.",248,{"inputs":[{"name":"features"},{"name":"features"}],"output":{"name":"bool"}}],[11,"intersection","","Builds a `Features` that is the intersection of `self` and another `Features`\nobject.",248,{"inputs":[{"name":"features"},{"name":"features"}],"output":{"name":"features"}}],[11,"eq","","",249,{"inputs":[{"name":"version"},{"name":"version"}],"output":{"name":"bool"}}],[11,"ne","","",249,{"inputs":[{"name":"version"},{"name":"version"}],"output":{"name":"bool"}}],[11,"clone","","",249,{"inputs":[{"name":"version"}],"output":{"name":"version"}}],[11,"fmt","","",249,{"inputs":[{"name":"version"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_vulkan_version","","Turns a version number given by Vulkan into a `Version` struct.",249,{"inputs":[{"name":"version"},{"name":"u32"}],"output":{"name":"version"}}],[11,"into_vulkan_version","","Turns a `Version` into a version number accepted by Vulkan.",249,{"inputs":[{"name":"version"}],"output":{"name":"u32"}}]],"paths":[[4,"OomError"],[3,"Usage"],[8,"BufferResource"],[3,"Buffer"],[3,"BufferSlice"],[3,"DynamicState"],[3,"PrimaryCommandBufferBuilder"],[3,"PrimaryCommandBufferBuilderInlineDraw"],[3,"PrimaryCommandBufferBuilderSecondaryDraw"],[3,"PrimaryCommandBuffer"],[3,"SecondaryGraphicsCommandBufferBuilder"],[3,"SecondaryComputeCommandBufferBuilder"],[3,"CommandBufferPool"],[3,"DescriptorWrite"],[3,"DescriptorDesc"],[3,"ShaderStages"],[4,"DescriptorBind"],[4,"DescriptorType"],[8,"PipelineLayoutDesc"],[8,"DescriptorSetDesc"],[3,"EmptyPipelineDesc"],[3,"DescriptorSet"],[3,"DescriptorSetLayout"],[3,"PipelineLayout"],[3,"DescriptorPool"],[4,"DeviceCreationError"],[3,"Device"],[3,"Queue"],[4,"Format"],[4,"FormatTy"],[8,"Data"],[8,"FormatMarker"],[3,"Undefined"],[3,"R4G4UnormPack8"],[3,"R4G4B4A4UnormPack16"],[3,"B4G4R4A4UnormPack16"],[3,"R5G6B5UnormPack16"],[3,"B5G6R5UnormPack16"],[3,"R5G5B5A1UnormPack16"],[3,"B5G5R5A1UnormPack16"],[3,"A1R5G5B5UnormPack16"],[3,"R8Unorm"],[3,"R8Snorm"],[3,"R8Uscaled"],[3,"R8Sscaled"],[3,"R8Uint"],[3,"R8Sint"],[3,"R8Srgb"],[3,"R8G8Unorm"],[3,"R8G8Snorm"],[3,"R8G8Uscaled"],[3,"R8G8Sscaled"],[3,"R8G8Uint"],[3,"R8G8Sint"],[3,"R8G8Srgb"],[3,"R8G8B8Unorm"],[3,"R8G8B8Snorm"],[3,"R8G8B8Uscaled"],[3,"R8G8B8Sscaled"],[3,"R8G8B8Uint"],[3,"R8G8B8Sint"],[3,"R8G8B8Srgb"],[3,"B8G8R8Unorm"],[3,"B8G8R8Snorm"],[3,"B8G8R8Uscaled"],[3,"B8G8R8Sscaled"],[3,"B8G8R8Uint"],[3,"B8G8R8Sint"],[3,"B8G8R8Srgb"],[3,"R8G8B8A8Unorm"],[3,"R8G8B8A8Snorm"],[3,"R8G8B8A8Uscaled"],[3,"R8G8B8A8Sscaled"],[3,"R8G8B8A8Uint"],[3,"R8G8B8A8Sint"],[3,"R8G8B8A8Srgb"],[3,"B8G8R8A8Unorm"],[3,"B8G8R8A8Snorm"],[3,"B8G8R8A8Uscaled"],[3,"B8G8R8A8Sscaled"],[3,"B8G8R8A8Uint"],[3,"B8G8R8A8Sint"],[3,"B8G8R8A8Srgb"],[3,"A8B8G8R8UnormPack32"],[3,"A8B8G8R8SnormPack32"],[3,"A8B8G8R8UscaledPack32"],[3,"A8B8G8R8SscaledPack32"],[3,"A8B8G8R8UintPack32"],[3,"A8B8G8R8SintPack32"],[3,"A8B8G8R8SrgbPack32"],[3,"A2R10G10B10UnormPack32"],[3,"A2R10G10B10SnormPack32"],[3,"A2R10G10B10UscaledPack32"],[3,"A2R10G10B10SscaledPack32"],[3,"A2R10G10B10UintPack32"],[3,"A2R10G10B10SintPack32"],[3,"A2B10G10R10UnormPack32"],[3,"A2B10G10R10SnormPack32"],[3,"A2B10G10R10UscaledPack32"],[3,"A2B10G10R10SscaledPack32"],[3,"A2B10G10R10UintPack32"],[3,"A2B10G10R10SintPack32"],[3,"R16Unorm"],[3,"R16Snorm"],[3,"R16Uscaled"],[3,"R16Sscaled"],[3,"R16Uint"],[3,"R16Sint"],[3,"R16Sfloat"],[3,"R16G16Unorm"],[3,"R16G16Snorm"],[3,"R16G16Uscaled"],[3,"R16G16Sscaled"],[3,"R16G16Uint"],[3,"R16G16Sint"],[3,"R16G16Sfloat"],[3,"R16G16B16Unorm"],[3,"R16G16B16Snorm"],[3,"R16G16B16Uscaled"],[3,"R16G16B16Sscaled"],[3,"R16G16B16Uint"],[3,"R16G16B16Sint"],[3,"R16G16B16Sfloat"],[3,"R16G16B16A16Unorm"],[3,"R16G16B16A16Snorm"],[3,"R16G16B16A16Uscaled"],[3,"R16G16B16A16Sscaled"],[3,"R16G16B16A16Uint"],[3,"R16G16B16A16Sint"],[3,"R16G16B16A16Sfloat"],[3,"R32Uint"],[3,"R32Sint"],[3,"R32Sfloat"],[3,"R32G32Uint"],[3,"R32G32Sint"],[3,"R32G32Sfloat"],[3,"R32G32B32Uint"],[3,"R32G32B32Sint"],[3,"R32G32B32Sfloat"],[3,"R32G32B32A32Uint"],[3,"R32G32B32A32Sint"],[3,"R32G32B32A32Sfloat"],[3,"R64Uint"],[3,"R64Sint"],[3,"R64Sfloat"],[3,"R64G64Uint"],[3,"R64G64Sint"],[3,"R64G64Sfloat"],[3,"R64G64B64Uint"],[3,"R64G64B64Sint"],[3,"R64G64B64Sfloat"],[3,"R64G64B64A64Uint"],[3,"R64G64B64A64Sint"],[3,"R64G64B64A64Sfloat"],[3,"B10G11R11UfloatPack32"],[3,"E5B9G9R9UfloatPack32"],[3,"D16Unorm"],[3,"X8_D24UnormPack32"],[3,"D32Sfloat"],[3,"S8Uint"],[3,"D16Unorm_S8Uint"],[3,"D24Unorm_S8Uint"],[3,"D32Sfloat_S8Uint"],[3,"BC1_RGBUnormBlock"],[3,"BC1_RGBSrgbBlock"],[3,"BC1_RGBAUnormBlock"],[3,"BC1_RGBASrgbBlock"],[3,"BC2UnormBlock"],[3,"BC2SrgbBlock"],[3,"BC3UnormBlock"],[3,"BC3SrgbBlock"],[3,"BC4UnormBlock"],[3,"BC4SnormBlock"],[3,"BC5UnormBlock"],[3,"BC5SnormBlock"],[3,"BC6HUfloatBlock"],[3,"BC6HSfloatBlock"],[3,"BC7UnormBlock"],[3,"BC7SrgbBlock"],[3,"ETC2_R8G8B8UnormBlock"],[3,"ETC2_R8G8B8SrgbBlock"],[3,"ETC2_R8G8B8A1UnormBlock"],[3,"ETC2_R8G8B8A1SrgbBlock"],[3,"ETC2_R8G8B8A8UnormBlock"],[3,"ETC2_R8G8B8A8SrgbBlock"],[3,"EAC_R11UnormBlock"],[3,"EAC_R11SnormBlock"],[3,"EAC_R11G11UnormBlock"],[3,"EAC_R11G11SnormBlock"],[3,"ASTC_4x4UnormBlock"],[3,"ASTC_4x4SrgbBlock"],[3,"ASTC_5x4UnormBlock"],[3,"ASTC_5x4SrgbBlock"],[3,"ASTC_5x5UnormBlock"],[3,"ASTC_5x5SrgbBlock"],[3,"ASTC_6x5UnormBlock"],[3,"ASTC_6x5SrgbBlock"],[3,"ASTC_6x6UnormBlock"],[3,"ASTC_6x6SrgbBlock"],[3,"ASTC_8x5UnormBlock"],[3,"ASTC_8x5SrgbBlock"],[3,"ASTC_8x6UnormBlock"],[3,"ASTC_8x6SrgbBlock"],[3,"ASTC_8x8UnormBlock"],[3,"ASTC_8x8SrgbBlock"],[3,"ASTC_10x5UnormBlock"],[3,"ASTC_10x5SrgbBlock"],[3,"ASTC_10x6UnormBlock"],[3,"ASTC_10x6SrgbBlock"],[3,"ASTC_10x8UnormBlock"],[3,"ASTC_10x8SrgbBlock"],[3,"ASTC_10x10UnormBlock"],[3,"ASTC_10x10SrgbBlock"],[3,"ASTC_12x10UnormBlock"],[3,"ASTC_12x10SrgbBlock"],[3,"ASTC_12x12UnormBlock"],[3,"ASTC_12x12SrgbBlock"],[3,"AttachmentDescription"],[3,"PassDescription"],[3,"PassDependencyDescription"],[4,"ClearValue"],[4,"StoreOp"],[4,"LoadOp"],[8,"RenderPassLayout"],[8,"RenderPassLayoutExt"],[8,"CompatibleLayout"],[3,"RenderPass"],[3,"Subpass"],[3,"Framebuffer"],[3,"Usage"],[3,"Swizzle"],[4,"Layout"],[4,"ImageType"],[4,"MipmapsCount"],[4,"ComponentSwizzle"],[8,"ImageResource"],[8,"ImageTypeMarker"],[3,"Image"],[3,"ImagePrototype"],[3,"ImageView"],[3,"Type1d"],[3,"Type1dMultisample"],[3,"Type2d"],[3,"Type2dMultisample"],[3,"Type3d"],[3,"Type3dMultisample"],[3,"Type2dArray"],[3,"Type2dArrayMultisample"],[3,"Features"],[3,"Version"],[3,"ApplicationInfo"],[4,"InstanceCreationError"],[4,"PhysicalDeviceType"],[3,"Instance"],[3,"LayerProperties"],[3,"PhysicalDevice"],[3,"PhysicalDevicesIter"],[3,"QueueFamily"],[3,"QueueFamiliesIter"],[3,"MemoryType"],[3,"MemoryTypesIter"],[3,"MemoryHeap"],[3,"MemoryHeapsIter"],[4,"ChunkRange"],[4,"ChunkProperties"],[3,"DeviceMemory"],[3,"MappedDeviceMemory"],[3,"DeviceLocal"],[3,"DeviceLocalChunk"],[3,"HostVisible"],[3,"HostVisibleChunk"],[8,"CpuAccessible"],[8,"CpuWriteAccessible"],[8,"MemorySource"],[8,"MemorySourceChunk"],[8,"Content"],[3,"GraphicsPipeline"],[3,"Blend"],[4,"LogicOp"],[4,"BlendOp"],[3,"PipelineCache"],[3,"InputAssembly"],[4,"PrimitiveTopology"],[4,"IndexType"],[8,"Index"],[3,"Multisample"],[3,"Rasterization"],[4,"CullMode"],[4,"FrontFace"],[4,"PolygonMode"],[3,"VertexAttribute"],[4,"VertexInputRate"],[8,"Vertex"],[8,"MultiVertex"],[8,"Attribute"],[3,"Arc"],[3,"Viewport"],[3,"Scissor"],[4,"ViewportsState"],[4,"Filter"],[4,"MipmapMode"],[4,"SamplerAddressMode"],[3,"Sampler"],[3,"SpecializationMapEntry"],[8,"SpecializationConstants"],[3,"ShaderModule"],[3,"VertexShaderEntryPoint"],[3,"FragmentShaderEntryPoint"],[3,"Capabilities"],[4,"PresentMode"],[4,"SurfaceTransform"],[4,"CompositeAlpha"],[4,"ColorSpace"],[4,"AcquireError"],[3,"Surface"],[3,"Swapchain"],[3,"DisplayPlane"],[3,"Display"],[3,"DisplayMode"],[4,"SharingMode"],[8,"Resource"],[3,"Fence"],[3,"Semaphore"],[3,"Event"],[8,"VulkanObject"],[8,"VulkanObjectU64"],[8,"VulkanObjectUsize"],[3,"DynamicLibrary"],[3,"Mutex"],[3,"Box"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"ParseIntError"],[3,"ParseFloatError"],[3,"FromUtf8Error"],[3,"FromUtf16Error"],[4,"ParseError"],[8,"Error"],[3,"EscapeDefault"],[3,"Wrapping"],[4,"LocalKeyState"],[3,"LocalKey"],[3,"Key"],[3,"Key"],[3,"ScopedKey"],[3,"KeyInner"],[3,"Builder"],[3,"Thread"],[3,"JoinHandle"],[3,"RawBucket"],[3,"Bucket"],[3,"SafeHash"],[3,"FullBucket"],[3,"EmptyBucket"],[4,"BucketState"],[3,"GapThenFull"],[3,"RawTable"],[3,"RawBuckets"],[3,"RevMoveBuckets"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"DefaultResizePolicy"],[3,"HashMap"],[3,"Iter"],[3,"Keys"],[3,"Values"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[4,"Entry"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"RandomState"],[3,"HashSet"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Union"],[3,"DefaultState"],[3,"BinaryHeap"],[3,"Hole"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Vec"],[3,"Iter"],[3,"IntoIter"],[3,"Rawlink"],[3,"LinkedList"],[3,"IterMut"],[3,"FrontPlace"],[3,"BackPlace"],[3,"VecDeque"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"DynamicLibrary"],[3,"Vars"],[3,"VarsOs"],[4,"VarError"],[3,"SplitPaths"],[3,"JoinPathsError"],[3,"Args"],[3,"ArgsOs"],[3,"CString"],[3,"CStr"],[3,"NulError"],[3,"IntoStringError"],[3,"Error"],[3,"OsString"],[3,"OsStr"],[3,"String"],[3,"Metadata"],[3,"OpenOptions"],[3,"Permissions"],[3,"FileType"],[3,"File"],[3,"ReadDir"],[3,"DirEntry"],[3,"WalkDir"],[3,"DirBuilder"],[3,"BufReader"],[3,"IntoInnerError"],[3,"BufWriter"],[3,"LineWriter"],[3,"Cursor"],[3,"Custom"],[4,"ErrorKind"],[4,"Repr"],[3,"Lazy"],[3,"Empty"],[3,"Repeat"],[3,"Sink"],[3,"StdinRaw"],[3,"StdoutRaw"],[3,"StderrRaw"],[4,"Maybe"],[3,"Stdin"],[3,"StdinLock"],[3,"Stdout"],[3,"StdoutLock"],[3,"Stderr"],[3,"StderrLock"],[4,"SeekFrom"],[3,"Broadcast"],[3,"Chain"],[3,"Take"],[3,"Tee"],[3,"Bytes"],[4,"CharsError"],[3,"Chars"],[3,"Split"],[3,"Lines"],[4,"IpAddr"],[4,"Ipv6MulticastScope"],[3,"Ipv4Addr"],[3,"Ipv6Addr"],[4,"SocketAddr"],[3,"SocketAddrV4"],[3,"SocketAddrV6"],[3,"TcpStream"],[3,"TcpListener"],[3,"Incoming"],[3,"UdpSocket"],[3,"AddrParseError"],[4,"Shutdown"],[3,"LookupHost"],[3,"stat"],[3,"Command"],[3,"ExitStatus"],[3,"Stdio"],[3,"ChildStdin"],[3,"ChildStdout"],[3,"ChildStderr"],[3,"AssertRecoverSafe"],[4,"Prefix"],[4,"State"],[3,"PrefixComponent"],[4,"Component"],[3,"Components"],[3,"Iter"],[3,"PathBuf"],[3,"Path"],[4,"Cow"],[3,"StripPrefixError"],[3,"Display"],[3,"Output"],[3,"Child"],[3,"SignalToken"],[3,"WaitToken"],[3,"Packet"],[4,"StartResult"],[3,"Select"],[3,"Handle"],[3,"Packets"],[3,"Packet"],[3,"Packet"],[4,"Failure"],[3,"Packet"],[3,"Queue"],[3,"Queue"],[3,"SendError"],[3,"RecvError"],[4,"TryRecvError"],[4,"TrySendError"],[3,"Sender"],[3,"SyncSender"],[3,"Receiver"],[3,"Iter"],[3,"IntoIter"],[3,"Barrier"],[3,"BarrierWaitResult"],[3,"WaitTimeoutResult"],[3,"Condvar"],[3,"StaticCondvar"],[3,"StaticMutex"],[3,"MutexGuard"],[3,"Once"],[3,"RwLock"],[3,"StaticRwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"Semaphore"],[3,"SemaphoreGuard"],[3,"AtomicBool"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"AtomicPtr"],[4,"Ordering"],[3,"Duration"],[3,"Instant"],[3,"SystemTime"],[3,"SystemTimeError"],[3,"Condvar"],[3,"EHContext"],[3,"DwarfReader"],[4,"_Unwind_Action"],[4,"_Unwind_Reason_Code"],[3,"Mutex"],[3,"LookupHost"],[3,"TcpStream"],[3,"TcpListener"],[3,"UdpSocket"],[3,"Flag"],[3,"PoisonError"],[4,"TryLockError"],[3,"ReentrantMutex"],[3,"ReentrantMutexGuard"],[3,"RWLock"],[3,"StaticKey"],[3,"Key"],[3,"CodePoint"],[3,"Wtf8Buf"],[3,"Wtf8"],[3,"Wtf8CodePoints"],[3,"EncodeWide"],[3,"Weak"],[3,"Condvar"],[3,"FileDesc"],[3,"FileAttr"],[3,"OpenOptions"],[3,"FilePermissions"],[3,"FileType"],[3,"ReadDir"],[3,"Dir"],[3,"DirEntry"],[3,"File"],[3,"DirBuilder"],[3,"Mutex"],[3,"ReentrantMutex"],[3,"Socket"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_ll"],[3,"fd_set"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"passwd"],[3,"statvfs"],[3,"sockaddr_nl"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"fsid_t"],[3,"mq_attr"],[3,"cpu_set_t"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"ucred"],[3,"statfs"],[3,"msghdr"],[3,"termios"],[3,"flock"],[3,"sigset_t"],[3,"stat"],[3,"stat64"],[3,"pthread_attr_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"SplitPaths"],[3,"JoinPathsError"],[3,"Args"],[3,"Env"],[3,"Buf"],[3,"Slice"],[3,"AnonPipe"],[3,"Command"],[3,"ExitStatus"],[3,"Process"],[3,"OsRng"],[3,"RWLock"],[3,"Handler"],[3,"Thread"],[3,"Timespec"],[3,"Instant"],[3,"SystemTime"],[3,"Stdin"],[3,"Stdout"],[3,"Stderr"],[4,"Handler"],[3,"PanicInfo"],[3,"Location"],[3,"ReaderRng"],[3,"StdRng"],[3,"ThreadRngReseeder"],[3,"ThreadRng"],[3,"OsRng"],[8,"Any"],[3,"TypeId"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"BorrowRef"],[3,"Ref"],[3,"RefMut"],[3,"BorrowRefMut"],[3,"UnsafeCell"],[4,"Ordering"],[3,"SipHasher"],[3,"BuildHasherDefault"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[4,"ChainState"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"StepBy"],[3,"RangeFrom"],[3,"Range"],[3,"RangeInclusive"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[3,"PhantomData"],[3,"RangeFull"],[3,"RangeTo"],[3,"Unique"],[3,"Shared"],[3,"Slice"],[3,"TraitObject"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[4,"Option"],[3,"Item"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"ExchangeHeapSingleton"],[3,"IntermediateBox"],[3,"Rc"],[3,"Weak"],[3,"Argument"],[3,"FormatSpec"],[4,"Alignment"],[4,"Count"],[4,"Position"],[3,"Utf16Units"],[4,"SearchStep"],[3,"CharEqSearcher"],[3,"CharEqPattern"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[4,"StrSearcherImpl"],[3,"EmptyNeedle"],[3,"TwoWaySearcher"],[4,"MatchOnly"],[4,"RejectAndMatch"],[3,"Drain"],[3,"IntoIter"],[3,"Drain"],[3,"ToLowercase"],[3,"ToUppercase"],[4,"CaseMappingIter"],[3,"DecodeUtf16"],[3,"LOCK"],[4,"LoadingError"]]};
searchIndex['shared_library'] = {"items":[[4,"LoadingError","shared_library","Error that can happen while loading the shared library.",null,null],[13,"LibraryNotFound","","",0,null],[12,"descr","shared_library::LoadingError","",0,null],[13,"SymbolNotFound","shared_library","One of the symbols could not be found in the library.",0,null],[12,"symbol","shared_library::LoadingError","The symbol.",0,null],[0,"dynamic_library","shared_library","Dynamic library facilities.",null,null],[3,"DynamicLibrary","shared_library::dynamic_library","",null,null],[11,"new","std::sync::mutex","Creates a new mutex in an unlocked state ready for use.",1,{"inputs":[{"name":"mutex"},{"name":"t"}],"output":{"name":"mutex"}}],[11,"lock","","Acquires a mutex, blocking the current thread until it is able to do so.",1,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"try_lock","","Attempts to acquire this lock.",1,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"is_poisoned","","Determines whether the lock is poisoned.",1,{"inputs":[{"name":"mutex"}],"output":{"name":"bool"}}],[11,"into_inner","","Consumes this mutex, returning the underlying data.",1,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"get_mut","","Returns a mutable reference to the underlying data.",1,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"from","alloc::boxed","",2,{"inputs":[{"name":"box"},{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",2,{"inputs":[{"name":"box"},{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",2,{"inputs":[{"name":"box"},{"name":"string"}],"output":{"name":"box"}}],[11,"from","","",2,{"inputs":[{"name":"box"},{"name":"string"}],"output":{"name":"box"}}],[11,"from","","",2,{"inputs":[{"name":"box"},{"name":"str"}],"output":{"name":"box"}}],[11,"from","","",2,{"inputs":[{"name":"box"},{"name":"str"}],"output":{"name":"box"}}],[11,"description","core::str","",3,{"inputs":[{"name":"parseboolerror"}],"output":{"name":"str"}}],[11,"description","","",4,{"inputs":[{"name":"utf8error"}],"output":{"name":"str"}}],[11,"description","core::num","",5,{"inputs":[{"name":"parseinterror"}],"output":{"name":"str"}}],[11,"description","core::num::dec2flt","",6,{"inputs":[{"name":"parsefloaterror"}],"output":{"name":"str"}}],[11,"description","collections::string","",7,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"str"}}],[11,"description","","",8,{"inputs":[{"name":"fromutf16error"}],"output":{"name":"str"}}],[11,"description","","",9,{"inputs":[{"name":"parseerror"}],"output":{"name":"str"}}],[11,"description","alloc::boxed","",2,{"inputs":[{"name":"box"}],"output":{"name":"str"}}],[11,"cause","","",2,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"is","shared_library::dynamic_library","Returns true if the boxed type is the same as `T`",10,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",10,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",10,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",10,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",10,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",10,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",10,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",10,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",10,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",10,{"inputs":[{"name":"error"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",10,{"inputs":[{"name":"error"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",10,{"inputs":[{"name":"error"}],"output":{"name":"result"}}],[11,"next","std::ascii","",11,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"size_hint","","",11,null],[11,"next_back","","",11,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"shl","core::num","",12,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",12,null],[11,"shr","","",12,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",12,null],[11,"shl","","",12,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",12,null],[11,"shr","","",12,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",12,null],[11,"shl","","",12,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",12,null],[11,"shr","","",12,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",12,null],[11,"shl","","",12,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",12,null],[11,"shr","","",12,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",12,null],[11,"shl","","",12,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",12,null],[11,"shr","","",12,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",12,null],[11,"shl","","",12,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",12,null],[11,"shr","","",12,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",12,null],[11,"shl","","",12,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",12,null],[11,"shr","","",12,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",12,null],[11,"shl","","",12,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",12,null],[11,"shr","","",12,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",12,null],[11,"shl","","",12,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",12,null],[11,"shr","","",12,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",12,null],[11,"shl","","",12,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",12,null],[11,"shr","","",12,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",12,null],[11,"add","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",12,null],[11,"sub","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",12,null],[11,"mul","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",12,null],[11,"div","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",12,null],[11,"rem","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",12,null],[11,"not","","",12,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",12,null],[11,"bitor","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",12,null],[11,"bitand","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",12,null],[11,"add","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",12,null],[11,"sub","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",12,null],[11,"mul","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",12,null],[11,"div","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",12,null],[11,"rem","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",12,null],[11,"not","","",12,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",12,null],[11,"bitor","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",12,null],[11,"bitand","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",12,null],[11,"add","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",12,null],[11,"sub","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",12,null],[11,"mul","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",12,null],[11,"div","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",12,null],[11,"rem","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",12,null],[11,"not","","",12,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",12,null],[11,"bitor","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",12,null],[11,"bitand","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",12,null],[11,"add","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",12,null],[11,"sub","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",12,null],[11,"mul","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",12,null],[11,"div","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",12,null],[11,"rem","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",12,null],[11,"not","","",12,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",12,null],[11,"bitor","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",12,null],[11,"bitand","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",12,null],[11,"add","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",12,null],[11,"sub","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",12,null],[11,"mul","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",12,null],[11,"div","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",12,null],[11,"rem","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",12,null],[11,"not","","",12,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",12,null],[11,"bitor","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",12,null],[11,"bitand","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",12,null],[11,"add","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",12,null],[11,"sub","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",12,null],[11,"mul","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",12,null],[11,"div","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",12,null],[11,"rem","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",12,null],[11,"not","","",12,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",12,null],[11,"bitor","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",12,null],[11,"bitand","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",12,null],[11,"add","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",12,null],[11,"sub","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",12,null],[11,"mul","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",12,null],[11,"div","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",12,null],[11,"rem","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",12,null],[11,"not","","",12,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",12,null],[11,"bitor","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",12,null],[11,"bitand","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",12,null],[11,"add","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",12,null],[11,"sub","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",12,null],[11,"mul","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",12,null],[11,"div","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",12,null],[11,"rem","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",12,null],[11,"not","","",12,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",12,null],[11,"bitor","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",12,null],[11,"bitand","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",12,null],[11,"add","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",12,null],[11,"sub","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",12,null],[11,"mul","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",12,null],[11,"div","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",12,null],[11,"rem","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",12,null],[11,"not","","",12,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",12,null],[11,"bitor","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",12,null],[11,"bitand","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",12,null],[11,"add","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",12,null],[11,"sub","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",12,null],[11,"mul","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",12,null],[11,"div","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",12,null],[11,"rem","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",12,null],[11,"not","","",12,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",12,null],[11,"bitor","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",12,null],[11,"bitand","","",12,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",12,null],[11,"clone","std::thread::local","",13,{"inputs":[{"name":"localkeystate"}],"output":{"name":"localkeystate"}}],[11,"eq","","",13,{"inputs":[{"name":"localkeystate"},{"name":"localkeystate"}],"output":{"name":"bool"}}],[11,"ne","","",13,{"inputs":[{"name":"localkeystate"},{"name":"localkeystate"}],"output":{"name":"bool"}}],[11,"with","","Acquires a reference to the value in this TLS key.",14,{"inputs":[{"name":"localkey"},{"name":"f"}],"output":{"name":"r"}}],[11,"state","","Query the current state of this key.",14,{"inputs":[{"name":"localkey"}],"output":{"name":"localkeystate"}}],[11,"new","std::thread::local::elf","",15,{"inputs":[{"name":"key"}],"output":{"name":"key"}}],[11,"get","","",15,{"inputs":[{"name":"key"}],"output":{"name":"option"}}],[11,"new","std::thread::local::os","",16,{"inputs":[{"name":"key"}],"output":{"name":"key"}}],[11,"get","","",16,{"inputs":[{"name":"key"}],"output":{"name":"option"}}],[11,"set","std::thread::scoped_tls","Inserts a value into this scoped thread local storage slot for a\nduration of a closure.",17,{"inputs":[{"name":"scopedkey"},{"name":"t"},{"name":"f"}],"output":{"name":"r"}}],[11,"with","","Gets a value out of this scoped variable.",17,{"inputs":[{"name":"scopedkey"},{"name":"f"}],"output":{"name":"r"}}],[11,"is_set","","Test whether this TLS key has been `set` for the current thread.",17,{"inputs":[{"name":"scopedkey"}],"output":{"name":"bool"}}],[11,"new","std::thread::scoped_tls::imp","",18,{"inputs":[{"name":"keyinner"}],"output":{"name":"keyinner"}}],[11,"set","","",18,null],[11,"get","","",18,null],[11,"new","std::thread","Generates the base configuration for spawning a thread, from which\nconfiguration methods can be chained.",19,{"inputs":[{"name":"builder"}],"output":{"name":"builder"}}],[11,"name","","Names the thread-to-be. Currently the name is used for identification\nonly in panic messages.",19,{"inputs":[{"name":"builder"},{"name":"string"}],"output":{"name":"builder"}}],[11,"stack_size","","Sets the size of the stack for the new thread.",19,{"inputs":[{"name":"builder"},{"name":"usize"}],"output":{"name":"builder"}}],[11,"spawn","","Spawns a new thread, and returns a join handle for it.",19,{"inputs":[{"name":"builder"},{"name":"f"}],"output":{"name":"result"}}],[11,"clone","","",20,{"inputs":[{"name":"thread"}],"output":{"name":"thread"}}],[11,"unpark","","Atomically makes the handle&#39;s token available if it is not already.",20,null],[11,"name","","Gets the thread&#39;s name.",20,{"inputs":[{"name":"thread"}],"output":{"name":"option"}}],[11,"fmt","","",20,{"inputs":[{"name":"thread"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",20,{"inputs":[{"name":"thread"},{"name":"option"}],"output":{"name":"thread"}}],[11,"thread","","Extracts a handle to the underlying thread",21,{"inputs":[{"name":"joinhandle"}],"output":{"name":"thread"}}],[11,"join","","Waits for the associated thread to finish.",21,{"inputs":[{"name":"joinhandle"}],"output":{"name":"result"}}],[11,"clone","std::collections::hash::table","",22,{"inputs":[{"name":"rawbucket"}],"output":{"name":"rawbucket"}}],[11,"clone","","",23,{"inputs":[{"name":"bucket"}],"output":{"name":"bucket"}}],[11,"clone","","",24,{"inputs":[{"name":"safehash"}],"output":{"name":"safehash"}}],[11,"eq","","",24,{"inputs":[{"name":"safehash"},{"name":"safehash"}],"output":{"name":"bool"}}],[11,"ne","","",24,{"inputs":[{"name":"safehash"},{"name":"safehash"}],"output":{"name":"bool"}}],[11,"inspect","","Peek at the hash value, which is guaranteed to be non-zero.",24,{"inputs":[{"name":"safehash"}],"output":{"name":"u64"}}],[11,"table","","Borrow a reference to the table.",25,{"inputs":[{"name":"fullbucket"}],"output":{"name":"m"}}],[11,"into_table","","Move out the reference to the table.",25,{"inputs":[{"name":"fullbucket"}],"output":{"name":"m"}}],[11,"index","","Get the raw index.",25,{"inputs":[{"name":"fullbucket"}],"output":{"name":"usize"}}],[11,"table","","Borrow a reference to the table.",26,{"inputs":[{"name":"emptybucket"}],"output":{"name":"m"}}],[11,"into_table","","Move out the reference to the table.",26,{"inputs":[{"name":"emptybucket"}],"output":{"name":"m"}}],[11,"into_table","","Move out the reference to the table.",23,{"inputs":[{"name":"bucket"}],"output":{"name":"m"}}],[11,"index","","Get the raw index.",23,{"inputs":[{"name":"bucket"}],"output":{"name":"usize"}}],[11,"new","","",23,{"inputs":[{"name":"bucket"},{"name":"m"},{"name":"safehash"}],"output":{"name":"bucket"}}],[11,"at_index","","",23,{"inputs":[{"name":"bucket"},{"name":"m"},{"name":"usize"}],"output":{"name":"bucket"}}],[11,"first","","",23,{"inputs":[{"name":"bucket"},{"name":"m"}],"output":{"name":"bucket"}}],[11,"peek","","Reads a bucket at a given index, returning an enum indicating whether\nit&#39;s initialized or not. You need to match on this enum to get\nthe appropriate types to call most of the other functions in\nthis module.",23,{"inputs":[{"name":"bucket"}],"output":{"name":"bucketstate"}}],[11,"next","","Modifies the bucket pointer in place to make it point to the next slot.",23,null],[11,"next","","",26,{"inputs":[{"name":"emptybucket"}],"output":{"name":"bucket"}}],[11,"into_bucket","","",26,{"inputs":[{"name":"emptybucket"}],"output":{"name":"bucket"}}],[11,"gap_peek","","",26,{"inputs":[{"name":"emptybucket"}],"output":{"name":"option"}}],[11,"put","","Puts given key and value pair, along with the key&#39;s hash,\ninto this bucket in the hashtable. Note how `self` is &#39;moved&#39; into\nthis function, because this slot will no longer be empty when\nwe return! A `FullBucket` is returned for later use, pointing to\nthe newly-filled slot in the hashtable.",26,{"inputs":[{"name":"emptybucket"},{"name":"safehash"},{"name":"k"},{"name":"v"}],"output":{"name":"fullbucket"}}],[11,"next","","",25,{"inputs":[{"name":"fullbucket"}],"output":{"name":"bucket"}}],[11,"into_bucket","","",25,{"inputs":[{"name":"fullbucket"}],"output":{"name":"bucket"}}],[11,"distance","","Get the distance between this bucket and the &#39;ideal&#39; location\nas determined by the key&#39;s hash stored in it.",25,{"inputs":[{"name":"fullbucket"}],"output":{"name":"usize"}}],[11,"hash","","",25,{"inputs":[{"name":"fullbucket"}],"output":{"name":"safehash"}}],[11,"read","","Gets references to the key and value at a given index.",25,null],[11,"take","","Removes this bucket&#39;s key and value from the hashtable.",25,null],[11,"replace","","",25,null],[11,"read_mut","","Gets mutable references to the key and value at a given index.",25,null],[11,"into_refs","","Exchange a bucket state for immutable references into the table.\nBecause the underlying reference to the table is also consumed,\nno further changes to the structure of the table are possible;\nin exchange for this, the returned references have a longer lifetime\nthan the references returned by `read()`.",25,null],[11,"into_mut_refs","","This works similarly to `into_refs`, exchanging a bucket state\nfor mutable references into the table.",25,null],[11,"expect_full","","",27,{"inputs":[{"name":"bucketstate"}],"output":{"name":"fullbucket"}}],[11,"full","","",28,{"inputs":[{"name":"gapthenfull"}],"output":{"name":"fullbucket"}}],[11,"shift","","",28,{"inputs":[{"name":"gapthenfull"}],"output":{"name":"option"}}],[11,"new","","Creates a new raw table from a given capacity. All buckets are\ninitially empty.",29,{"inputs":[{"name":"rawtable"},{"name":"usize"}],"output":{"name":"rawtable"}}],[11,"capacity","","The hashtable&#39;s capacity, similar to a vector&#39;s.",29,{"inputs":[{"name":"rawtable"}],"output":{"name":"usize"}}],[11,"size","","The number of elements ever `put` in the hashtable, minus the number\nof elements ever `take`n.",29,{"inputs":[{"name":"rawtable"}],"output":{"name":"usize"}}],[11,"iter","","",29,{"inputs":[{"name":"rawtable"}],"output":{"name":"iter"}}],[11,"iter_mut","","",29,{"inputs":[{"name":"rawtable"}],"output":{"name":"itermut"}}],[11,"into_iter","","",29,{"inputs":[{"name":"rawtable"}],"output":{"name":"intoiter"}}],[11,"drain","","",29,{"inputs":[{"name":"rawtable"}],"output":{"name":"drain"}}],[11,"clone","","",30,{"inputs":[{"name":"rawbuckets"}],"output":{"name":"rawbuckets"}}],[11,"next","","",30,{"inputs":[{"name":"rawbuckets"}],"output":{"name":"option"}}],[11,"next","","",31,{"inputs":[{"name":"revmovebuckets"}],"output":{"name":"option"}}],[11,"clone","","",32,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",32,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",32,null],[11,"len","","",32,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"next","","",33,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",33,null],[11,"len","","",33,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"next","","",34,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",34,null],[11,"len","","",34,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next","","",35,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",35,null],[11,"len","","",35,{"inputs":[{"name":"drain"}],"output":{"name":"usize"}}],[11,"drop","","",35,null],[11,"clone","","",29,{"inputs":[{"name":"rawtable"}],"output":{"name":"rawtable"}}],[11,"drop","","",29,null],[11,"clone","std::collections::hash::map","",36,{"inputs":[{"name":"defaultresizepolicy"}],"output":{"name":"defaultresizepolicy"}}],[11,"clone","","",37,{"inputs":[{"name":"hashmap"}],"output":{"name":"hashmap"}}],[11,"new","","Creates an empty HashMap.",37,{"inputs":[{"name":"hashmap"}],"output":{"name":"hashmap"}}],[11,"with_capacity","","Creates an empty hash map with the given initial capacity.",37,{"inputs":[{"name":"hashmap"},{"name":"usize"}],"output":{"name":"hashmap"}}],[11,"with_hasher","","Creates an empty hashmap which will use the given hash builder to hash\nkeys.",37,{"inputs":[{"name":"hashmap"},{"name":"s"}],"output":{"name":"hashmap"}}],[11,"with_hash_state","","Deprecated, renamed to `with_hasher`",37,{"inputs":[{"name":"hashmap"},{"name":"s"}],"output":{"name":"hashmap"}}],[11,"with_capacity_and_hasher","","Creates an empty HashMap with space for at least `capacity`\nelements, using `hasher` to hash the keys.",37,{"inputs":[{"name":"hashmap"},{"name":"usize"},{"name":"s"}],"output":{"name":"hashmap"}}],[11,"with_capacity_and_hash_state","","Deprecated, renamed to `with_capacity_and_hasher`",37,{"inputs":[{"name":"hashmap"},{"name":"usize"},{"name":"s"}],"output":{"name":"hashmap"}}],[11,"hasher","","Returns a reference to the map&#39;s hasher.",37,{"inputs":[{"name":"hashmap"}],"output":{"name":"s"}}],[11,"capacity","","Returns the number of elements the map can hold without reallocating.",37,{"inputs":[{"name":"hashmap"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashMap`. The collection may reserve more space to avoid\nfrequent reallocations.",37,null],[11,"shrink_to_fit","","Shrinks the capacity of the map as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",37,null],[11,"keys","","An iterator visiting all keys in arbitrary order.\nIterator element type is `&amp;&#39;a K`.",37,{"inputs":[{"name":"hashmap"}],"output":{"name":"keys"}}],[11,"values","","An iterator visiting all values in arbitrary order.\nIterator element type is `&amp;&#39;a V`.",37,{"inputs":[{"name":"hashmap"}],"output":{"name":"values"}}],[11,"iter","","An iterator visiting all key-value pairs in arbitrary order.\nIterator element type is `(&amp;&#39;a K, &amp;&#39;a V)`.",37,{"inputs":[{"name":"hashmap"}],"output":{"name":"iter"}}],[11,"iter_mut","","An iterator visiting all key-value pairs in arbitrary order,\nwith mutable references to the values.\nIterator element type is `(&amp;&#39;a K, &amp;&#39;a mut V)`.",37,{"inputs":[{"name":"hashmap"}],"output":{"name":"itermut"}}],[11,"entry","","Gets the given key&#39;s corresponding entry in the map for in-place manipulation.",37,{"inputs":[{"name":"hashmap"},{"name":"k"}],"output":{"name":"entry"}}],[11,"len","","Returns the number of elements in the map.",37,{"inputs":[{"name":"hashmap"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the map contains no elements.",37,{"inputs":[{"name":"hashmap"}],"output":{"name":"bool"}}],[11,"drain","","Clears the map, returning all key-value pairs as an iterator. Keeps the\nallocated memory for reuse.",37,{"inputs":[{"name":"hashmap"}],"output":{"name":"drain"}}],[11,"clear","","Clears the map, removing all key-value pairs. Keeps the allocated memory\nfor reuse.",37,null],[11,"get","","Returns a reference to the value corresponding to the key.",37,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"contains_key","","Returns true if the map contains a value for the specified key.",37,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",37,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"insert","","Inserts a key-value pair into the map.",37,{"inputs":[{"name":"hashmap"},{"name":"k"},{"name":"v"}],"output":{"name":"option"}}],[11,"remove","","Removes a key from the map, returning the value at the key if the key\nwas previously in the map.",37,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"eq","","",37,{"inputs":[{"name":"hashmap"},{"name":"hashmap"}],"output":{"name":"bool"}}],[11,"fmt","","",37,{"inputs":[{"name":"hashmap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",37,{"inputs":[{"name":"hashmap"}],"output":{"name":"hashmap"}}],[11,"index","","",37,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"v"}}],[11,"clone","","",38,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"clone","","",39,{"inputs":[{"name":"keys"}],"output":{"name":"keys"}}],[11,"clone","","",40,{"inputs":[{"name":"values"}],"output":{"name":"values"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each key-value\npair out of the map in arbitrary order. The map cannot be used after\ncalling this.",37,{"inputs":[{"name":"hashmap"}],"output":{"name":"intoiter"}}],[11,"next","","",38,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",38,null],[11,"len","","",38,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"next","","",41,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",41,null],[11,"len","","",41,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"next","","",42,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",42,null],[11,"len","","",42,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next","","",39,{"inputs":[{"name":"keys"}],"output":{"name":"option"}}],[11,"size_hint","","",39,null],[11,"len","","",39,{"inputs":[{"name":"keys"}],"output":{"name":"usize"}}],[11,"next","","",40,{"inputs":[{"name":"values"}],"output":{"name":"option"}}],[11,"size_hint","","",40,null],[11,"len","","",40,{"inputs":[{"name":"values"}],"output":{"name":"usize"}}],[11,"next","","",43,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",43,null],[11,"len","","",43,{"inputs":[{"name":"drain"}],"output":{"name":"usize"}}],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.",44,{"inputs":[{"name":"entry"},{"name":"v"}],"output":{"name":"v"}}],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.",44,{"inputs":[{"name":"entry"},{"name":"f"}],"output":{"name":"v"}}],[11,"get","","Gets a reference to the value in the entry.",45,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"get_mut","","Gets a mutable reference to the value in the entry.",45,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"into_mut","","Converts the OccupiedEntry into a mutable reference to the value in the entry\nwith a lifetime bound to the map itself",45,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry, and returns the entry&#39;s old value",45,{"inputs":[{"name":"occupiedentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"remove","","Takes the value out of the entry, and returns it",45,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry with the VacantEntry&#39;s key,\nand returns a mutable reference to it",46,{"inputs":[{"name":"vacantentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"from_iter","","",37,{"inputs":[{"name":"hashmap"},{"name":"t"}],"output":{"name":"hashmap"}}],[11,"extend","","",37,null],[11,"extend","","",37,null],[11,"clone","","",47,{"inputs":[{"name":"randomstate"}],"output":{"name":"randomstate"}}],[11,"new","","Constructs a new `RandomState` that is initialized with random keys.",47,{"inputs":[{"name":"randomstate"}],"output":{"name":"randomstate"}}],[11,"build_hasher","","",47,{"inputs":[{"name":"randomstate"}],"output":{"name":"siphasher"}}],[11,"default","","",47,{"inputs":[{"name":"randomstate"}],"output":{"name":"randomstate"}}],[11,"get","","",37,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"take","","",37,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"replace","","",37,{"inputs":[{"name":"hashmap"},{"name":"k"}],"output":{"name":"option"}}],[11,"clone","std::collections::hash::set","",48,{"inputs":[{"name":"hashset"}],"output":{"name":"hashset"}}],[11,"new","","Creates an empty HashSet.",48,{"inputs":[{"name":"hashset"}],"output":{"name":"hashset"}}],[11,"with_capacity","","Creates an empty HashSet with space for at least `n` elements in\nthe hash table.",48,{"inputs":[{"name":"hashset"},{"name":"usize"}],"output":{"name":"hashset"}}],[11,"with_hasher","","Creates a new empty hash set which will use the given hasher to hash\nkeys.",48,{"inputs":[{"name":"hashset"},{"name":"s"}],"output":{"name":"hashset"}}],[11,"with_capacity_and_hasher","","Creates an empty HashSet with space for at least `capacity`\nelements in the hash table, using `hasher` to hash the keys.",48,{"inputs":[{"name":"hashset"},{"name":"usize"},{"name":"s"}],"output":{"name":"hashset"}}],[11,"hasher","","Returns a reference to the set&#39;s hasher.",48,{"inputs":[{"name":"hashset"}],"output":{"name":"s"}}],[11,"with_hash_state","","Deprecated, renamed to `with_hasher`",48,{"inputs":[{"name":"hashset"},{"name":"s"}],"output":{"name":"hashset"}}],[11,"with_capacity_and_hash_state","","Deprecated, renamed to `with_capacity_and_hasher`",48,{"inputs":[{"name":"hashset"},{"name":"usize"},{"name":"s"}],"output":{"name":"hashset"}}],[11,"capacity","","Returns the number of elements the set can hold without reallocating.",48,{"inputs":[{"name":"hashset"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashSet`. The collection may reserve more space to avoid\nfrequent reallocations.",48,null],[11,"shrink_to_fit","","Shrinks the capacity of the set as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",48,null],[11,"iter","","An iterator visiting all elements in arbitrary order.\nIterator element type is &amp;&#39;a T.",48,{"inputs":[{"name":"hashset"}],"output":{"name":"iter"}}],[11,"difference","","Visit the values representing the difference.",48,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"difference"}}],[11,"symmetric_difference","","Visit the values representing the symmetric difference.",48,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"symmetricdifference"}}],[11,"intersection","","Visit the values representing the intersection.",48,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"intersection"}}],[11,"union","","Visit the values representing the union.",48,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"union"}}],[11,"len","","Returns the number of elements in the set.",48,{"inputs":[{"name":"hashset"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the set contains no elements.",48,{"inputs":[{"name":"hashset"}],"output":{"name":"bool"}}],[11,"drain","","Clears the set, returning all elements in an iterator.",48,{"inputs":[{"name":"hashset"}],"output":{"name":"drain"}}],[11,"clear","","Clears the set, removing all values.",48,null],[11,"contains","","Returns `true` if the set contains a value.",48,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"bool"}}],[11,"get","","Returns a reference to the value in the set, if any, that is equal to the given value.",48,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"option"}}],[11,"is_disjoint","","Returns `true` if the set has no elements in common with `other`.\nThis is equivalent to checking for an empty intersection.",48,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"is_subset","","Returns `true` if the set is a subset of another.",48,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"is_superset","","Returns `true` if the set is a superset of another.",48,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"insert","","Adds a value to the set.",48,{"inputs":[{"name":"hashset"},{"name":"t"}],"output":{"name":"bool"}}],[11,"replace","","Adds a value to the set, replacing the existing value, if any, that is equal to the given\none. Returns the replaced value.",48,{"inputs":[{"name":"hashset"},{"name":"t"}],"output":{"name":"option"}}],[11,"remove","","Removes a value from the set. Returns `true` if the value was\npresent in the set.",48,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"bool"}}],[11,"take","","Removes and returns the value in the set, if any, that is equal to the given one.",48,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"option"}}],[11,"eq","","",48,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"fmt","","",48,{"inputs":[{"name":"hashset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_iter","","",48,{"inputs":[{"name":"hashset"},{"name":"i"}],"output":{"name":"hashset"}}],[11,"extend","","",48,null],[11,"extend","","",48,null],[11,"default","","",48,{"inputs":[{"name":"hashset"}],"output":{"name":"hashset"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out\nof the set in arbitrary order. The set cannot be used after calling\nthis.",48,{"inputs":[{"name":"hashset"}],"output":{"name":"intoiter"}}],[11,"clone","","",49,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",49,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",49,null],[11,"len","","",49,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"next","","",50,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",50,null],[11,"len","","",50,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next","","",51,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",51,null],[11,"len","","",51,{"inputs":[{"name":"drain"}],"output":{"name":"usize"}}],[11,"clone","","",52,{"inputs":[{"name":"intersection"}],"output":{"name":"intersection"}}],[11,"next","","",52,{"inputs":[{"name":"intersection"}],"output":{"name":"option"}}],[11,"size_hint","","",52,null],[11,"clone","","",53,{"inputs":[{"name":"difference"}],"output":{"name":"difference"}}],[11,"next","","",53,{"inputs":[{"name":"difference"}],"output":{"name":"option"}}],[11,"size_hint","","",53,null],[11,"clone","","",54,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"symmetricdifference"}}],[11,"next","","",54,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"option"}}],[11,"size_hint","","",54,null],[11,"clone","","",55,{"inputs":[{"name":"union"}],"output":{"name":"union"}}],[11,"next","","",55,{"inputs":[{"name":"union"}],"output":{"name":"option"}}],[11,"size_hint","","",55,null],[11,"hasher","std::collections::hash::state","",56,{"inputs":[{"name":"defaultstate"}],"output":{"name":"h"}}],[11,"clone","","",56,{"inputs":[{"name":"defaultstate"}],"output":{"name":"defaultstate"}}],[11,"default","","",56,{"inputs":[{"name":"defaultstate"}],"output":{"name":"defaultstate"}}],[11,"clone","collections::binary_heap","",57,{"inputs":[{"name":"binaryheap"}],"output":{"name":"binaryheap"}}],[11,"clone_from","","",57,null],[11,"default","","",57,{"inputs":[{"name":"binaryheap"}],"output":{"name":"binaryheap"}}],[11,"fmt","","",57,{"inputs":[{"name":"binaryheap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates an empty `BinaryHeap` as a max-heap.",57,{"inputs":[{"name":"binaryheap"}],"output":{"name":"binaryheap"}}],[11,"with_capacity","","Creates an empty `BinaryHeap` with a specific capacity.\nThis preallocates enough memory for `capacity` elements,\nso that the `BinaryHeap` does not have to be reallocated\nuntil it contains at least that many values.",57,{"inputs":[{"name":"binaryheap"},{"name":"usize"}],"output":{"name":"binaryheap"}}],[11,"iter","","Returns an iterator visiting all values in the underlying vector, in\narbitrary order.",57,{"inputs":[{"name":"binaryheap"}],"output":{"name":"iter"}}],[11,"peek","","Returns the greatest item in the binary heap, or `None` if it is empty.",57,{"inputs":[{"name":"binaryheap"}],"output":{"name":"option"}}],[11,"capacity","","Returns the number of elements the binary heap can hold without reallocating.",57,{"inputs":[{"name":"binaryheap"}],"output":{"name":"usize"}}],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `BinaryHeap`. Does nothing if the capacity is already sufficient.",57,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the\n`BinaryHeap`. The collection may reserve more space to avoid frequent reallocations.",57,null],[11,"shrink_to_fit","","Discards as much additional capacity as possible.",57,null],[11,"pop","","Removes the greatest item from the binary heap and returns it, or `None` if it\nis empty.",57,{"inputs":[{"name":"binaryheap"}],"output":{"name":"option"}}],[11,"push","","Pushes an item onto the binary heap.",57,null],[11,"push_pop","","Pushes an item onto the binary heap, then pops the greatest item off the queue in\nan optimized fashion.",57,{"inputs":[{"name":"binaryheap"},{"name":"t"}],"output":{"name":"t"}}],[11,"replace","","Pops the greatest item off the binary heap, then pushes an item onto the queue in\nan optimized fashion. The push is done regardless of whether the binary heap\nwas empty.",57,{"inputs":[{"name":"binaryheap"},{"name":"t"}],"output":{"name":"option"}}],[11,"into_vec","","Consumes the `BinaryHeap` and returns the underlying vector\nin arbitrary order.",57,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"into_sorted_vec","","Consumes the `BinaryHeap` and returns a vector in sorted\n(ascending) order.",57,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"len","","Returns the length of the binary heap.",57,{"inputs":[{"name":"binaryheap"}],"output":{"name":"usize"}}],[11,"is_empty","","Checks if the binary heap is empty.",57,{"inputs":[{"name":"binaryheap"}],"output":{"name":"bool"}}],[11,"drain","","Clears the binary heap, returning an iterator over the removed elements.",57,{"inputs":[{"name":"binaryheap"}],"output":{"name":"drain"}}],[11,"clear","","Drops all items from the binary heap.",57,null],[11,"drop","","",58,null],[11,"clone","","",59,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",59,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",59,null],[11,"next_back","","",59,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",60,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",60,null],[11,"next_back","","",60,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"next","","",61,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",61,null],[11,"next_back","","",61,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"from","","",57,{"inputs":[{"name":"binaryheap"},{"name":"vec"}],"output":{"name":"binaryheap"}}],[11,"from","collections::vec","",62,{"inputs":[{"name":"vec"},{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"from_iter","collections::binary_heap","",57,{"inputs":[{"name":"binaryheap"},{"name":"i"}],"output":{"name":"binaryheap"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe binary heap in arbitrary order. The binary heap cannot be used\nafter calling this.",57,{"inputs":[{"name":"binaryheap"}],"output":{"name":"intoiter"}}],[11,"extend","","",57,null],[11,"extend","","",57,null],[11,"clone","collections::linked_list","",63,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"clone","","",64,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"from","","",65,{"inputs":[{"name":"rawlink"},{"name":"option"}],"output":{"name":"rawlink"}}],[11,"clone","","",65,{"inputs":[{"name":"rawlink"}],"output":{"name":"rawlink"}}],[11,"default","","",66,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"new","","Creates an empty `LinkedList`.",66,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"append","","Moves all elements from `other` to the end of the list.",66,null],[11,"iter","","Provides a forward iterator.",66,{"inputs":[{"name":"linkedlist"}],"output":{"name":"iter"}}],[11,"iter_mut","","Provides a forward iterator with mutable references.",66,{"inputs":[{"name":"linkedlist"}],"output":{"name":"itermut"}}],[11,"is_empty","","Returns `true` if the `LinkedList` is empty.",66,{"inputs":[{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"len","","Returns the length of the `LinkedList`.",66,{"inputs":[{"name":"linkedlist"}],"output":{"name":"usize"}}],[11,"clear","","Removes all elements from the `LinkedList`.",66,null],[11,"front","","Provides a reference to the front element, or `None` if the list is\nempty.",66,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the list\nis empty.",66,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"back","","Provides a reference to the back element, or `None` if the list is\nempty.",66,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the list\nis empty.",66,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"push_front","","Adds an element first in the list.",66,null],[11,"pop_front","","Removes the first element and returns it, or `None` if the list is\nempty.",66,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"push_back","","Appends an element to the back of a list",66,null],[11,"pop_back","","Removes the last element from a list and returns it, or `None` if\nit is empty.",66,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"split_off","","Splits the list into two at the given index. Returns everything after the given index,\nincluding the index.",66,{"inputs":[{"name":"linkedlist"},{"name":"usize"}],"output":{"name":"linkedlist"}}],[11,"front_place","","Returns a place for insertion at the front of the list.",66,{"inputs":[{"name":"linkedlist"}],"output":{"name":"frontplace"}}],[11,"back_place","","Returns a place for insertion at the back of the list.",66,{"inputs":[{"name":"linkedlist"}],"output":{"name":"backplace"}}],[11,"drop","","",66,null],[11,"next","","",63,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",63,null],[11,"next_back","","",63,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",67,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",67,null],[11,"next_back","","",67,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"insert_next","","Inserts `elt` just after the element most recently returned by `.next()`.\nThe inserted element does not appear in the iteration.",67,null],[11,"peek_next","","Provides a reference to the next element, without changing the iterator.",67,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",64,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",64,null],[11,"next_back","","",64,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","",66,{"inputs":[{"name":"linkedlist"},{"name":"t"}],"output":{"name":"linkedlist"}}],[11,"into_iter","","Consumes the list into an iterator yielding elements by value.",66,{"inputs":[{"name":"linkedlist"}],"output":{"name":"intoiter"}}],[11,"extend","","",66,null],[11,"extend","","",66,null],[11,"eq","","",66,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"ne","","",66,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",66,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"cmp","","",66,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"ordering"}}],[11,"clone","","",66,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"fmt","","",66,{"inputs":[{"name":"linkedlist"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",66,null],[11,"make_place","","",68,{"inputs":[{"name":"frontplace"}],"output":{"name":"frontplace"}}],[11,"pointer","","",68,null],[11,"finalize","","",68,null],[11,"make_place","","",69,{"inputs":[{"name":"backplace"}],"output":{"name":"backplace"}}],[11,"pointer","","",69,null],[11,"finalize","","",69,null],[11,"clone","collections::vec_deque","",70,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"drop","","",70,null],[11,"default","","",70,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"new","","Creates an empty `VecDeque`.",70,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"with_capacity","","Creates an empty `VecDeque` with space for at least `n` elements.",70,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"get","","Retrieves an element in the `VecDeque` by index.",70,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"get_mut","","Retrieves an element in the `VecDeque` mutably by index.",70,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"swap","","Swaps elements at indices `i` and `j`.",70,null],[11,"capacity","","Returns the number of elements the `VecDeque` can hold without\nreallocating.",70,{"inputs":[{"name":"vecdeque"}],"output":{"name":"usize"}}],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `VecDeque`. Does nothing if the capacity is already sufficient.",70,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the given\n`VecDeque`. The collection may reserve more space to avoid frequent reallocations.",70,null],[11,"shrink_to_fit","","Shrinks the capacity of the `VecDeque` as much as possible.",70,null],[11,"truncate","","Shortens a `VecDeque`, dropping excess elements from the back.",70,null],[11,"iter","","Returns a front-to-back iterator.",70,{"inputs":[{"name":"vecdeque"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a front-to-back iterator that returns mutable references.",70,{"inputs":[{"name":"vecdeque"}],"output":{"name":"itermut"}}],[11,"as_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",70,null],[11,"as_mut_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",70,null],[11,"len","","Returns the number of elements in the `VecDeque`.",70,{"inputs":[{"name":"vecdeque"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the buffer contains no elements",70,{"inputs":[{"name":"vecdeque"}],"output":{"name":"bool"}}],[11,"drain","","Create a draining iterator that removes the specified range in the\n`VecDeque` and yields the removed items.",70,{"inputs":[{"name":"vecdeque"},{"name":"r"}],"output":{"name":"drain"}}],[11,"clear","","Clears the buffer, removing all values.",70,null],[11,"front","","Provides a reference to the front element, or `None` if the sequence is\nempty.",70,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the\nsequence is empty.",70,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"back","","Provides a reference to the back element, or `None` if the sequence is\nempty.",70,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the\nsequence is empty.",70,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"pop_front","","Removes the first element and returns it, or `None` if the sequence is\nempty.",70,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"push_front","","Inserts an element first in the sequence.",70,null],[11,"push_back","","Appends an element to the back of a buffer",70,null],[11,"pop_back","","Removes the last element from a buffer and returns it, or `None` if\nit is empty.",70,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"swap_remove_back","","Removes an element from anywhere in the `VecDeque` and returns it, replacing it with the\nlast element.",70,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"swap_remove_front","","Removes an element from anywhere in the `VecDeque` and returns it,\nreplacing it with the first element.",70,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"insert","","Inserts an element at `index` within the `VecDeque`. Whichever\nend is closer to the insertion point will be moved to make room,\nand all the affected elements will be moved to new positions.",70,null],[11,"remove","","Removes and returns the element at `index` from the `VecDeque`.\nWhichever end is closer to the removal point will be moved to make\nroom, and all the affected elements will be moved to new positions.\nReturns `None` if `index` is out of bounds.",70,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"split_off","","Splits the collection into two at the given index.",70,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",70,null],[11,"retain","","Retains only the elements specified by the predicate.",70,null],[11,"resize","","Modifies the `VecDeque` in-place so that `len()` is equal to new_len,\neither by removing excess elements or by appending copies of a value to the back.",70,null],[11,"clone","","",71,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",71,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",71,null],[11,"next_back","","",71,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",72,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",72,null],[11,"next_back","","",72,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",73,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"next","","",73,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",73,null],[11,"next_back","","",73,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"drop","","",74,null],[11,"next","","",74,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",74,null],[11,"next_back","","",74,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"eq","","",70,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",70,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"cmp","","",70,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"ordering"}}],[11,"hash","","",70,null],[11,"index","","",70,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"a"}}],[11,"index_mut","","",70,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"a"}}],[11,"from_iter","","",70,{"inputs":[{"name":"vecdeque"},{"name":"t"}],"output":{"name":"vecdeque"}}],[11,"into_iter","","Consumes the list into a front-to-back iterator yielding elements by\nvalue.",70,{"inputs":[{"name":"vecdeque"}],"output":{"name":"intoiter"}}],[11,"extend","","",70,null],[11,"extend","","",70,null],[11,"fmt","","",70,{"inputs":[{"name":"vecdeque"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","std::dynamic_lib","",75,null],[11,"open","","Lazily open a dynamic library. When passed None it gives a\nhandle to the calling process",75,{"inputs":[{"name":"dynamiclibrary"},{"name":"option"}],"output":{"name":"result"}}],[11,"prepend_search_path","","Prepends a path to this process&#39;s search path for dynamic libraries",75,null],[11,"create_path","","From a slice of paths, create a new vector which is suitable to be an\nenvironment variable for this platforms dylib search path.",75,null],[11,"envvar","","Returns the environment variable for this process&#39;s dynamic library\nsearch path",75,{"inputs":[{"name":"dynamiclibrary"}],"output":{"name":"str"}}],[11,"search_path","","Returns the current search path for dynamic libraries being used by this\nprocess",75,{"inputs":[{"name":"dynamiclibrary"}],"output":{"name":"vec"}}],[11,"symbol","","Accesses the value at the symbol of the dynamic library.",75,{"inputs":[{"name":"dynamiclibrary"},{"name":"str"}],"output":{"name":"result"}}],[11,"next","std::env","",76,{"inputs":[{"name":"vars"}],"output":{"name":"option"}}],[11,"size_hint","","",76,null],[11,"next","","",77,{"inputs":[{"name":"varsos"}],"output":{"name":"option"}}],[11,"size_hint","","",77,null],[11,"clone","","",78,{"inputs":[{"name":"varerror"}],"output":{"name":"varerror"}}],[11,"eq","","",78,{"inputs":[{"name":"varerror"},{"name":"varerror"}],"output":{"name":"bool"}}],[11,"ne","","",78,{"inputs":[{"name":"varerror"},{"name":"varerror"}],"output":{"name":"bool"}}],[11,"fmt","","",78,{"inputs":[{"name":"varerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",78,{"inputs":[{"name":"varerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",78,{"inputs":[{"name":"varerror"}],"output":{"name":"str"}}],[11,"next","","",79,{"inputs":[{"name":"splitpaths"}],"output":{"name":"option"}}],[11,"size_hint","","",79,null],[11,"fmt","","",80,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",80,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",80,{"inputs":[{"name":"joinpathserror"}],"output":{"name":"str"}}],[11,"next","","",81,{"inputs":[{"name":"args"}],"output":{"name":"option"}}],[11,"size_hint","","",81,null],[11,"len","","",81,{"inputs":[{"name":"args"}],"output":{"name":"usize"}}],[11,"next","","",82,{"inputs":[{"name":"argsos"}],"output":{"name":"option"}}],[11,"size_hint","","",82,null],[11,"len","","",82,{"inputs":[{"name":"argsos"}],"output":{"name":"usize"}}],[11,"clone","std::ffi::c_str","",83,{"inputs":[{"name":"cstring"}],"output":{"name":"cstring"}}],[11,"hash","","",83,null],[11,"cmp","","",83,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",83,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"option"}}],[11,"lt","","",83,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"le","","",83,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"gt","","",83,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"ge","","",83,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"eq","","",83,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"ne","","",83,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"hash","","",84,null],[11,"fmt","","",85,{"inputs":[{"name":"nulerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",85,{"inputs":[{"name":"nulerror"},{"name":"nulerror"}],"output":{"name":"bool"}}],[11,"ne","","",85,{"inputs":[{"name":"nulerror"},{"name":"nulerror"}],"output":{"name":"bool"}}],[11,"clone","","",85,{"inputs":[{"name":"nulerror"}],"output":{"name":"nulerror"}}],[11,"fmt","","",86,{"inputs":[{"name":"intostringerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",86,{"inputs":[{"name":"intostringerror"},{"name":"intostringerror"}],"output":{"name":"bool"}}],[11,"ne","","",86,{"inputs":[{"name":"intostringerror"},{"name":"intostringerror"}],"output":{"name":"bool"}}],[11,"clone","","",86,{"inputs":[{"name":"intostringerror"}],"output":{"name":"intostringerror"}}],[11,"new","","Creates a new C-compatible string from a container of bytes.",83,{"inputs":[{"name":"cstring"},{"name":"t"}],"output":{"name":"result"}}],[11,"from_vec_unchecked","","Creates a C-compatible string from a byte vector without checking for\ninterior 0 bytes.",83,{"inputs":[{"name":"cstring"},{"name":"vec"}],"output":{"name":"cstring"}}],[11,"from_raw","","Retakes ownership of a `CString` that was transferred to C.",83,null],[11,"into_raw","","Transfers ownership of the string to a C caller.",83,null],[11,"into_string","","Converts the `CString` into a `String` if it contains valid Unicode data.",83,{"inputs":[{"name":"cstring"}],"output":{"name":"result"}}],[11,"into_bytes","","Returns the underlying byte buffer.",83,{"inputs":[{"name":"cstring"}],"output":{"name":"vec"}}],[11,"into_bytes_with_nul","","Equivalent to the `into_bytes` function except that the returned vector\nincludes the trailing nul byte.",83,{"inputs":[{"name":"cstring"}],"output":{"name":"vec"}}],[11,"as_bytes","","Returns the contents of this `CString` as a slice of bytes.",83,null],[11,"as_bytes_with_nul","","Equivalent to the `as_bytes` function except that the returned slice\nincludes the trailing nul byte.",83,null],[11,"from_ptr","","Casts a raw C string to a safe C string wrapper.",84,null],[11,"as_ptr","","Returns the inner pointer to this C string.",84,null],[11,"to_bytes","","Converts this C string to a byte slice.",84,null],[11,"to_bytes_with_nul","","Converts this C string to a byte slice containing the trailing 0 byte.",84,null],[11,"to_str","","Yields a `&amp;str` slice if the `CStr` contains valid UTF-8.",84,{"inputs":[{"name":"cstr"}],"output":{"name":"result"}}],[11,"to_string_lossy","","Converts a `CStr` into a `Cow&lt;str&gt;`.",84,{"inputs":[{"name":"cstr"}],"output":{"name":"cow"}}],[11,"deref","","",83,{"inputs":[{"name":"cstring"}],"output":{"name":"cstr"}}],[11,"fmt","","",83,{"inputs":[{"name":"cstring"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","collections::vec","",62,{"inputs":[{"name":"vec"},{"name":"cstring"}],"output":{"name":"vec"}}],[11,"fmt","std::ffi::c_str","",84,{"inputs":[{"name":"cstr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"borrow","","",83,{"inputs":[{"name":"cstring"}],"output":{"name":"cstr"}}],[11,"nul_position","","Returns the position of the nul byte in the slice that was provided to\n`CString::new`.",85,{"inputs":[{"name":"nulerror"}],"output":{"name":"usize"}}],[11,"into_vec","","Consumes this error, returning the underlying vector of bytes which\ngenerated the error in the first place.",85,{"inputs":[{"name":"nulerror"}],"output":{"name":"vec"}}],[11,"description","","",85,{"inputs":[{"name":"nulerror"}],"output":{"name":"str"}}],[11,"fmt","","",85,{"inputs":[{"name":"nulerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","std::io::error","",87,{"inputs":[{"name":"error"},{"name":"nulerror"}],"output":{"name":"error"}}],[11,"into_cstring","std::ffi::c_str","Consumes this error, returning original `CString` which generated the\nerror.",86,{"inputs":[{"name":"intostringerror"}],"output":{"name":"cstring"}}],[11,"utf8_error","","Access the underlying UTF-8 error that was the cause of this error.",86,{"inputs":[{"name":"intostringerror"}],"output":{"name":"utf8error"}}],[11,"description","","",86,{"inputs":[{"name":"intostringerror"}],"output":{"name":"str"}}],[11,"cause","","",86,{"inputs":[{"name":"intostringerror"}],"output":{"name":"option"}}],[11,"fmt","","",86,{"inputs":[{"name":"intostringerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",84,{"inputs":[{"name":"cstr"},{"name":"cstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",84,{"inputs":[{"name":"cstr"},{"name":"cstr"}],"output":{"name":"option"}}],[11,"cmp","","",84,{"inputs":[{"name":"cstr"},{"name":"cstr"}],"output":{"name":"ordering"}}],[11,"to_owned","","",84,{"inputs":[{"name":"cstr"}],"output":{"name":"cstring"}}],[11,"from","","",83,{"inputs":[{"name":"cstring"},{"name":"cstr"}],"output":{"name":"cstring"}}],[11,"index","","",83,{"inputs":[{"name":"cstring"},{"name":"rangefull"}],"output":{"name":"cstr"}}],[11,"as_ref","","",84,{"inputs":[{"name":"cstr"}],"output":{"name":"cstr"}}],[11,"as_ref","","",83,{"inputs":[{"name":"cstring"}],"output":{"name":"cstr"}}],[11,"clone","std::ffi::os_str","",88,{"inputs":[{"name":"osstring"}],"output":{"name":"osstring"}}],[11,"new","","Constructs a new empty `OsString`.",88,{"inputs":[{"name":"osstring"}],"output":{"name":"osstring"}}],[11,"from_bytes","","Constructs an `OsString` from a byte sequence.",88,{"inputs":[{"name":"osstring"},{"name":"b"}],"output":{"name":"option"}}],[11,"as_os_str","","Converts to an `OsStr` slice.",88,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"into_string","","Converts the `OsString` into a `String` if it contains valid Unicode data.",88,{"inputs":[{"name":"osstring"}],"output":{"name":"result"}}],[11,"push","","Extends the string with the given `&amp;OsStr` slice.",88,null],[11,"with_capacity","","Creates a new `OsString` with the given capacity. The string will be\nable to hold exactly `capacity` bytes without reallocating. If\n`capacity` is 0, the string will not allocate.",88,{"inputs":[{"name":"osstring"},{"name":"usize"}],"output":{"name":"osstring"}}],[11,"clear","","Truncates the `OsString` to zero length.",88,null],[11,"capacity","","Returns the number of bytes this `OsString` can hold without\nreallocating.",88,{"inputs":[{"name":"osstring"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more bytes to be inserted\nin the given `OsString`. The collection may reserve more space to avoid\nfrequent reallocations.",88,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more bytes to be\ninserted in the given `OsString`. Does nothing if the capacity is\nalready sufficient.",88,null],[11,"from","","",88,{"inputs":[{"name":"osstring"},{"name":"string"}],"output":{"name":"osstring"}}],[11,"from","","",88,{"inputs":[{"name":"osstring"},{"name":"t"}],"output":{"name":"osstring"}}],[11,"index","","",88,{"inputs":[{"name":"osstring"},{"name":"rangefull"}],"output":{"name":"osstr"}}],[11,"new","","Coerces into an `OsStr` slice.",89,{"inputs":[{"name":"osstr"},{"name":"s"}],"output":{"name":"osstr"}}],[11,"to_str","","Yields a `&amp;str` slice if the `OsStr` is valid unicode.",89,{"inputs":[{"name":"osstr"}],"output":{"name":"option"}}],[11,"to_string_lossy","","Converts an `OsStr` to a `Cow&lt;str&gt;`.",89,{"inputs":[{"name":"osstr"}],"output":{"name":"cow"}}],[11,"to_os_string","","Copies the slice into an owned `OsString`.",89,{"inputs":[{"name":"osstr"}],"output":{"name":"osstring"}}],[11,"to_bytes","","Yields this `OsStr` as a byte slice.",89,{"inputs":[{"name":"osstr"}],"output":{"name":"option"}}],[11,"to_cstring","","Creates a `CString` containing this `OsStr` data.",89,{"inputs":[{"name":"osstr"}],"output":{"name":"option"}}],[11,"is_empty","","Checks whether the `OsStr` is empty.",89,{"inputs":[{"name":"osstr"}],"output":{"name":"bool"}}],[11,"len","","Returns the number of bytes in this `OsStr`.",89,{"inputs":[{"name":"osstr"}],"output":{"name":"usize"}}],[11,"deref","","",88,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"fmt","","",88,{"inputs":[{"name":"osstring"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",88,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"eq","","",88,{"inputs":[{"name":"osstring"},{"name":"str"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",88,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"option"}}],[11,"lt","","",88,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"le","","",88,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"gt","","",88,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"ge","","",88,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",88,{"inputs":[{"name":"osstring"},{"name":"str"}],"output":{"name":"option"}}],[11,"cmp","","",88,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"ordering"}}],[11,"hash","","",88,null],[11,"eq","","",89,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"eq","","",89,{"inputs":[{"name":"osstr"},{"name":"str"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",89,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"lt","","",89,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"le","","",89,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"gt","","",89,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"ge","","",89,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",89,{"inputs":[{"name":"osstr"},{"name":"str"}],"output":{"name":"option"}}],[11,"cmp","","",89,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"ordering"}}],[11,"hash","","",89,null],[11,"fmt","","",89,{"inputs":[{"name":"osstr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"borrow","","",88,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"to_owned","","",89,{"inputs":[{"name":"osstr"}],"output":{"name":"osstring"}}],[11,"as_ref","","",89,{"inputs":[{"name":"osstr"}],"output":{"name":"osstr"}}],[11,"as_ref","","",88,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"as_ref","collections::string","",90,{"inputs":[{"name":"string"}],"output":{"name":"osstr"}}],[11,"clone","std::fs","",91,{"inputs":[{"name":"metadata"}],"output":{"name":"metadata"}}],[11,"clone","","",92,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"fmt","","",93,{"inputs":[{"name":"permissions"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",93,{"inputs":[{"name":"permissions"},{"name":"permissions"}],"output":{"name":"bool"}}],[11,"ne","","",93,{"inputs":[{"name":"permissions"},{"name":"permissions"}],"output":{"name":"bool"}}],[11,"clone","","",93,{"inputs":[{"name":"permissions"}],"output":{"name":"permissions"}}],[11,"hash","","",94,null],[11,"eq","","",94,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"ne","","",94,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"clone","","",94,{"inputs":[{"name":"filetype"}],"output":{"name":"filetype"}}],[11,"open","","Attempts to open a file in read-only mode.",95,{"inputs":[{"name":"file"},{"name":"p"}],"output":{"name":"result"}}],[11,"create","","Opens a file in write-only mode.",95,{"inputs":[{"name":"file"},{"name":"p"}],"output":{"name":"result"}}],[11,"sync_all","","Attempts to sync all OS-internal metadata to disk.",95,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"sync_data","","This function is similar to `sync_all`, except that it may not\nsynchronize file metadata to the filesystem.",95,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"set_len","","Truncates or extends the underlying file, updating the size of\nthis file to become `size`.",95,{"inputs":[{"name":"file"},{"name":"u64"}],"output":{"name":"result"}}],[11,"metadata","","Queries metadata about the underlying file.",95,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying file.",95,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"fmt","","",95,{"inputs":[{"name":"file"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"read","","",95,null],[11,"read_to_end","","",95,{"inputs":[{"name":"file"},{"name":"vec"}],"output":{"name":"result"}}],[11,"write","","",95,null],[11,"flush","","",95,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"seek","","",95,{"inputs":[{"name":"file"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"new","","Creates a blank new set of options ready for configuration.",92,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"read","","Sets the option for read access.",92,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"write","","Sets the option for write access.",92,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"append","","Sets the option for the append mode.",92,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"truncate","","Sets the option for truncating a previous file.",92,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"create","","Sets the option for creating a new file.",92,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"create_new","","Sets the option to always create a new file.",92,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"open","","Opens a file at `path` with the options specified by `self`.",92,{"inputs":[{"name":"openoptions"},{"name":"p"}],"output":{"name":"result"}}],[11,"file_type","","Returns the file type for this metadata.",91,{"inputs":[{"name":"metadata"}],"output":{"name":"filetype"}}],[11,"is_dir","","Returns whether this metadata is for a directory.",91,{"inputs":[{"name":"metadata"}],"output":{"name":"bool"}}],[11,"is_file","","Returns whether this metadata is for a regular file.",91,{"inputs":[{"name":"metadata"}],"output":{"name":"bool"}}],[11,"len","","Returns the size of the file, in bytes, this metadata is for.",91,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"permissions","","Returns the permissions of the file this metadata is for.",91,{"inputs":[{"name":"metadata"}],"output":{"name":"permissions"}}],[11,"modified","","Returns the last modification time listed in this metadata.",91,{"inputs":[{"name":"metadata"}],"output":{"name":"result"}}],[11,"accessed","","Returns the last access time of this metadata.",91,{"inputs":[{"name":"metadata"}],"output":{"name":"result"}}],[11,"created","","Returns the creation time listed in the this metadata.",91,{"inputs":[{"name":"metadata"}],"output":{"name":"result"}}],[11,"readonly","","Returns whether these permissions describe a readonly file.",93,{"inputs":[{"name":"permissions"}],"output":{"name":"bool"}}],[11,"set_readonly","","Modifies the readonly flag for this set of permissions.",93,null],[11,"is_dir","","Test whether this file type represents a directory.",94,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_file","","Test whether this file type represents a regular file.",94,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_symlink","","Test whether this file type represents a symbolic link.",94,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"next","","",96,{"inputs":[{"name":"readdir"}],"output":{"name":"option"}}],[11,"path","","Returns the full path to the file that this entry represents.",97,{"inputs":[{"name":"direntry"}],"output":{"name":"pathbuf"}}],[11,"metadata","","Return the metadata for the file that this entry points at.",97,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"file_type","","Return the file type for the file that this entry points at.",97,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"file_name","","Returns the bare file name of this directory entry without any other\nleading path component.",97,{"inputs":[{"name":"direntry"}],"output":{"name":"osstring"}}],[11,"next","","",98,{"inputs":[{"name":"walkdir"}],"output":{"name":"option"}}],[11,"new","","Creates a new set of options with default mode/security settings for all\nplatforms and also non-recursive.",99,{"inputs":[{"name":"dirbuilder"}],"output":{"name":"dirbuilder"}}],[11,"recursive","","Indicate that directories create should be created recursively, creating\nall parent directories if they do not exist with the same security and\npermissions settings.",99,{"inputs":[{"name":"dirbuilder"},{"name":"bool"}],"output":{"name":"dirbuilder"}}],[11,"create","","Create the specified directory with the options configured in this\nbuilder.",99,{"inputs":[{"name":"dirbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"new","std::io::buffered","Creates a new `BufReader` with a default buffer capacity.",100,{"inputs":[{"name":"bufreader"},{"name":"r"}],"output":{"name":"bufreader"}}],[11,"with_capacity","","Creates a new `BufReader` with the specified buffer capacity.",100,{"inputs":[{"name":"bufreader"},{"name":"usize"},{"name":"r"}],"output":{"name":"bufreader"}}],[11,"get_ref","","Gets a reference to the underlying reader.",100,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"get_mut","","Gets a mutable reference to the underlying reader.",100,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"into_inner","","Unwraps this `BufReader`, returning the underlying reader.",100,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"read","","",100,null],[11,"fill_buf","","",100,{"inputs":[{"name":"bufreader"}],"output":{"name":"result"}}],[11,"consume","","",100,null],[11,"fmt","","",100,{"inputs":[{"name":"bufreader"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"seek","","Seek to an offset, in bytes, in the underlying reader.",100,{"inputs":[{"name":"bufreader"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"fmt","","",101,{"inputs":[{"name":"intoinnererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `BufWriter` with a default buffer capacity.",102,{"inputs":[{"name":"bufwriter"},{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"with_capacity","","Creates a new `BufWriter` with the specified buffer capacity.",102,{"inputs":[{"name":"bufwriter"},{"name":"usize"},{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",102,{"inputs":[{"name":"bufwriter"}],"output":{"name":"w"}}],[11,"get_mut","","Gets a mutable reference to the underlying writer.",102,{"inputs":[{"name":"bufwriter"}],"output":{"name":"w"}}],[11,"into_inner","","Unwraps this `BufWriter`, returning the underlying writer.",102,{"inputs":[{"name":"bufwriter"}],"output":{"name":"result"}}],[11,"write","","",102,null],[11,"flush","","",102,{"inputs":[{"name":"bufwriter"}],"output":{"name":"result"}}],[11,"fmt","","",102,{"inputs":[{"name":"bufwriter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"seek","","Seek to the offset, in bytes, in the underlying writer.",102,{"inputs":[{"name":"bufwriter"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"drop","","",102,null],[11,"error","","Returns the error which caused the call to `into_inner()` to fail.",101,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"error"}}],[11,"into_inner","","Returns the buffered writer instance which generated the error.",101,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"w"}}],[11,"from","std::io::error","",87,{"inputs":[{"name":"error"},{"name":"intoinnererror"}],"output":{"name":"error"}}],[11,"description","std::io::buffered","",101,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"str"}}],[11,"fmt","","",101,{"inputs":[{"name":"intoinnererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `LineWriter`.",103,{"inputs":[{"name":"linewriter"},{"name":"w"}],"output":{"name":"linewriter"}}],[11,"with_capacity","","Creates a new `LineWriter` with a specified capacity for the internal\nbuffer.",103,{"inputs":[{"name":"linewriter"},{"name":"usize"},{"name":"w"}],"output":{"name":"linewriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",103,{"inputs":[{"name":"linewriter"}],"output":{"name":"w"}}],[11,"get_mut","","Gets a mutable reference to the underlying writer.",103,{"inputs":[{"name":"linewriter"}],"output":{"name":"w"}}],[11,"into_inner","","Unwraps this `LineWriter`, returning the underlying writer.",103,{"inputs":[{"name":"linewriter"}],"output":{"name":"result"}}],[11,"write","","",103,null],[11,"flush","","",103,{"inputs":[{"name":"linewriter"}],"output":{"name":"result"}}],[11,"fmt","","",103,{"inputs":[{"name":"linewriter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","std::io::cursor","",104,{"inputs":[{"name":"cursor"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",104,{"inputs":[{"name":"cursor"}],"output":{"name":"cursor"}}],[11,"new","","Creates a new cursor wrapping the provided underlying I/O object.",104,{"inputs":[{"name":"cursor"},{"name":"t"}],"output":{"name":"cursor"}}],[11,"into_inner","","Consumes this cursor, returning the underlying value.",104,{"inputs":[{"name":"cursor"}],"output":{"name":"t"}}],[11,"get_ref","","Gets a reference to the underlying value in this cursor.",104,{"inputs":[{"name":"cursor"}],"output":{"name":"t"}}],[11,"get_mut","","Gets a mutable reference to the underlying value in this cursor.",104,{"inputs":[{"name":"cursor"}],"output":{"name":"t"}}],[11,"position","","Returns the current position of this cursor.",104,{"inputs":[{"name":"cursor"}],"output":{"name":"u64"}}],[11,"set_position","","Sets the position of this cursor.",104,null],[11,"seek","","",104,{"inputs":[{"name":"cursor"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"read","","",104,null],[11,"fill_buf","","",104,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"consume","","",104,null],[11,"write","","",104,null],[11,"flush","","",104,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"write","","",104,null],[11,"flush","","",104,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"write","","",104,null],[11,"flush","","",104,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"fmt","std::io::error","",87,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",105,{"inputs":[{"name":"custom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",106,{"inputs":[{"name":"errorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",106,{"inputs":[{"name":"errorkind"}],"output":{"name":"errorkind"}}],[11,"eq","","",106,{"inputs":[{"name":"errorkind"},{"name":"errorkind"}],"output":{"name":"bool"}}],[11,"ne","","",106,{"inputs":[{"name":"errorkind"},{"name":"errorkind"}],"output":{"name":"bool"}}],[11,"new","","Creates a new I/O error from a known kind of error as well as an\narbitrary error payload.",87,{"inputs":[{"name":"error"},{"name":"errorkind"},{"name":"e"}],"output":{"name":"error"}}],[11,"last_os_error","","Returns an error representing the last OS error which occurred.",87,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"from_raw_os_error","","Creates a new instance of an `Error` from a particular OS error code.",87,{"inputs":[{"name":"error"},{"name":"i32"}],"output":{"name":"error"}}],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",87,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"get_ref","","Returns a reference to the inner error wrapped by this error (if any).",87,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"get_mut","","Returns a mutable reference to the inner error wrapped by this error\n(if any).",87,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"into_inner","","Consumes the `Error`, returning its inner error (if any).",87,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"kind","","Returns the corresponding `ErrorKind` for this error.",87,{"inputs":[{"name":"error"}],"output":{"name":"errorkind"}}],[11,"fmt","","",107,{"inputs":[{"name":"repr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",87,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",87,{"inputs":[{"name":"error"}],"output":{"name":"str"}}],[11,"cause","","",87,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"read","alloc::boxed","",2,null],[11,"read_to_end","","",2,{"inputs":[{"name":"box"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_to_string","","",2,{"inputs":[{"name":"box"},{"name":"string"}],"output":{"name":"result"}}],[11,"read_exact","","",2,null],[11,"write","","",2,null],[11,"flush","","",2,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"write_all","","",2,null],[11,"write_fmt","","",2,{"inputs":[{"name":"box"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"seek","","",2,{"inputs":[{"name":"box"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"fill_buf","","",2,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"consume","","",2,null],[11,"read_until","","",2,{"inputs":[{"name":"box"},{"name":"u8"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_line","","",2,{"inputs":[{"name":"box"},{"name":"string"}],"output":{"name":"result"}}],[11,"write","collections::vec","",62,null],[11,"write_all","","",62,null],[11,"flush","","",62,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[11,"new","std::io::lazy","",108,null],[11,"get","","",108,{"inputs":[{"name":"lazy"}],"output":{"name":"option"}}],[11,"read","std::io::util","",109,null],[11,"fill_buf","","",109,{"inputs":[{"name":"empty"}],"output":{"name":"result"}}],[11,"consume","","",109,null],[11,"read","","",110,null],[11,"write","","",111,null],[11,"flush","","",111,{"inputs":[{"name":"sink"}],"output":{"name":"result"}}],[11,"read","std::io::stdio","",112,null],[11,"write","","",113,null],[11,"flush","","",113,{"inputs":[{"name":"stdoutraw"}],"output":{"name":"result"}}],[11,"write","","",114,null],[11,"flush","","",114,{"inputs":[{"name":"stderrraw"}],"output":{"name":"result"}}],[11,"write","","",115,null],[11,"flush","","",115,{"inputs":[{"name":"maybe"}],"output":{"name":"result"}}],[11,"read","","",115,null],[11,"lock","","Locks this handle to the standard input stream, returning a readable\nguard.",116,{"inputs":[{"name":"stdin"}],"output":{"name":"stdinlock"}}],[11,"read_line","","Locks this handle and reads a line of input into the specified buffer.",116,{"inputs":[{"name":"stdin"},{"name":"string"}],"output":{"name":"result"}}],[11,"read","","",116,null],[11,"read_to_end","","",116,{"inputs":[{"name":"stdin"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_to_string","","",116,{"inputs":[{"name":"stdin"},{"name":"string"}],"output":{"name":"result"}}],[11,"read_exact","","",116,null],[11,"read","","",117,null],[11,"read_to_end","","",117,{"inputs":[{"name":"stdinlock"},{"name":"vec"}],"output":{"name":"result"}}],[11,"fill_buf","","",117,{"inputs":[{"name":"stdinlock"}],"output":{"name":"result"}}],[11,"consume","","",117,null],[11,"lock","","Locks this handle to the standard output stream, returning a writable\nguard.",118,{"inputs":[{"name":"stdout"}],"output":{"name":"stdoutlock"}}],[11,"write","","",118,null],[11,"flush","","",118,{"inputs":[{"name":"stdout"}],"output":{"name":"result"}}],[11,"write_all","","",118,null],[11,"write_fmt","","",118,{"inputs":[{"name":"stdout"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"write","","",119,null],[11,"flush","","",119,{"inputs":[{"name":"stdoutlock"}],"output":{"name":"result"}}],[11,"lock","","Locks this handle to the standard error stream, returning a writable\nguard.",120,{"inputs":[{"name":"stderr"}],"output":{"name":"stderrlock"}}],[11,"write","","",120,null],[11,"flush","","",120,{"inputs":[{"name":"stderr"}],"output":{"name":"result"}}],[11,"write_all","","",120,null],[11,"write_fmt","","",120,{"inputs":[{"name":"stderr"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"write","","",121,null],[11,"flush","","",121,{"inputs":[{"name":"stderrlock"}],"output":{"name":"result"}}],[11,"fmt","std::io","",122,{"inputs":[{"name":"seekfrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",122,{"inputs":[{"name":"seekfrom"}],"output":{"name":"seekfrom"}}],[11,"eq","","",122,{"inputs":[{"name":"seekfrom"},{"name":"seekfrom"}],"output":{"name":"bool"}}],[11,"ne","","",122,{"inputs":[{"name":"seekfrom"},{"name":"seekfrom"}],"output":{"name":"bool"}}],[11,"write","","",123,null],[11,"flush","","",123,{"inputs":[{"name":"broadcast"}],"output":{"name":"result"}}],[11,"read","","",124,null],[11,"limit","","Returns the number of bytes that can be read before this instance will\nreturn EOF.",125,{"inputs":[{"name":"take"}],"output":{"name":"u64"}}],[11,"read","","",125,null],[11,"fill_buf","","",125,{"inputs":[{"name":"take"}],"output":{"name":"result"}}],[11,"consume","","",125,null],[11,"read","","",126,null],[11,"next","","",127,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"fmt","","",128,{"inputs":[{"name":"charserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",129,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"description","","",128,{"inputs":[{"name":"charserror"}],"output":{"name":"str"}}],[11,"cause","","",128,{"inputs":[{"name":"charserror"}],"output":{"name":"option"}}],[11,"fmt","","",128,{"inputs":[{"name":"charserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",130,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"next","","",131,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"cmp","std::net::ip","",132,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",132,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"option"}}],[11,"lt","","",132,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"le","","",132,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"gt","","",132,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"ge","","",132,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"hash","","",132,null],[11,"fmt","","",132,{"inputs":[{"name":"ipaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",132,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"ne","","",132,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"clone","","",132,{"inputs":[{"name":"ipaddr"}],"output":{"name":"ipaddr"}}],[11,"fmt","","",133,{"inputs":[{"name":"ipv6multicastscope"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",133,null],[11,"clone","","",133,{"inputs":[{"name":"ipv6multicastscope"}],"output":{"name":"ipv6multicastscope"}}],[11,"eq","","",133,{"inputs":[{"name":"ipv6multicastscope"},{"name":"ipv6multicastscope"}],"output":{"name":"bool"}}],[11,"ne","","",133,{"inputs":[{"name":"ipv6multicastscope"},{"name":"ipv6multicastscope"}],"output":{"name":"bool"}}],[11,"new","","Creates a new IPv4 address from four eight-bit octets.",134,{"inputs":[{"name":"ipv4addr"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"ipv4addr"}}],[11,"octets","","Returns the four eight-bit integers that make up this address.",134,null],[11,"is_unspecified","","Returns true for the special &#39;unspecified&#39; address 0.0.0.0.",134,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_loopback","","Returns true if this is a loopback address (127.0.0.0/8).",134,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_private","","Returns true if this is a private address.",134,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_link_local","","Returns true if the address is link-local (169.254.0.0/16).",134,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_global","","Returns true if the address appears to be globally routable.",134,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_multicast","","Returns true if this is a multicast address.",134,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_broadcast","","Returns true if this is a broadcast address.",134,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_documentation","","Returns true if this address is in a range designated for documentation.",134,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"to_ipv6_compatible","","Converts this address to an IPv4-compatible IPv6 address.",134,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv6addr"}}],[11,"to_ipv6_mapped","","Converts this address to an IPv4-mapped IPv6 address.",134,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv6addr"}}],[11,"fmt","","",132,{"inputs":[{"name":"ipaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",134,{"inputs":[{"name":"ipv4addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",134,{"inputs":[{"name":"ipv4addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",134,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv4addr"}}],[11,"eq","","",134,{"inputs":[{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"hash","","",134,null],[11,"partial_cmp","","",134,{"inputs":[{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"option"}}],[11,"cmp","","",134,{"inputs":[{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"ordering"}}],[11,"from","","",134,{"inputs":[{"name":"ipv4addr"},{"name":"u32"}],"output":{"name":"ipv4addr"}}],[11,"new","","Creates a new IPv6 address from eight 16-bit segments.",135,{"inputs":[{"name":"ipv6addr"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"ipv6addr"}}],[11,"segments","","Returns the eight 16-bit segments that make up this address.",135,null],[11,"is_unspecified","","Returns true for the special &#39;unspecified&#39; address ::.",135,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_loopback","","Returns true if this is a loopback address (::1).",135,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_global","","Returns true if the address appears to be globally routable.",135,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unique_local","","Returns true if this is a unique local address (IPv6).",135,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unicast_link_local","","Returns true if the address is unicast and link-local (fe80::/10).",135,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unicast_site_local","","Returns true if this is a deprecated unicast site-local address (IPv6\nfec0::/10).",135,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unicast_global","","Returns true if the address is a globally routable unicast address.",135,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"multicast_scope","","Returns the address&#39;s multicast scope if the address is multicast.",135,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"option"}}],[11,"is_multicast","","Returns true if this is a multicast address.",135,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"to_ipv4","","Converts this address to an IPv4 address. Returns None if this address is\nneither IPv4-compatible or IPv4-mapped.",135,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"option"}}],[11,"fmt","","",135,{"inputs":[{"name":"ipv6addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",135,{"inputs":[{"name":"ipv6addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",135,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"ipv6addr"}}],[11,"eq","","",135,{"inputs":[{"name":"ipv6addr"},{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"hash","","",135,null],[11,"partial_cmp","","",135,{"inputs":[{"name":"ipv6addr"},{"name":"ipv6addr"}],"output":{"name":"option"}}],[11,"cmp","","",135,{"inputs":[{"name":"ipv6addr"},{"name":"ipv6addr"}],"output":{"name":"ordering"}}],[11,"fmt","std::net::addr","",136,{"inputs":[{"name":"socketaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",136,null],[11,"eq","","",136,{"inputs":[{"name":"socketaddr"},{"name":"socketaddr"}],"output":{"name":"bool"}}],[11,"ne","","",136,{"inputs":[{"name":"socketaddr"},{"name":"socketaddr"}],"output":{"name":"bool"}}],[11,"clone","","",136,{"inputs":[{"name":"socketaddr"}],"output":{"name":"socketaddr"}}],[11,"new","","Creates a new socket address from the (ip, port) pair.",136,{"inputs":[{"name":"socketaddr"},{"name":"ipaddr"},{"name":"u16"}],"output":{"name":"socketaddr"}}],[11,"ip","","Returns the IP address associated with this socket address.",136,{"inputs":[{"name":"socketaddr"}],"output":{"name":"ipaddr"}}],[11,"set_ip","","Change the IP address associated with this socket address.",136,null],[11,"port","","Returns the port number associated with this socket address.",136,{"inputs":[{"name":"socketaddr"}],"output":{"name":"u16"}}],[11,"set_port","","Change the port number associated with this socket address.",136,null],[11,"new","","Creates a new socket address from the (ip, port) pair.",137,{"inputs":[{"name":"socketaddrv4"},{"name":"ipv4addr"},{"name":"u16"}],"output":{"name":"socketaddrv4"}}],[11,"ip","","Returns the IP address associated with this socket address.",137,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"ipv4addr"}}],[11,"set_ip","","Change the IP address associated with this socket address.",137,null],[11,"port","","Returns the port number associated with this socket address.",137,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"u16"}}],[11,"set_port","","Change the port number associated with this socket address.",137,null],[11,"new","","Creates a new socket address from the ip/port/flowinfo/scope_id\ncomponents.",138,{"inputs":[{"name":"socketaddrv6"},{"name":"ipv6addr"},{"name":"u16"},{"name":"u32"},{"name":"u32"}],"output":{"name":"socketaddrv6"}}],[11,"ip","","Returns the IP address associated with this socket address.",138,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"ipv6addr"}}],[11,"set_ip","","Change the IP address associated with this socket address.",138,null],[11,"port","","Returns the port number associated with this socket address.",138,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"u16"}}],[11,"set_port","","Change the port number associated with this socket address.",138,null],[11,"flowinfo","","Returns the flow information associated with this address,\ncorresponding to the `sin6_flowinfo` field in C.",138,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"u32"}}],[11,"set_flowinfo","","Change the flow information associated with this socket address.",138,null],[11,"scope_id","","Returns the scope ID associated with this address,\ncorresponding to the `sin6_scope_id` field in C.",138,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"u32"}}],[11,"set_scope_id","","Change the scope ID associated with this socket address.",138,null],[11,"fmt","","",136,{"inputs":[{"name":"socketaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",137,{"inputs":[{"name":"socketaddrv4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",137,{"inputs":[{"name":"socketaddrv4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",138,{"inputs":[{"name":"socketaddrv6"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",138,{"inputs":[{"name":"socketaddrv6"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",137,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"socketaddrv4"}}],[11,"clone","","",138,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"socketaddrv6"}}],[11,"eq","","",137,{"inputs":[{"name":"socketaddrv4"},{"name":"socketaddrv4"}],"output":{"name":"bool"}}],[11,"eq","","",138,{"inputs":[{"name":"socketaddrv6"},{"name":"socketaddrv6"}],"output":{"name":"bool"}}],[11,"hash","","",137,null],[11,"hash","","",138,null],[11,"to_socket_addrs","","",136,{"inputs":[{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"to_socket_addrs","","",137,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"result"}}],[11,"to_socket_addrs","","",138,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"result"}}],[11,"connect","std::net::tcp","Opens a TCP connection to a remote host.",139,{"inputs":[{"name":"tcpstream"},{"name":"a"}],"output":{"name":"result"}}],[11,"peer_addr","","Returns the socket address of the remote peer of this TCP connection.",139,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the socket address of the local half of this TCP connection.",139,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",139,{"inputs":[{"name":"tcpstream"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",139,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",139,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",139,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","Returns the read timeout of this socket.",139,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"write_timeout","","Returns the write timeout of this socket.",139,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"read","","",139,null],[11,"read_to_end","","",139,{"inputs":[{"name":"tcpstream"},{"name":"vec"}],"output":{"name":"result"}}],[11,"write","","",139,null],[11,"flush","","",139,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"fmt","","",139,{"inputs":[{"name":"tcpstream"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","Creates a new `TcpListener` which will be bound to the specified\naddress.",140,{"inputs":[{"name":"tcplistener"},{"name":"a"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the local socket address of this listener.",140,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",140,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"accept","","Accept a new incoming connection from this listener.",140,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"incoming","","Returns an iterator over the connections being received on this\nlistener.",140,{"inputs":[{"name":"tcplistener"}],"output":{"name":"incoming"}}],[11,"next","","",141,{"inputs":[{"name":"incoming"}],"output":{"name":"option"}}],[11,"fmt","","",140,{"inputs":[{"name":"tcplistener"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","std::net::udp","Creates a UDP socket from the given address.",142,{"inputs":[{"name":"udpsocket"},{"name":"a"}],"output":{"name":"result"}}],[11,"recv_from","","Receives data from the socket. On success, returns the number of bytes\nread and the address from whence the data came.",142,null],[11,"send_to","","Sends data on the socket to the given address. On success, returns the\nnumber of bytes written.",142,null],[11,"local_addr","","Returns the socket address that this socket was created from.",142,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",142,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",142,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",142,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","Returns the read timeout of this socket.",142,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"write_timeout","","Returns the write timeout of this socket.",142,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"fmt","","",142,{"inputs":[{"name":"udpsocket"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","std::net::ip","",132,{"inputs":[{"name":"ipaddr"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",134,{"inputs":[{"name":"ipv4addr"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",135,{"inputs":[{"name":"ipv6addr"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","std::net::addr","",137,{"inputs":[{"name":"socketaddrv4"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",138,{"inputs":[{"name":"socketaddrv6"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",136,{"inputs":[{"name":"socketaddr"},{"name":"str"}],"output":{"name":"result"}}],[11,"eq","std::net::parser","",143,{"inputs":[{"name":"addrparseerror"},{"name":"addrparseerror"}],"output":{"name":"bool"}}],[11,"ne","","",143,{"inputs":[{"name":"addrparseerror"},{"name":"addrparseerror"}],"output":{"name":"bool"}}],[11,"clone","","",143,{"inputs":[{"name":"addrparseerror"}],"output":{"name":"addrparseerror"}}],[11,"fmt","","",143,{"inputs":[{"name":"addrparseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",143,{"inputs":[{"name":"addrparseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",143,{"inputs":[{"name":"addrparseerror"}],"output":{"name":"str"}}],[11,"fmt","std::net","",144,{"inputs":[{"name":"shutdown"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",144,{"inputs":[{"name":"shutdown"},{"name":"shutdown"}],"output":{"name":"bool"}}],[11,"ne","","",144,{"inputs":[{"name":"shutdown"},{"name":"shutdown"}],"output":{"name":"bool"}}],[11,"clone","","",144,{"inputs":[{"name":"shutdown"}],"output":{"name":"shutdown"}}],[11,"next","","",145,{"inputs":[{"name":"lookuphost"}],"output":{"name":"option"}}],[11,"clone","std::os::linux::raw::arch","",146,{"inputs":[{"name":"stat"}],"output":{"name":"stat"}}],[11,"as_raw_stat","std::fs","",91,{"inputs":[{"name":"metadata"}],"output":{"name":"stat"}}],[11,"st_dev","","",91,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"st_ino","","",91,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"st_mode","","",91,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"st_nlink","","",91,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"st_uid","","",91,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"st_gid","","",91,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"st_rdev","","",91,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"st_size","","",91,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"st_atime","","",91,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"st_atime_nsec","","",91,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"st_mtime","","",91,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"st_mtime_nsec","","",91,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"st_ctime","","",91,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"st_ctime_nsec","","",91,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"st_blksize","","",91,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"st_blocks","","",91,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"as_raw_fd","","",95,{"inputs":[{"name":"file"}],"output":{"name":"i32"}}],[11,"from_raw_fd","","",95,{"inputs":[{"name":"file"},{"name":"i32"}],"output":{"name":"file"}}],[11,"into_raw_fd","","",95,{"inputs":[{"name":"file"}],"output":{"name":"i32"}}],[11,"as_raw_fd","std::net::tcp","",139,{"inputs":[{"name":"tcpstream"}],"output":{"name":"i32"}}],[11,"as_raw_fd","","",140,{"inputs":[{"name":"tcplistener"}],"output":{"name":"i32"}}],[11,"as_raw_fd","std::net::udp","",142,{"inputs":[{"name":"udpsocket"}],"output":{"name":"i32"}}],[11,"from_raw_fd","std::net::tcp","",139,{"inputs":[{"name":"tcpstream"},{"name":"i32"}],"output":{"name":"tcpstream"}}],[11,"from_raw_fd","","",140,{"inputs":[{"name":"tcplistener"},{"name":"i32"}],"output":{"name":"tcplistener"}}],[11,"from_raw_fd","std::net::udp","",142,{"inputs":[{"name":"udpsocket"},{"name":"i32"}],"output":{"name":"udpsocket"}}],[11,"into_raw_fd","std::net::tcp","",139,{"inputs":[{"name":"tcpstream"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",140,{"inputs":[{"name":"tcplistener"}],"output":{"name":"i32"}}],[11,"into_raw_fd","std::net::udp","",142,{"inputs":[{"name":"udpsocket"}],"output":{"name":"i32"}}],[11,"from_vec","std::ffi::os_str","",88,{"inputs":[{"name":"osstring"},{"name":"vec"}],"output":{"name":"osstring"}}],[11,"into_vec","","",88,{"inputs":[{"name":"osstring"}],"output":{"name":"vec"}}],[11,"from_bytes","","",89,null],[11,"as_bytes","","",89,null],[11,"mode","std::fs","",93,{"inputs":[{"name":"permissions"}],"output":{"name":"u32"}}],[11,"set_mode","","",93,null],[11,"from_mode","","",93,{"inputs":[{"name":"permissions"},{"name":"u32"}],"output":{"name":"permissions"}}],[11,"mode","","",92,{"inputs":[{"name":"openoptions"},{"name":"u32"}],"output":{"name":"openoptions"}}],[11,"custom_flags","","",92,{"inputs":[{"name":"openoptions"},{"name":"i32"}],"output":{"name":"openoptions"}}],[11,"dev","","",91,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"ino","","",91,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"mode","","",91,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"nlink","","",91,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"uid","","",91,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"gid","","",91,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"rdev","","",91,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"size","","",91,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"atime","","",91,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"atime_nsec","","",91,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"mtime","","",91,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"mtime_nsec","","",91,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"ctime","","",91,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"ctime_nsec","","",91,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"blksize","","",91,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"blocks","","",91,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"is_block_device","","",94,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_char_device","","",94,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_fifo","","",94,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_socket","","",94,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"ino","","",97,{"inputs":[{"name":"direntry"}],"output":{"name":"u64"}}],[11,"mode","","",99,{"inputs":[{"name":"dirbuilder"},{"name":"u32"}],"output":{"name":"dirbuilder"}}],[11,"uid","std::process","",147,{"inputs":[{"name":"command"},{"name":"u32"}],"output":{"name":"command"}}],[11,"gid","","",147,{"inputs":[{"name":"command"},{"name":"u32"}],"output":{"name":"command"}}],[11,"session_leader","","",147,{"inputs":[{"name":"command"},{"name":"bool"}],"output":{"name":"command"}}],[11,"before_exec","","",147,{"inputs":[{"name":"command"},{"name":"f"}],"output":{"name":"command"}}],[11,"exec","","",147,{"inputs":[{"name":"command"}],"output":{"name":"error"}}],[11,"signal","","",148,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"from_raw_fd","","",149,{"inputs":[{"name":"stdio"},{"name":"i32"}],"output":{"name":"stdio"}}],[11,"as_raw_fd","","",150,{"inputs":[{"name":"childstdin"}],"output":{"name":"i32"}}],[11,"as_raw_fd","","",151,{"inputs":[{"name":"childstdout"}],"output":{"name":"i32"}}],[11,"as_raw_fd","","",152,{"inputs":[{"name":"childstderr"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",150,{"inputs":[{"name":"childstdin"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",151,{"inputs":[{"name":"childstdout"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",152,{"inputs":[{"name":"childstderr"}],"output":{"name":"i32"}}],[11,"as_pthread_t","std::thread","",21,{"inputs":[{"name":"joinhandle"}],"output":{"name":"u64"}}],[11,"into_pthread_t","","",21,{"inputs":[{"name":"joinhandle"}],"output":{"name":"u64"}}],[11,"new","std::panic","Creates a new `AssertRecoverSafe` wrapper around the provided type.",153,{"inputs":[{"name":"assertrecoversafe"},{"name":"t"}],"output":{"name":"assertrecoversafe"}}],[11,"into_inner","","Consumes the `AssertRecoverSafe`, returning the wrapped value.",153,{"inputs":[{"name":"assertrecoversafe"}],"output":{"name":"t"}}],[11,"deref","","",153,{"inputs":[{"name":"assertrecoversafe"}],"output":{"name":"t"}}],[11,"deref_mut","","",153,{"inputs":[{"name":"assertrecoversafe"}],"output":{"name":"t"}}],[11,"eq","std::path","",154,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"ne","","",154,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"cmp","","",154,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",154,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"option"}}],[11,"lt","","",154,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"le","","",154,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"gt","","",154,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"ge","","",154,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"hash","","",154,null],[11,"fmt","","",154,{"inputs":[{"name":"prefix"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",154,{"inputs":[{"name":"prefix"}],"output":{"name":"prefix"}}],[11,"is_verbatim","","Determines if the prefix is verbatim, i.e. begins with `\\\\?\\`.",154,{"inputs":[{"name":"prefix"}],"output":{"name":"bool"}}],[11,"fmt","","",155,{"inputs":[{"name":"state"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",155,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"option"}}],[11,"lt","","",155,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"le","","",155,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"gt","","",155,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"ge","","",155,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"eq","","",155,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"ne","","",155,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"clone","","",155,{"inputs":[{"name":"state"}],"output":{"name":"state"}}],[11,"fmt","","",156,{"inputs":[{"name":"prefixcomponent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",156,{"inputs":[{"name":"prefixcomponent"}],"output":{"name":"prefixcomponent"}}],[11,"kind","","The parsed prefix data.",156,{"inputs":[{"name":"prefixcomponent"}],"output":{"name":"prefix"}}],[11,"as_os_str","","The raw `OsStr` slice for this prefix.",156,{"inputs":[{"name":"prefixcomponent"}],"output":{"name":"osstr"}}],[11,"eq","","",156,{"inputs":[{"name":"prefixcomponent"},{"name":"prefixcomponent"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",156,{"inputs":[{"name":"prefixcomponent"},{"name":"prefixcomponent"}],"output":{"name":"option"}}],[11,"cmp","","",156,{"inputs":[{"name":"prefixcomponent"},{"name":"prefixcomponent"}],"output":{"name":"ordering"}}],[11,"hash","","",156,null],[11,"fmt","","",157,{"inputs":[{"name":"component"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",157,null],[11,"cmp","","",157,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",157,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"option"}}],[11,"lt","","",157,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"le","","",157,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"gt","","",157,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"ge","","",157,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"eq","","",157,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"ne","","",157,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"clone","","",157,{"inputs":[{"name":"component"}],"output":{"name":"component"}}],[11,"as_os_str","","Extracts the underlying `OsStr` slice",157,{"inputs":[{"name":"component"}],"output":{"name":"osstr"}}],[11,"as_ref","","",157,{"inputs":[{"name":"component"}],"output":{"name":"osstr"}}],[11,"clone","","",158,{"inputs":[{"name":"components"}],"output":{"name":"components"}}],[11,"clone","","",159,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",158,{"inputs":[{"name":"components"}],"output":{"name":"path"}}],[11,"peek","","Examine the next component without consuming it.",158,{"inputs":[{"name":"components"}],"output":{"name":"option"}}],[11,"as_ref","","",158,{"inputs":[{"name":"components"}],"output":{"name":"path"}}],[11,"as_ref","","",158,{"inputs":[{"name":"components"}],"output":{"name":"osstr"}}],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",159,{"inputs":[{"name":"iter"}],"output":{"name":"path"}}],[11,"as_ref","","",159,{"inputs":[{"name":"iter"}],"output":{"name":"path"}}],[11,"as_ref","","",159,{"inputs":[{"name":"iter"}],"output":{"name":"osstr"}}],[11,"next","","",159,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next_back","","",159,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",158,{"inputs":[{"name":"components"}],"output":{"name":"option"}}],[11,"next_back","","",158,{"inputs":[{"name":"components"}],"output":{"name":"option"}}],[11,"eq","","",158,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",158,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"option"}}],[11,"cmp","","",158,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"ordering"}}],[11,"clone","","",160,{"inputs":[{"name":"pathbuf"}],"output":{"name":"pathbuf"}}],[11,"new","","Allocates an empty `PathBuf`.",160,{"inputs":[{"name":"pathbuf"}],"output":{"name":"pathbuf"}}],[11,"as_path","","Coerces to a `Path` slice.",160,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"push","","Extends `self` with `path`.",160,null],[11,"pop","","Truncate `self` to `self.parent()`.",160,{"inputs":[{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"set_file_name","","Updates `self.file_name()` to `file_name`.",160,null],[11,"set_extension","","Updates `self.extension()` to `extension`.",160,{"inputs":[{"name":"pathbuf"},{"name":"s"}],"output":{"name":"bool"}}],[11,"into_os_string","","Consumes the `PathBuf`, yielding its internal `OsString` storage.",160,{"inputs":[{"name":"pathbuf"}],"output":{"name":"osstring"}}],[11,"from","","",160,{"inputs":[{"name":"pathbuf"},{"name":"t"}],"output":{"name":"pathbuf"}}],[11,"from","","",160,{"inputs":[{"name":"pathbuf"},{"name":"osstring"}],"output":{"name":"pathbuf"}}],[11,"from","","",160,{"inputs":[{"name":"pathbuf"},{"name":"string"}],"output":{"name":"pathbuf"}}],[11,"from_iter","","",160,{"inputs":[{"name":"pathbuf"},{"name":"i"}],"output":{"name":"pathbuf"}}],[11,"extend","","",160,null],[11,"fmt","","",160,{"inputs":[{"name":"pathbuf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Directly wrap a string slice as a `Path` slice.",161,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"path"}}],[11,"as_os_str","","Yields the underlying `OsStr` slice.",161,{"inputs":[{"name":"path"}],"output":{"name":"osstr"}}],[11,"to_str","","Yields a `&amp;str` slice if the `Path` is valid unicode.",161,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"to_string_lossy","","Converts a `Path` to a `Cow&lt;str&gt;`.",161,{"inputs":[{"name":"path"}],"output":{"name":"cow"}}],[11,"to_path_buf","","Converts a `Path` to an owned `PathBuf`.",161,{"inputs":[{"name":"path"}],"output":{"name":"pathbuf"}}],[11,"is_absolute","","A path is *absolute* if it is independent of the current directory.",161,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_relative","","A path is *relative* if it is not absolute.",161,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"prefix","","Returns the *prefix* of a path, if any.",161,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"has_root","","A path has a root if the body of the path begins with the directory separator.",161,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"parent","","The path without its final component, if any.",161,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"file_name","","The final component of the path, if it is a normal file.",161,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"relative_from","","Returns a path that, when joined onto `base`, yields `self`.",161,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"option"}}],[11,"strip_prefix","","Returns a path that, when joined onto `base`, yields `self`.",161,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"result"}}],[11,"starts_with","","Determines whether `base` is a prefix of `self`.",161,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"bool"}}],[11,"ends_with","","Determines whether `child` is a suffix of `self`.",161,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"bool"}}],[11,"file_stem","","Extracts the stem (non-extension) portion of `self.file_name()`.",161,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"extension","","Extracts the extension of `self.file_name()`, if possible.",161,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"join","","Creates an owned `PathBuf` with `path` adjoined to `self`.",161,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"pathbuf"}}],[11,"with_file_name","","Creates an owned `PathBuf` like `self` but with the given file name.",161,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"pathbuf"}}],[11,"with_extension","","Creates an owned `PathBuf` like `self` but with the given extension.",161,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"pathbuf"}}],[11,"components","","Produce an iterator over the components of the path.",161,{"inputs":[{"name":"path"}],"output":{"name":"components"}}],[11,"iter","","Produce an iterator over the path&#39;s components viewed as `OsStr` slices.",161,{"inputs":[{"name":"path"}],"output":{"name":"iter"}}],[11,"display","","Returns an object that implements `Display` for safely printing paths\nthat may contain non-Unicode data.",161,{"inputs":[{"name":"path"}],"output":{"name":"display"}}],[11,"metadata","","Query the file system to get information about a file, directory, etc.",161,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"symlink_metadata","","Query the metadata about a file without following symlinks.",161,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"canonicalize","","Returns the canonical form of the path with all intermediate components\nnormalized and symbolic links resolved.",161,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"read_link","","Reads a symbolic link, returning the file that the link points to.",161,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"read_dir","","Returns an iterator over the entries within a directory.",161,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"exists","","Returns whether the path points at an existing entity.",161,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_file","","Returns whether the path is pointing at a regular file.",161,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_dir","","Returns whether the path is pointing at a directory.",161,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"deref","","",160,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"borrow","","",160,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"into_cow","","",160,{"inputs":[{"name":"pathbuf"}],"output":{"name":"cow"}}],[11,"from","collections::borrow","",162,{"inputs":[{"name":"cow"},{"name":"path"}],"output":{"name":"cow"}}],[11,"from","","",162,{"inputs":[{"name":"cow"},{"name":"pathbuf"}],"output":{"name":"cow"}}],[11,"to_owned","std::path","",161,{"inputs":[{"name":"path"}],"output":{"name":"pathbuf"}}],[11,"eq","","",160,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"hash","","",160,null],[11,"partial_cmp","","",160,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"option"}}],[11,"cmp","","",160,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"ordering"}}],[11,"as_ref","","",160,{"inputs":[{"name":"pathbuf"}],"output":{"name":"osstr"}}],[11,"into","","",160,{"inputs":[{"name":"pathbuf"}],"output":{"name":"osstring"}}],[11,"eq","","",163,{"inputs":[{"name":"stripprefixerror"},{"name":"stripprefixerror"}],"output":{"name":"bool"}}],[11,"ne","","",163,{"inputs":[{"name":"stripprefixerror"},{"name":"stripprefixerror"}],"output":{"name":"bool"}}],[11,"clone","","",163,{"inputs":[{"name":"stripprefixerror"}],"output":{"name":"stripprefixerror"}}],[11,"fmt","","",163,{"inputs":[{"name":"stripprefixerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",161,{"inputs":[{"name":"path"}],"output":{"name":"osstr"}}],[11,"fmt","","",161,{"inputs":[{"name":"path"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",164,{"inputs":[{"name":"display"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",164,{"inputs":[{"name":"display"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",161,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"bool"}}],[11,"hash","","",161,null],[11,"partial_cmp","","",161,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"option"}}],[11,"cmp","","",161,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"ordering"}}],[11,"as_ref","","",161,{"inputs":[{"name":"path"}],"output":{"name":"path"}}],[11,"as_ref","std::ffi::os_str","",89,{"inputs":[{"name":"osstr"}],"output":{"name":"path"}}],[11,"as_ref","","",88,{"inputs":[{"name":"osstring"}],"output":{"name":"path"}}],[11,"as_ref","collections::string","",90,{"inputs":[{"name":"string"}],"output":{"name":"path"}}],[11,"as_ref","std::path","",160,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"eq","","",160,{"inputs":[{"name":"pathbuf"},{"name":"path"}],"output":{"name":"bool"}}],[11,"eq","","",161,{"inputs":[{"name":"path"},{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"eq","","",160,{"inputs":[{"name":"pathbuf"},{"name":"path"}],"output":{"name":"bool"}}],[11,"eq","collections::borrow","",162,{"inputs":[{"name":"cow"},{"name":"path"}],"output":{"name":"bool"}}],[11,"eq","std::path","",161,{"inputs":[{"name":"path"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"eq","collections::borrow","",162,{"inputs":[{"name":"cow"},{"name":"path"}],"output":{"name":"bool"}}],[11,"eq","","",162,{"inputs":[{"name":"cow"},{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"eq","std::path","",160,{"inputs":[{"name":"pathbuf"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"fmt","","",163,{"inputs":[{"name":"stripprefixerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",163,{"inputs":[{"name":"stripprefixerror"}],"output":{"name":"str"}}],[11,"write","std::process","",150,null],[11,"flush","","",150,{"inputs":[{"name":"childstdin"}],"output":{"name":"result"}}],[11,"read","","",151,null],[11,"read","","",152,null],[11,"new","","Constructs a new `Command` for launching the program at\npath `program`, with the following default configuration:",147,{"inputs":[{"name":"command"},{"name":"s"}],"output":{"name":"command"}}],[11,"arg","","Add an argument to pass to the program.",147,{"inputs":[{"name":"command"},{"name":"s"}],"output":{"name":"command"}}],[11,"args","","Add multiple arguments to pass to the program.",147,null],[11,"env","","Inserts or updates an environment variable mapping.",147,{"inputs":[{"name":"command"},{"name":"k"},{"name":"v"}],"output":{"name":"command"}}],[11,"env_remove","","Removes an environment variable mapping.",147,{"inputs":[{"name":"command"},{"name":"k"}],"output":{"name":"command"}}],[11,"env_clear","","Clears the entire environment map for the child process.",147,{"inputs":[{"name":"command"}],"output":{"name":"command"}}],[11,"current_dir","","Sets the working directory for the child process.",147,{"inputs":[{"name":"command"},{"name":"p"}],"output":{"name":"command"}}],[11,"stdin","","Configuration for the child process&#39;s stdin handle (file descriptor 0).",147,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"command"}}],[11,"stdout","","Configuration for the child process&#39;s stdout handle (file descriptor 1).",147,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"command"}}],[11,"stderr","","Configuration for the child process&#39;s stderr handle (file descriptor 2).",147,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"command"}}],[11,"spawn","","Executes the command as a child process, returning a handle to it.",147,{"inputs":[{"name":"command"}],"output":{"name":"result"}}],[11,"output","","Executes the command as a child process, waiting for it to finish and\ncollecting all of its output.",147,{"inputs":[{"name":"command"}],"output":{"name":"result"}}],[11,"status","","Executes a command as a child process, waiting for it to finish and\ncollecting its exit status.",147,{"inputs":[{"name":"command"}],"output":{"name":"result"}}],[11,"fmt","","Format the program and arguments of a Command for display. Any\nnon-utf8 data is lossily converted using the utf8 replacement\ncharacter.",147,{"inputs":[{"name":"command"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",165,{"inputs":[{"name":"output"}],"output":{"name":"output"}}],[11,"eq","","",165,{"inputs":[{"name":"output"},{"name":"output"}],"output":{"name":"bool"}}],[11,"ne","","",165,{"inputs":[{"name":"output"},{"name":"output"}],"output":{"name":"bool"}}],[11,"fmt","","",165,{"inputs":[{"name":"output"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"piped","","A new pipe should be arranged to connect the parent and child processes.",149,{"inputs":[{"name":"stdio"}],"output":{"name":"stdio"}}],[11,"inherit","","The child inherits from the corresponding parent descriptor.",149,{"inputs":[{"name":"stdio"}],"output":{"name":"stdio"}}],[11,"null","","This stream will be ignored. This is the equivalent of attaching the\nstream to `/dev/null`",149,{"inputs":[{"name":"stdio"}],"output":{"name":"stdio"}}],[11,"fmt","","",148,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",148,{"inputs":[{"name":"exitstatus"}],"output":{"name":"exitstatus"}}],[11,"eq","","",148,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"ne","","",148,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"success","","Was termination successful? Signal termination not considered a success,\nand success is defined as a zero exit status.",148,{"inputs":[{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"code","","Returns the exit code of the process, if any.",148,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"fmt","","",148,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"kill","","Forces the child to exit. This is equivalent to sending a\nSIGKILL on unix platforms.",166,{"inputs":[{"name":"child"}],"output":{"name":"result"}}],[11,"id","","Returns the OS-assigned process identifier associated with this child.",166,{"inputs":[{"name":"child"}],"output":{"name":"u32"}}],[11,"wait","","Waits for the child to exit completely, returning the status that it\nexited with. This function will continue to have the same return value\nafter it has been called at least once.",166,{"inputs":[{"name":"child"}],"output":{"name":"result"}}],[11,"wait_with_output","","Simultaneously waits for the child to exit and collect all remaining\noutput on the stdout/stderr handles, returning an `Output`\ninstance.",166,{"inputs":[{"name":"child"}],"output":{"name":"result"}}],[11,"clone","std::sync::mpsc::blocking","",167,{"inputs":[{"name":"signaltoken"}],"output":{"name":"signaltoken"}}],[11,"signal","","",167,{"inputs":[{"name":"signaltoken"}],"output":{"name":"bool"}}],[11,"cast_to_usize","","Convert to an unsafe usize value. Useful for storing in a pipe&#39;s state\nflag.",167,{"inputs":[{"name":"signaltoken"}],"output":{"name":"usize"}}],[11,"cast_from_usize","","Convert from an unsafe usize value. Useful for retrieving a pipe&#39;s state\nflag.",167,{"inputs":[{"name":"signaltoken"},{"name":"usize"}],"output":{"name":"signaltoken"}}],[11,"wait","","",168,null],[11,"new","std::sync::mpsc::oneshot","",169,{"inputs":[{"name":"packet"}],"output":{"name":"packet"}}],[11,"send","","",169,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"sent","","",169,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"recv","","",169,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",169,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"upgrade","","",169,{"inputs":[{"name":"packet"},{"name":"receiver"}],"output":{"name":"upgraderesult"}}],[11,"drop_chan","","",169,null],[11,"drop_port","","",169,null],[11,"can_recv","","",169,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"start_selection","","",169,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"selectionresult"}}],[11,"abort_selection","","",169,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"drop","","",169,null],[11,"eq","std::sync::mpsc::select","",170,{"inputs":[{"name":"startresult"},{"name":"startresult"}],"output":{"name":"bool"}}],[11,"ne","","",170,{"inputs":[{"name":"startresult"},{"name":"startresult"}],"output":{"name":"bool"}}],[11,"new","","Creates a new selection structure. This set is initially empty.",171,{"inputs":[{"name":"select"}],"output":{"name":"select"}}],[11,"handle","","Creates a new handle into this receiver set for a new receiver. Note\nthat this does *not* add the receiver to the receiver set, for that you\nmust call the `add` method on the handle itself.",171,{"inputs":[{"name":"select"},{"name":"receiver"}],"output":{"name":"handle"}}],[11,"wait","","Waits for an event on this receiver set. The returned value is *not* an\nindex, but rather an id. This id can be queried against any active\n`Handle` structures (each one has an `id` method). The handle with\nthe matching `id` will have some sort of event available on it. The\nevent could either be that data is available or the corresponding\nchannel has been closed.",171,{"inputs":[{"name":"select"}],"output":{"name":"usize"}}],[11,"id","","Retrieves the id of this handle.",172,{"inputs":[{"name":"handle"}],"output":{"name":"usize"}}],[11,"recv","","Blocks to receive a value on the underlying receiver, returning `Some` on\nsuccess or `None` if the channel disconnects. This function has the same\nsemantics as `Receiver.recv`",172,{"inputs":[{"name":"handle"}],"output":{"name":"result"}}],[11,"add","","Adds this handle to the receiver set that the handle was created from. This\nmethod can be called multiple times, but it has no effect if `add` was\ncalled previously.",172,null],[11,"remove","","Removes this handle from the `Select` set. This method is unsafe because\nit has no guarantee that the `Handle` was not moved since `add` was\ncalled.",172,null],[11,"drop","","",171,null],[11,"drop","","",172,null],[11,"next","","",173,{"inputs":[{"name":"packets"}],"output":{"name":"option"}}],[11,"fmt","","",171,{"inputs":[{"name":"select"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",172,{"inputs":[{"name":"handle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","std::sync::mpsc::shared","",174,{"inputs":[{"name":"packet"}],"output":{"name":"packet"}}],[11,"postinit_lock","","",174,{"inputs":[{"name":"packet"}],"output":{"name":"mutexguard"}}],[11,"inherit_blocker","","",174,null],[11,"send","","",174,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"recv","","",174,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",174,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"clone_chan","","",174,null],[11,"drop_chan","","",174,null],[11,"drop_port","","",174,null],[11,"can_recv","","",174,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"start_selection","","",174,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"startresult"}}],[11,"abort_selection","","",174,{"inputs":[{"name":"packet"},{"name":"bool"}],"output":{"name":"bool"}}],[11,"drop","","",174,null],[11,"new","std::sync::mpsc::stream","",175,{"inputs":[{"name":"packet"}],"output":{"name":"packet"}}],[11,"send","","",175,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"upgrade","","",175,{"inputs":[{"name":"packet"},{"name":"receiver"}],"output":{"name":"upgraderesult"}}],[11,"recv","","",175,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",175,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"drop_chan","","",175,null],[11,"drop_port","","",175,null],[11,"can_recv","","",175,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"start_selection","","",175,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"selectionresult"}}],[11,"abort_selection","","",175,{"inputs":[{"name":"packet"},{"name":"bool"}],"output":{"name":"result"}}],[11,"drop","","",175,null],[11,"fmt","std::sync::mpsc::sync","",176,{"inputs":[{"name":"failure"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",177,{"inputs":[{"name":"packet"},{"name":"usize"}],"output":{"name":"packet"}}],[11,"send","","",177,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"try_send","","",177,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"recv","","",177,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",177,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"clone_chan","","",177,null],[11,"drop_chan","","",177,null],[11,"drop_port","","",177,null],[11,"can_recv","","",177,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"start_selection","","",177,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"startresult"}}],[11,"abort_selection","","",177,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"drop","","",177,null],[11,"new","std::sync::mpsc::mpsc_queue","Creates a new queue that is safe to share among multiple producers and\none consumer.",178,{"inputs":[{"name":"queue"}],"output":{"name":"queue"}}],[11,"push","","Pushes a new value onto this queue.",178,null],[11,"pop","","Pops some data from this queue.",178,{"inputs":[{"name":"queue"}],"output":{"name":"popresult"}}],[11,"drop","","",178,null],[11,"new","std::sync::mpsc::spsc_queue","Creates a new queue.",179,{"inputs":[{"name":"queue"},{"name":"usize"}],"output":{"name":"queue"}}],[11,"push","","Pushes a new value onto this queue. Note that to use this function\nsafely, it must be externally guaranteed that there is only one pusher.",179,null],[11,"pop","","Attempts to pop a value from this queue. Remember that to use this type\nsafely you must ensure that there is only one popper at a time.",179,{"inputs":[{"name":"queue"}],"output":{"name":"option"}}],[11,"peek","","Attempts to peek at the head of the queue, returning `None` if the queue\nhas no data currently",179,{"inputs":[{"name":"queue"}],"output":{"name":"option"}}],[11,"drop","","",179,null],[11,"clone","std::sync::mpsc","",180,{"inputs":[{"name":"senderror"}],"output":{"name":"senderror"}}],[11,"eq","","",180,{"inputs":[{"name":"senderror"},{"name":"senderror"}],"output":{"name":"bool"}}],[11,"ne","","",180,{"inputs":[{"name":"senderror"},{"name":"senderror"}],"output":{"name":"bool"}}],[11,"fmt","","",181,{"inputs":[{"name":"recverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",181,{"inputs":[{"name":"recverror"}],"output":{"name":"recverror"}}],[11,"eq","","",181,{"inputs":[{"name":"recverror"},{"name":"recverror"}],"output":{"name":"bool"}}],[11,"ne","","",181,{"inputs":[{"name":"recverror"},{"name":"recverror"}],"output":{"name":"bool"}}],[11,"fmt","","",182,{"inputs":[{"name":"tryrecverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",182,{"inputs":[{"name":"tryrecverror"}],"output":{"name":"tryrecverror"}}],[11,"eq","","",182,{"inputs":[{"name":"tryrecverror"},{"name":"tryrecverror"}],"output":{"name":"bool"}}],[11,"ne","","",182,{"inputs":[{"name":"tryrecverror"},{"name":"tryrecverror"}],"output":{"name":"bool"}}],[11,"clone","","",183,{"inputs":[{"name":"trysenderror"}],"output":{"name":"trysenderror"}}],[11,"eq","","",183,{"inputs":[{"name":"trysenderror"},{"name":"trysenderror"}],"output":{"name":"bool"}}],[11,"ne","","",183,{"inputs":[{"name":"trysenderror"},{"name":"trysenderror"}],"output":{"name":"bool"}}],[11,"send","","Attempts to send a value on this channel, returning it back if it could\nnot be sent.",184,{"inputs":[{"name":"sender"},{"name":"t"}],"output":{"name":"result"}}],[11,"clone","","",184,{"inputs":[{"name":"sender"}],"output":{"name":"sender"}}],[11,"drop","","",184,null],[11,"fmt","","",184,{"inputs":[{"name":"sender"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"send","","Sends a value on this synchronous channel.",185,{"inputs":[{"name":"syncsender"},{"name":"t"}],"output":{"name":"result"}}],[11,"try_send","","Attempts to send a value on this channel without blocking.",185,{"inputs":[{"name":"syncsender"},{"name":"t"}],"output":{"name":"result"}}],[11,"clone","","",185,{"inputs":[{"name":"syncsender"}],"output":{"name":"syncsender"}}],[11,"drop","","",185,null],[11,"fmt","","",185,{"inputs":[{"name":"syncsender"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"try_recv","","Attempts to return a pending value on this receiver without blocking",186,{"inputs":[{"name":"receiver"}],"output":{"name":"result"}}],[11,"recv","","Attempts to wait for a value on this receiver, returning an error if the\ncorresponding channel has hung up.",186,{"inputs":[{"name":"receiver"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator that will block waiting for messages, but never\n`panic!`. It will return `None` when the channel has hung up.",186,{"inputs":[{"name":"receiver"}],"output":{"name":"iter"}}],[11,"next","","",187,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",188,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"into_iter","","",186,{"inputs":[{"name":"receiver"}],"output":{"name":"intoiter"}}],[11,"drop","","",186,null],[11,"fmt","","",186,{"inputs":[{"name":"receiver"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",180,{"inputs":[{"name":"senderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",180,{"inputs":[{"name":"senderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",180,{"inputs":[{"name":"senderror"}],"output":{"name":"str"}}],[11,"cause","","",180,{"inputs":[{"name":"senderror"}],"output":{"name":"option"}}],[11,"fmt","","",183,{"inputs":[{"name":"trysenderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",183,{"inputs":[{"name":"trysenderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",183,{"inputs":[{"name":"trysenderror"}],"output":{"name":"str"}}],[11,"cause","","",183,{"inputs":[{"name":"trysenderror"}],"output":{"name":"option"}}],[11,"fmt","","",181,{"inputs":[{"name":"recverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",181,{"inputs":[{"name":"recverror"}],"output":{"name":"str"}}],[11,"cause","","",181,{"inputs":[{"name":"recverror"}],"output":{"name":"option"}}],[11,"fmt","","",182,{"inputs":[{"name":"tryrecverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",182,{"inputs":[{"name":"tryrecverror"}],"output":{"name":"str"}}],[11,"cause","","",182,{"inputs":[{"name":"tryrecverror"}],"output":{"name":"option"}}],[11,"new","std::sync::barrier","Creates a new barrier that can block a given number of threads.",189,{"inputs":[{"name":"barrier"},{"name":"usize"}],"output":{"name":"barrier"}}],[11,"wait","","Blocks the current thread until all threads has rendezvoused here.",189,{"inputs":[{"name":"barrier"}],"output":{"name":"barrierwaitresult"}}],[11,"is_leader","","Returns whether this thread from `wait` is the &quot;leader thread&quot;.",190,{"inputs":[{"name":"barrierwaitresult"}],"output":{"name":"bool"}}],[11,"clone","std::sync::condvar","",191,{"inputs":[{"name":"waittimeoutresult"}],"output":{"name":"waittimeoutresult"}}],[11,"eq","","",191,{"inputs":[{"name":"waittimeoutresult"},{"name":"waittimeoutresult"}],"output":{"name":"bool"}}],[11,"ne","","",191,{"inputs":[{"name":"waittimeoutresult"},{"name":"waittimeoutresult"}],"output":{"name":"bool"}}],[11,"fmt","","",191,{"inputs":[{"name":"waittimeoutresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"timed_out","","Returns whether the wait was known to have timed out.",191,{"inputs":[{"name":"waittimeoutresult"}],"output":{"name":"bool"}}],[11,"new","","Creates a new condition variable which is ready to be waited on and\nnotified.",192,{"inputs":[{"name":"condvar"}],"output":{"name":"condvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",192,{"inputs":[{"name":"condvar"},{"name":"mutexguard"}],"output":{"name":"result"}}],[11,"wait_timeout_ms","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",192,{"inputs":[{"name":"condvar"},{"name":"mutexguard"},{"name":"u32"}],"output":{"name":"result"}}],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",192,{"inputs":[{"name":"condvar"},{"name":"mutexguard"},{"name":"duration"}],"output":{"name":"result"}}],[11,"wait_timeout_with","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",192,{"inputs":[{"name":"condvar"},{"name":"mutexguard"},{"name":"duration"},{"name":"f"}],"output":{"name":"result"}}],[11,"notify_one","","Wakes up one blocked thread on this condvar.",192,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",192,null],[11,"drop","","",192,null],[11,"new","","Creates a new condition variable",193,{"inputs":[{"name":"staticcondvar"}],"output":{"name":"staticcondvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",193,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"}],"output":{"name":"result"}}],[11,"wait_timeout_ms","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",193,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"},{"name":"u32"}],"output":{"name":"result"}}],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",193,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"},{"name":"duration"}],"output":{"name":"result"}}],[11,"wait_timeout_with","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",193,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"},{"name":"duration"},{"name":"f"}],"output":{"name":"result"}}],[11,"notify_one","","Wakes up one blocked thread on this condvar.",193,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",193,null],[11,"destroy","","Deallocates all resources associated with this static condvar.",193,null],[11,"drop","std::sync::mutex","",1,null],[11,"fmt","","",1,{"inputs":[{"name":"mutex"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new mutex in an unlocked state ready for use.",194,{"inputs":[{"name":"staticmutex"}],"output":{"name":"staticmutex"}}],[11,"lock","","Acquires this lock, see `Mutex::lock`",194,{"inputs":[{"name":"staticmutex"}],"output":{"name":"result"}}],[11,"try_lock","","Attempts to grab this lock, see `Mutex::try_lock`",194,{"inputs":[{"name":"staticmutex"}],"output":{"name":"result"}}],[11,"destroy","","Deallocates resources associated with this static mutex.",194,null],[11,"deref","","",195,{"inputs":[{"name":"mutexguard"}],"output":{"name":"t"}}],[11,"deref_mut","","",195,{"inputs":[{"name":"mutexguard"}],"output":{"name":"t"}}],[11,"drop","","",195,null],[11,"new","std::sync::once","Creates a new `Once` value.",196,{"inputs":[{"name":"once"}],"output":{"name":"once"}}],[11,"call_once","","Performs an initialization routine once and only once. The given closure\nwill be executed if this is the first time `call_once` has been called,\nand otherwise the routine will *not* be invoked.",196,null],[11,"new","std::sync::rwlock","Creates a new instance of an `RwLock&lt;T&gt;` which is unlocked.",197,{"inputs":[{"name":"rwlock"},{"name":"t"}],"output":{"name":"rwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",197,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"try_read","","Attempts to acquire this rwlock with shared read access.",197,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",197,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",197,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"is_poisoned","","Determines whether the lock is poisoned.",197,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"into_inner","","Consumes this `RwLock`, returning the underlying data.",197,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"get_mut","","Returns a mutable reference to the underlying data.",197,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"drop","","",197,null],[11,"fmt","","",197,{"inputs":[{"name":"rwlock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new rwlock.",198,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"staticrwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",198,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"try_read","","Attempts to acquire this lock with shared read access.",198,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",198,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",198,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"destroy","","Deallocates all resources associated with this static lock.",198,null],[11,"map","","Transform this guard to hold a sub-borrow of the original data.",199,{"inputs":[{"name":"rwlockreadguard"},{"name":"rwlockreadguard"},{"name":"f"}],"output":{"name":"rwlockreadguard"}}],[11,"map","","Transform this guard to hold a sub-borrow of the original data.",200,{"inputs":[{"name":"rwlockwriteguard"},{"name":"rwlockwriteguard"},{"name":"f"}],"output":{"name":"rwlockwriteguard"}}],[11,"deref","","",199,{"inputs":[{"name":"rwlockreadguard"}],"output":{"name":"t"}}],[11,"deref","","",200,{"inputs":[{"name":"rwlockwriteguard"}],"output":{"name":"t"}}],[11,"deref_mut","","",200,{"inputs":[{"name":"rwlockwriteguard"}],"output":{"name":"t"}}],[11,"drop","","",199,null],[11,"drop","","",200,null],[11,"new","std::sync::semaphore","Creates a new semaphore with the initial count specified.",201,{"inputs":[{"name":"semaphore"},{"name":"isize"}],"output":{"name":"semaphore"}}],[11,"acquire","","Acquires a resource of this semaphore, blocking the current thread until\nit can do so.",201,null],[11,"release","","Release a resource from this semaphore.",201,null],[11,"access","","Acquires a resource of this semaphore, returning an RAII guard to\nrelease the semaphore when dropped.",201,{"inputs":[{"name":"semaphore"}],"output":{"name":"semaphoreguard"}}],[11,"drop","","",202,null],[11,"default","core::sync::atomic","",203,{"inputs":[{"name":"atomicbool"}],"output":{"name":"atomicbool"}}],[11,"default","","",204,{"inputs":[{"name":"atomicisize"}],"output":{"name":"atomicisize"}}],[11,"default","","",205,{"inputs":[{"name":"atomicusize"}],"output":{"name":"atomicusize"}}],[11,"default","","",206,{"inputs":[{"name":"atomicptr"}],"output":{"name":"atomicptr"}}],[11,"clone","","",207,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"new","","Creates a new `AtomicBool`.",203,{"inputs":[{"name":"atomicbool"},{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",203,{"inputs":[{"name":"atomicbool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"store","","Stores a value into the bool.",203,null],[11,"swap","","Stores a value into the bool, returning the old value.",203,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",203,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_and","","Logical &quot;and&quot; with a boolean value.",203,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_nand","","Logical &quot;nand&quot; with a boolean value.",203,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_or","","Logical &quot;or&quot; with a boolean value.",203,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_xor","","Logical &quot;xor&quot; with a boolean value.",203,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `AtomicIsize`.",204,{"inputs":[{"name":"atomicisize"},{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the isize.",204,{"inputs":[{"name":"atomicisize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"store","","Stores a value into the isize.",204,null],[11,"swap","","Stores a value into the isize, returning the old value.",204,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"compare_and_swap","","Stores a value into the `isize` if the current value is the same as the `current` value.",204,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_add","","Add an isize to the current value, returning the previous value.",204,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_sub","","Subtract an isize from the current value, returning the previous value.",204,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_and","","Bitwise and with the current isize, returning the previous value.",204,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_or","","Bitwise or with the current isize, returning the previous value.",204,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_xor","","Bitwise xor with the current isize, returning the previous value.",204,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"new","","Creates a new `AtomicUsize`.",205,{"inputs":[{"name":"atomicusize"},{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the usize.",205,{"inputs":[{"name":"atomicusize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"store","","Stores a value into the usize.",205,null],[11,"swap","","Stores a value into the usize, returning the old value.",205,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_and_swap","","Stores a value into the `usize` if the current value is the same as the `current` value.",205,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_add","","Add to the current usize, returning the previous value.",205,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_sub","","Subtract from the current usize, returning the previous value.",205,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_and","","Bitwise and with the current usize, returning the previous value.",205,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_or","","Bitwise or with the current usize, returning the previous value.",205,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_xor","","Bitwise xor with the current usize, returning the previous value.",205,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"new","","Creates a new `AtomicPtr`.",206,null],[11,"load","","Loads a value from the pointer.",206,null],[11,"store","","Stores a value into the pointer.",206,null],[11,"swap","","Stores a value into the pointer, returning the old value.",206,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",206,null],[11,"fmt","","",205,{"inputs":[{"name":"atomicusize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",204,{"inputs":[{"name":"atomicisize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",203,{"inputs":[{"name":"atomicbool"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",206,{"inputs":[{"name":"atomicptr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","std::time::duration","",208,null],[11,"fmt","","",208,{"inputs":[{"name":"duration"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",208,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",208,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"option"}}],[11,"lt","","",208,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"le","","",208,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"gt","","",208,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ge","","",208,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"eq","","",208,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ne","","",208,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"clone","","",208,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[11,"new","","Creates a new `Duration` from the specified number of seconds and\nadditional nanosecond precision.",208,{"inputs":[{"name":"duration"},{"name":"u64"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"span","","Runs a closure, returning the duration of time it took to run the\nclosure.",208,{"inputs":[{"name":"duration"},{"name":"f"}],"output":{"name":"duration"}}],[11,"from_secs","","Creates a new `Duration` from the specified number of seconds.",208,{"inputs":[{"name":"duration"},{"name":"u64"}],"output":{"name":"duration"}}],[11,"from_millis","","Creates a new `Duration` from the specified number of milliseconds.",208,{"inputs":[{"name":"duration"},{"name":"u64"}],"output":{"name":"duration"}}],[11,"as_secs","","Returns the number of whole seconds represented by this duration.",208,{"inputs":[{"name":"duration"}],"output":{"name":"u64"}}],[11,"subsec_nanos","","Returns the nanosecond precision represented by this duration.",208,{"inputs":[{"name":"duration"}],"output":{"name":"u32"}}],[11,"add","","",208,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"sub","","",208,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"mul","","",208,{"inputs":[{"name":"duration"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"div","","",208,{"inputs":[{"name":"duration"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"cmp","std::time","",209,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",209,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"option"}}],[11,"lt","","",209,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"le","","",209,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"gt","","",209,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"ge","","",209,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"eq","","",209,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"ne","","",209,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"clone","","",209,{"inputs":[{"name":"instant"}],"output":{"name":"instant"}}],[11,"cmp","","",210,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",210,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"option"}}],[11,"lt","","",210,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"le","","",210,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"gt","","",210,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"ge","","",210,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"eq","","",210,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"ne","","",210,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"clone","","",210,{"inputs":[{"name":"systemtime"}],"output":{"name":"systemtime"}}],[11,"fmt","","",211,{"inputs":[{"name":"systemtimeerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",211,{"inputs":[{"name":"systemtimeerror"}],"output":{"name":"systemtimeerror"}}],[11,"now","","Returns an instant corresponding to &quot;now&quot;.",209,{"inputs":[{"name":"instant"}],"output":{"name":"instant"}}],[11,"duration_from_earlier","","Returns the amount of time elapsed from another instant to this one.",209,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"duration"}}],[11,"elapsed","","Returns the amount of time elapsed since this instant was created.",209,{"inputs":[{"name":"instant"}],"output":{"name":"duration"}}],[11,"add","","",209,{"inputs":[{"name":"instant"},{"name":"duration"}],"output":{"name":"instant"}}],[11,"sub","","",209,{"inputs":[{"name":"instant"},{"name":"duration"}],"output":{"name":"instant"}}],[11,"fmt","","",209,{"inputs":[{"name":"instant"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"now","","Returns the system time corresponding to &quot;now&quot;.",210,{"inputs":[{"name":"systemtime"}],"output":{"name":"systemtime"}}],[11,"duration_from_earlier","","Returns the amount of time elapsed from an earlier point in time.",210,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"result"}}],[11,"elapsed","","Returns the amount of time elapsed since this system time was created.",210,{"inputs":[{"name":"systemtime"}],"output":{"name":"result"}}],[11,"add","","",210,{"inputs":[{"name":"systemtime"},{"name":"duration"}],"output":{"name":"systemtime"}}],[11,"sub","","",210,{"inputs":[{"name":"systemtime"},{"name":"duration"}],"output":{"name":"systemtime"}}],[11,"fmt","","",210,{"inputs":[{"name":"systemtime"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"duration","","Returns the positive duration which represents how far forward the\nsecond system time was from the first.",211,{"inputs":[{"name":"systemtimeerror"}],"output":{"name":"duration"}}],[11,"description","","",211,{"inputs":[{"name":"systemtimeerror"}],"output":{"name":"str"}}],[11,"fmt","","",211,{"inputs":[{"name":"systemtimeerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","std::sys_common::condvar","Creates a new condition variable for use.",212,{"inputs":[{"name":"condvar"}],"output":{"name":"condvar"}}],[11,"notify_one","","Signals one waiter on this condition variable to wake up.",212,null],[11,"notify_all","","Awakens all current waiters on this condition variable.",212,null],[11,"wait","","Waits for a signal on the specified mutex.",212,null],[11,"wait_timeout","","Waits for a signal on the specified mutex with a timeout duration\nspecified by `dur` (a relative time into the future).",212,{"inputs":[{"name":"condvar"},{"name":"mutex"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"destroy","","Deallocates all resources associated with this condition variable.",212,null],[11,"clone","std::sys_common::dwarf::eh","",213,{"inputs":[{"name":"ehcontext"}],"output":{"name":"ehcontext"}}],[11,"new","std::sys_common::dwarf","",214,null],[11,"read","","",214,{"inputs":[{"name":"dwarfreader"}],"output":{"name":"t"}}],[11,"read_uleb128","","",214,{"inputs":[{"name":"dwarfreader"}],"output":{"name":"u64"}}],[11,"read_sleb128","","",214,{"inputs":[{"name":"dwarfreader"}],"output":{"name":"i64"}}],[11,"clone","std::sys_common::libunwind","",215,{"inputs":[{"name":"_unwind_action"}],"output":{"name":"_unwind_action"}}],[11,"clone","","",216,{"inputs":[{"name":"_unwind_reason_code"}],"output":{"name":"_unwind_reason_code"}}],[11,"new","std::sys_common::mutex","Creates a new mutex for use.",217,{"inputs":[{"name":"mutex"}],"output":{"name":"mutex"}}],[11,"lock","","Locks the mutex blocking the current thread until it is available.",217,null],[11,"try_lock","","Attempts to lock the mutex without blocking, returning whether it was\nsuccessfully acquired or not.",217,{"inputs":[{"name":"mutex"}],"output":{"name":"bool"}}],[11,"unlock","","Unlocks the mutex.",217,null],[11,"destroy","","Deallocates all resources associated with this mutex.",217,null],[11,"next","std::sys_common::net","",218,{"inputs":[{"name":"lookuphost"}],"output":{"name":"option"}}],[11,"drop","","",218,null],[11,"connect","","",219,{"inputs":[{"name":"tcpstream"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"socket","","",219,{"inputs":[{"name":"tcpstream"}],"output":{"name":"socket"}}],[11,"into_socket","","",219,{"inputs":[{"name":"tcpstream"}],"output":{"name":"socket"}}],[11,"set_read_timeout","","",219,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","",219,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","",219,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"write_timeout","","",219,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"read","","",219,null],[11,"write","","",219,null],[11,"peer_addr","","",219,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"socket_addr","","",219,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"shutdown","","",219,{"inputs":[{"name":"tcpstream"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"duplicate","","",219,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"fmt","","",219,{"inputs":[{"name":"tcpstream"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","",220,{"inputs":[{"name":"tcplistener"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"socket","","",220,{"inputs":[{"name":"tcplistener"}],"output":{"name":"socket"}}],[11,"into_socket","","",220,{"inputs":[{"name":"tcplistener"}],"output":{"name":"socket"}}],[11,"socket_addr","","",220,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"accept","","",220,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"duplicate","","",220,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"fmt","","",220,{"inputs":[{"name":"tcplistener"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","",221,{"inputs":[{"name":"udpsocket"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"socket","","",221,{"inputs":[{"name":"udpsocket"}],"output":{"name":"socket"}}],[11,"into_socket","","",221,{"inputs":[{"name":"udpsocket"}],"output":{"name":"socket"}}],[11,"socket_addr","","",221,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"recv_from","","",221,null],[11,"send_to","","",221,null],[11,"duplicate","","",221,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"set_read_timeout","","",221,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","",221,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","",221,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"write_timeout","","",221,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"fmt","","",221,{"inputs":[{"name":"udpsocket"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","std::sys_common::poison","",222,{"inputs":[{"name":"flag"}],"output":{"name":"flag"}}],[11,"borrow","","",222,{"inputs":[{"name":"flag"}],"output":{"name":"result"}}],[11,"done","","",222,null],[11,"get","","",222,{"inputs":[{"name":"flag"}],"output":{"name":"bool"}}],[11,"fmt","","",223,{"inputs":[{"name":"poisonerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",223,{"inputs":[{"name":"poisonerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",223,{"inputs":[{"name":"poisonerror"}],"output":{"name":"str"}}],[11,"new","","Creates a `PoisonError`.",223,{"inputs":[{"name":"poisonerror"},{"name":"t"}],"output":{"name":"poisonerror"}}],[11,"into_inner","","Consumes this error indicating that a lock is poisoned, returning the\nunderlying guard to allow access regardless.",223,{"inputs":[{"name":"poisonerror"}],"output":{"name":"t"}}],[11,"get_ref","","Reaches into this error indicating that a lock is poisoned, returning a\nreference to the underlying guard to allow access regardless.",223,{"inputs":[{"name":"poisonerror"}],"output":{"name":"t"}}],[11,"get_mut","","Reaches into this error indicating that a lock is poisoned, returning a\nmutable reference to the underlying guard to allow access regardless.",223,{"inputs":[{"name":"poisonerror"}],"output":{"name":"t"}}],[11,"from","","",224,{"inputs":[{"name":"trylockerror"},{"name":"poisonerror"}],"output":{"name":"trylockerror"}}],[11,"fmt","","",224,{"inputs":[{"name":"trylockerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",224,{"inputs":[{"name":"trylockerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",224,{"inputs":[{"name":"trylockerror"}],"output":{"name":"str"}}],[11,"cause","","",224,{"inputs":[{"name":"trylockerror"}],"output":{"name":"option"}}],[11,"new","std::sys_common::remutex","Creates a new reentrant mutex in an unlocked state.",225,{"inputs":[{"name":"reentrantmutex"},{"name":"t"}],"output":{"name":"reentrantmutex"}}],[11,"lock","","Acquires a mutex, blocking the current thread until it is able to do so.",225,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"result"}}],[11,"try_lock","","Attempts to acquire this lock.",225,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"result"}}],[11,"drop","","",225,null],[11,"fmt","","",225,{"inputs":[{"name":"reentrantmutex"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",226,{"inputs":[{"name":"reentrantmutexguard"}],"output":{"name":"t"}}],[11,"drop","","",226,null],[11,"new","std::sys_common::rwlock","Creates a new reader-writer lock for use.",227,{"inputs":[{"name":"rwlock"}],"output":{"name":"rwlock"}}],[11,"read","","Acquires shared access to the underlying lock, blocking the current\nthread to do so.",227,null],[11,"try_read","","Attempts to acquire shared access to this lock, returning whether it\nsucceeded or not.",227,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"write","","Acquires write access to the underlying lock, blocking the current thread\nto do so.",227,null],[11,"try_write","","Attempts to acquire exclusive access to this lock, returning whether it\nsucceeded or not.",227,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"read_unlock","","Unlocks previously acquired shared access to this lock.",227,null],[11,"write_unlock","","Unlocks previously acquired exclusive access to this lock.",227,null],[11,"destroy","","Destroys OS-related resources with this RWLock.",227,null],[11,"new","std::sys_common::thread_local","",228,{"inputs":[{"name":"statickey"},{"name":"option"}],"output":{"name":"statickey"}}],[11,"get","","Gets the value associated with this TLS key",228,null],[11,"set","","Sets this TLS key to a new value.",228,null],[11,"destroy","","Deallocates this OS TLS key.",228,null],[11,"new","","Creates a new managed OS TLS key.",229,{"inputs":[{"name":"key"},{"name":"option"}],"output":{"name":"key"}}],[11,"get","","See StaticKey::get",229,null],[11,"set","","See StaticKey::set",229,null],[11,"drop","","",229,null],[11,"clone","std::sys_common::wtf8","",230,{"inputs":[{"name":"codepoint"}],"output":{"name":"codepoint"}}],[11,"partial_cmp","","",230,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"option"}}],[11,"lt","","",230,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"le","","",230,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"gt","","",230,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"ge","","",230,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"cmp","","",230,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"ordering"}}],[11,"eq","","",230,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"ne","","",230,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"fmt","","",230,{"inputs":[{"name":"codepoint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_u32_unchecked","","Unsafely creates a new `CodePoint` without checking the value.",230,{"inputs":[{"name":"codepoint"},{"name":"u32"}],"output":{"name":"codepoint"}}],[11,"from_u32","","Creates a new `CodePoint` if the value is a valid code point.",230,{"inputs":[{"name":"codepoint"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_char","","Creates a new `CodePoint` from a `char`.",230,{"inputs":[{"name":"codepoint"},{"name":"char"}],"output":{"name":"codepoint"}}],[11,"to_u32","","Returns the numeric value of the code point.",230,{"inputs":[{"name":"codepoint"}],"output":{"name":"u32"}}],[11,"to_char","","Optionally returns a Unicode scalar value for the code point.",230,{"inputs":[{"name":"codepoint"}],"output":{"name":"option"}}],[11,"to_char_lossy","","Returns a Unicode scalar value for the code point.",230,{"inputs":[{"name":"codepoint"}],"output":{"name":"char"}}],[11,"clone","","",231,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8buf"}}],[11,"partial_cmp","","",231,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"option"}}],[11,"lt","","",231,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"le","","",231,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"gt","","",231,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"ge","","",231,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"cmp","","",231,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"ordering"}}],[11,"eq","","",231,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"ne","","",231,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"from_str","","Creates a WTF-8 slice from a UTF-8 `&amp;str` slice.",232,{"inputs":[{"name":"wtf8"},{"name":"str"}],"output":{"name":"wtf8"}}],[11,"len","","Returns the length, in WTF-8 bytes.",232,{"inputs":[{"name":"wtf8"}],"output":{"name":"usize"}}],[11,"is_empty","","",232,{"inputs":[{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"ascii_byte_at","","Returns the code point at `position` if it is in the ASCII range,\nor `b&#39;\\xFF&#39; otherwise.",232,{"inputs":[{"name":"wtf8"},{"name":"usize"}],"output":{"name":"u8"}}],[11,"code_points","","Returns an iterator for the string’s code points.",232,{"inputs":[{"name":"wtf8"}],"output":{"name":"wtf8codepoints"}}],[11,"as_str","","Tries to convert the string to UTF-8 and return a `&amp;str` slice.",232,{"inputs":[{"name":"wtf8"}],"output":{"name":"option"}}],[11,"to_string_lossy","","Lossily converts the string to UTF-8.\nReturns a UTF-8 `&amp;str` slice if the contents are well-formed in UTF-8.",232,{"inputs":[{"name":"wtf8"}],"output":{"name":"cow"}}],[11,"encode_wide","","Converts the WTF-8 string to potentially ill-formed UTF-16\nand return an iterator of 16-bit code units.",232,{"inputs":[{"name":"wtf8"}],"output":{"name":"encodewide"}}],[11,"deref","","",231,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8"}}],[11,"fmt","","",231,{"inputs":[{"name":"wtf8buf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new, empty WTF-8 string.",231,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8buf"}}],[11,"with_capacity","","Creates a new, empty WTF-8 string with pre-allocated capacity for `n` bytes.",231,{"inputs":[{"name":"wtf8buf"},{"name":"usize"}],"output":{"name":"wtf8buf"}}],[11,"from_string","","Creates a WTF-8 string from a UTF-8 `String`.",231,{"inputs":[{"name":"wtf8buf"},{"name":"string"}],"output":{"name":"wtf8buf"}}],[11,"from_str","","Creates a WTF-8 string from a UTF-8 `&amp;str` slice.",231,{"inputs":[{"name":"wtf8buf"},{"name":"str"}],"output":{"name":"wtf8buf"}}],[11,"clear","","",231,null],[11,"from_wide","","Creates a WTF-8 string from a potentially ill-formed UTF-16 slice of 16-bit code units.",231,null],[11,"as_slice","","",231,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8"}}],[11,"reserve","","Reserves capacity for at least `additional` more bytes to be inserted\nin the given `Wtf8Buf`.\nThe collection may reserve more space to avoid frequent reallocations.",231,null],[11,"reserve_exact","","",231,null],[11,"capacity","","Returns the number of bytes that this string buffer can hold without reallocating.",231,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"usize"}}],[11,"push_str","","Append a UTF-8 slice at the end of the string.",231,null],[11,"push_wtf8","","Append a WTF-8 slice at the end of the string.",231,null],[11,"push_char","","Append a Unicode scalar value at the end of the string.",231,null],[11,"push","","Append a code point at the end of the string.",231,null],[11,"truncate","","Shortens a string to the specified length.",231,null],[11,"into_string","","Consumes the WTF-8 string and tries to convert it to UTF-8.",231,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"result"}}],[11,"into_string_lossy","","Consumes the WTF-8 string and converts it lossily to UTF-8.",231,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"string"}}],[11,"from_iter","","",231,{"inputs":[{"name":"wtf8buf"},{"name":"t"}],"output":{"name":"wtf8buf"}}],[11,"extend","","",231,null],[11,"partial_cmp","","",232,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"option"}}],[11,"lt","","",232,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"le","","",232,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"gt","","",232,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"ge","","",232,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"eq","","",232,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"ne","","",232,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"cmp","","",232,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"ordering"}}],[11,"fmt","","",232,{"inputs":[{"name":"wtf8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"index","","",232,{"inputs":[{"name":"wtf8"},{"name":"range"}],"output":{"name":"wtf8"}}],[11,"index","","",232,{"inputs":[{"name":"wtf8"},{"name":"rangefrom"}],"output":{"name":"wtf8"}}],[11,"index","","",232,{"inputs":[{"name":"wtf8"},{"name":"rangeto"}],"output":{"name":"wtf8"}}],[11,"index","","",232,{"inputs":[{"name":"wtf8"},{"name":"rangefull"}],"output":{"name":"wtf8"}}],[11,"clone","","",233,{"inputs":[{"name":"wtf8codepoints"}],"output":{"name":"wtf8codepoints"}}],[11,"next","","",233,{"inputs":[{"name":"wtf8codepoints"}],"output":{"name":"option"}}],[11,"size_hint","","",233,null],[11,"clone","","",234,{"inputs":[{"name":"encodewide"}],"output":{"name":"encodewide"}}],[11,"next","","",234,{"inputs":[{"name":"encodewide"}],"output":{"name":"option"}}],[11,"size_hint","","",234,null],[11,"hash","","",230,null],[11,"hash","","",231,null],[11,"hash","","",232,null],[11,"is_ascii","","",232,{"inputs":[{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"to_ascii_uppercase","","",232,{"inputs":[{"name":"wtf8"}],"output":{"name":"wtf8buf"}}],[11,"to_ascii_lowercase","","",232,{"inputs":[{"name":"wtf8"}],"output":{"name":"wtf8buf"}}],[11,"eq_ignore_ascii_case","","",232,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"make_ascii_uppercase","","",232,null],[11,"make_ascii_lowercase","","",232,null],[11,"new","std::sys::weak","",235,{"inputs":[{"name":"weak"},{"name":"str"}],"output":{"name":"weak"}}],[11,"get","","",235,{"inputs":[{"name":"weak"}],"output":{"name":"option"}}],[11,"new","std::sys::condvar","",236,{"inputs":[{"name":"condvar"}],"output":{"name":"condvar"}}],[11,"notify_one","","",236,null],[11,"notify_all","","",236,null],[11,"wait","","",236,null],[11,"wait_timeout","","",236,{"inputs":[{"name":"condvar"},{"name":"mutex"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"destroy","","",236,null],[11,"new","std::sys::fd","",237,{"inputs":[{"name":"filedesc"},{"name":"i32"}],"output":{"name":"filedesc"}}],[11,"raw","","",237,{"inputs":[{"name":"filedesc"}],"output":{"name":"i32"}}],[11,"into_raw","","Extracts the actual filedescriptor without closing it.",237,{"inputs":[{"name":"filedesc"}],"output":{"name":"i32"}}],[11,"read","","",237,null],[11,"write","","",237,null],[11,"set_cloexec","","",237,null],[11,"duplicate","","",237,{"inputs":[{"name":"filedesc"}],"output":{"name":"result"}}],[11,"drop","","",237,null],[11,"clone","std::sys::fs","",238,{"inputs":[{"name":"fileattr"}],"output":{"name":"fileattr"}}],[11,"clone","","",239,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"fmt","","",240,{"inputs":[{"name":"filepermissions"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",240,{"inputs":[{"name":"filepermissions"},{"name":"filepermissions"}],"output":{"name":"bool"}}],[11,"ne","","",240,{"inputs":[{"name":"filepermissions"},{"name":"filepermissions"}],"output":{"name":"bool"}}],[11,"clone","","",240,{"inputs":[{"name":"filepermissions"}],"output":{"name":"filepermissions"}}],[11,"hash","","",241,null],[11,"eq","","",241,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"ne","","",241,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"clone","","",241,{"inputs":[{"name":"filetype"}],"output":{"name":"filetype"}}],[11,"size","","",238,{"inputs":[{"name":"fileattr"}],"output":{"name":"u64"}}],[11,"perm","","",238,{"inputs":[{"name":"fileattr"}],"output":{"name":"filepermissions"}}],[11,"file_type","","",238,{"inputs":[{"name":"fileattr"}],"output":{"name":"filetype"}}],[11,"modified","","",238,{"inputs":[{"name":"fileattr"}],"output":{"name":"result"}}],[11,"accessed","","",238,{"inputs":[{"name":"fileattr"}],"output":{"name":"result"}}],[11,"created","","",238,{"inputs":[{"name":"fileattr"}],"output":{"name":"result"}}],[11,"readonly","","",240,{"inputs":[{"name":"filepermissions"}],"output":{"name":"bool"}}],[11,"set_readonly","","",240,null],[11,"mode","","",240,{"inputs":[{"name":"filepermissions"}],"output":{"name":"u32"}}],[11,"is_dir","","",241,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_file","","",241,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_symlink","","",241,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is","","",241,{"inputs":[{"name":"filetype"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"next","","",242,{"inputs":[{"name":"readdir"}],"output":{"name":"option"}}],[11,"drop","","",243,null],[11,"path","","",244,{"inputs":[{"name":"direntry"}],"output":{"name":"pathbuf"}}],[11,"file_name","","",244,{"inputs":[{"name":"direntry"}],"output":{"name":"osstring"}}],[11,"metadata","","",244,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"file_type","","",244,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"ino","","",244,{"inputs":[{"name":"direntry"}],"output":{"name":"u64"}}],[11,"new","","",239,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"read","","",239,null],[11,"write","","",239,null],[11,"append","","",239,null],[11,"truncate","","",239,null],[11,"create","","",239,null],[11,"create_new","","",239,null],[11,"custom_flags","","",239,null],[11,"mode","","",239,null],[11,"open","","",245,{"inputs":[{"name":"file"},{"name":"path"},{"name":"openoptions"}],"output":{"name":"result"}}],[11,"open_c","","",245,{"inputs":[{"name":"file"},{"name":"cstr"},{"name":"openoptions"}],"output":{"name":"result"}}],[11,"file_attr","","",245,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"fsync","","",245,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"datasync","","",245,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"truncate","","",245,{"inputs":[{"name":"file"},{"name":"u64"}],"output":{"name":"result"}}],[11,"read","","",245,null],[11,"write","","",245,null],[11,"flush","","",245,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"seek","","",245,{"inputs":[{"name":"file"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"duplicate","","",245,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"fd","","",245,{"inputs":[{"name":"file"}],"output":{"name":"filedesc"}}],[11,"into_fd","","",245,{"inputs":[{"name":"file"}],"output":{"name":"filedesc"}}],[11,"new","","",246,{"inputs":[{"name":"dirbuilder"}],"output":{"name":"dirbuilder"}}],[11,"mkdir","","",246,{"inputs":[{"name":"dirbuilder"},{"name":"path"}],"output":{"name":"result"}}],[11,"set_mode","","",246,null],[11,"fmt","","",245,{"inputs":[{"name":"file"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","std::sys::mutex","",247,{"inputs":[{"name":"mutex"}],"output":{"name":"mutex"}}],[11,"lock","","",247,null],[11,"unlock","","",247,null],[11,"try_lock","","",247,{"inputs":[{"name":"mutex"}],"output":{"name":"bool"}}],[11,"destroy","","",247,null],[11,"uninitialized","","",248,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"reentrantmutex"}}],[11,"init","","",248,null],[11,"lock","","",248,null],[11,"try_lock","","",248,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"bool"}}],[11,"unlock","","",248,null],[11,"destroy","","",248,null],[11,"new","std::sys::net","",249,{"inputs":[{"name":"socket"},{"name":"socketaddr"},{"name":"i32"}],"output":{"name":"result"}}],[11,"accept","","",249,null],[11,"duplicate","","",249,{"inputs":[{"name":"socket"}],"output":{"name":"result"}}],[11,"read","","",249,null],[11,"set_timeout","","",249,{"inputs":[{"name":"socket"},{"name":"option"},{"name":"i32"}],"output":{"name":"result"}}],[11,"timeout","","",249,{"inputs":[{"name":"socket"},{"name":"i32"}],"output":{"name":"result"}}],[11,"shutdown","","",249,{"inputs":[{"name":"socket"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"clone","libc::unix","",250,{"inputs":[{"name":"utimbuf"}],"output":{"name":"utimbuf"}}],[11,"clone","","",251,{"inputs":[{"name":"timeval"}],"output":{"name":"timeval"}}],[11,"clone","","",252,{"inputs":[{"name":"timespec"}],"output":{"name":"timespec"}}],[11,"clone","","",253,{"inputs":[{"name":"rlimit"}],"output":{"name":"rlimit"}}],[11,"clone","","",254,{"inputs":[{"name":"rusage"}],"output":{"name":"rusage"}}],[11,"clone","","",255,{"inputs":[{"name":"in_addr"}],"output":{"name":"in_addr"}}],[11,"clone","","",256,{"inputs":[{"name":"in6_addr"}],"output":{"name":"in6_addr"}}],[11,"clone","","",257,{"inputs":[{"name":"ip_mreq"}],"output":{"name":"ip_mreq"}}],[11,"clone","","",258,{"inputs":[{"name":"ipv6_mreq"}],"output":{"name":"ipv6_mreq"}}],[11,"clone","","",259,{"inputs":[{"name":"hostent"}],"output":{"name":"hostent"}}],[11,"clone","","",260,{"inputs":[{"name":"iovec"}],"output":{"name":"iovec"}}],[11,"clone","","",261,{"inputs":[{"name":"pollfd"}],"output":{"name":"pollfd"}}],[11,"clone","libc::unix::notbsd","",262,{"inputs":[{"name":"sockaddr"}],"output":{"name":"sockaddr"}}],[11,"clone","","",263,{"inputs":[{"name":"sockaddr_in"}],"output":{"name":"sockaddr_in"}}],[11,"clone","","",264,{"inputs":[{"name":"sockaddr_in6"}],"output":{"name":"sockaddr_in6"}}],[11,"clone","","",265,{"inputs":[{"name":"sockaddr_un"}],"output":{"name":"sockaddr_un"}}],[11,"clone","","",266,{"inputs":[{"name":"sockaddr_storage"}],"output":{"name":"sockaddr_storage"}}],[11,"clone","","",267,{"inputs":[{"name":"addrinfo"}],"output":{"name":"addrinfo"}}],[11,"clone","","",268,{"inputs":[{"name":"sockaddr_ll"}],"output":{"name":"sockaddr_ll"}}],[11,"clone","","",269,{"inputs":[{"name":"fd_set"}],"output":{"name":"fd_set"}}],[11,"clone","","",270,{"inputs":[{"name":"tm"}],"output":{"name":"tm"}}],[11,"clone","","",271,{"inputs":[{"name":"sched_param"}],"output":{"name":"sched_param"}}],[11,"clone","","",272,{"inputs":[{"name":"dl_info"}],"output":{"name":"dl_info"}}],[11,"clone","","",273,{"inputs":[{"name":"epoll_event"}],"output":{"name":"epoll_event"}}],[11,"clone","","",274,{"inputs":[{"name":"utsname"}],"output":{"name":"utsname"}}],[11,"clone","libc::unix::notbsd::linux","",275,{"inputs":[{"name":"dirent"}],"output":{"name":"dirent"}}],[11,"clone","","",276,{"inputs":[{"name":"dirent64"}],"output":{"name":"dirent64"}}],[11,"clone","","",277,{"inputs":[{"name":"rlimit64"}],"output":{"name":"rlimit64"}}],[11,"clone","","",278,{"inputs":[{"name":"glob_t"}],"output":{"name":"glob_t"}}],[11,"clone","","",279,{"inputs":[{"name":"ifaddrs"}],"output":{"name":"ifaddrs"}}],[11,"clone","","",280,{"inputs":[{"name":"pthread_mutex_t"}],"output":{"name":"pthread_mutex_t"}}],[11,"clone","","",281,{"inputs":[{"name":"pthread_rwlock_t"}],"output":{"name":"pthread_rwlock_t"}}],[11,"clone","","",282,{"inputs":[{"name":"pthread_mutexattr_t"}],"output":{"name":"pthread_mutexattr_t"}}],[11,"clone","","",283,{"inputs":[{"name":"pthread_cond_t"}],"output":{"name":"pthread_cond_t"}}],[11,"clone","","",284,{"inputs":[{"name":"passwd"}],"output":{"name":"passwd"}}],[11,"clone","","",285,{"inputs":[{"name":"statvfs"}],"output":{"name":"statvfs"}}],[11,"clone","","",286,{"inputs":[{"name":"sockaddr_nl"}],"output":{"name":"sockaddr_nl"}}],[11,"clone","","",287,{"inputs":[{"name":"dqblk"}],"output":{"name":"dqblk"}}],[11,"clone","","",288,{"inputs":[{"name":"signalfd_siginfo"}],"output":{"name":"signalfd_siginfo"}}],[11,"clone","","",289,{"inputs":[{"name":"fsid_t"}],"output":{"name":"fsid_t"}}],[11,"clone","","",290,{"inputs":[{"name":"mq_attr"}],"output":{"name":"mq_attr"}}],[11,"clone","","",291,{"inputs":[{"name":"cpu_set_t"}],"output":{"name":"cpu_set_t"}}],[11,"clone","libc::unix::notbsd::linux::other","",292,{"inputs":[{"name":"sigaction"}],"output":{"name":"sigaction"}}],[11,"clone","","",293,{"inputs":[{"name":"stack_t"}],"output":{"name":"stack_t"}}],[11,"clone","","",294,{"inputs":[{"name":"siginfo_t"}],"output":{"name":"siginfo_t"}}],[11,"clone","","",295,{"inputs":[{"name":"glob64_t"}],"output":{"name":"glob64_t"}}],[11,"clone","","",296,{"inputs":[{"name":"ucred"}],"output":{"name":"ucred"}}],[11,"clone","","",297,{"inputs":[{"name":"statfs"}],"output":{"name":"statfs"}}],[11,"clone","","",298,{"inputs":[{"name":"msghdr"}],"output":{"name":"msghdr"}}],[11,"clone","","",299,{"inputs":[{"name":"termios"}],"output":{"name":"termios"}}],[11,"clone","","",300,{"inputs":[{"name":"flock"}],"output":{"name":"flock"}}],[11,"clone","libc::unix::notbsd::linux::other::b64","",301,{"inputs":[{"name":"sigset_t"}],"output":{"name":"sigset_t"}}],[11,"clone","libc::unix::notbsd::linux::other::b64::x86_64","",302,{"inputs":[{"name":"stat"}],"output":{"name":"stat"}}],[11,"clone","","",303,{"inputs":[{"name":"stat64"}],"output":{"name":"stat64"}}],[11,"clone","","",304,{"inputs":[{"name":"pthread_attr_t"}],"output":{"name":"pthread_attr_t"}}],[11,"clone","libc::unix::notbsd::linux::other","",305,{"inputs":[{"name":"ipc_perm"}],"output":{"name":"ipc_perm"}}],[11,"clone","","",306,{"inputs":[{"name":"shmid_ds"}],"output":{"name":"shmid_ds"}}],[11,"next","std::sys::os","",307,{"inputs":[{"name":"splitpaths"}],"output":{"name":"option"}}],[11,"size_hint","","",307,null],[11,"fmt","","",308,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",308,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",308,{"inputs":[{"name":"joinpathserror"}],"output":{"name":"str"}}],[11,"next","","",309,{"inputs":[{"name":"args"}],"output":{"name":"option"}}],[11,"size_hint","","",309,null],[11,"len","","",309,{"inputs":[{"name":"args"}],"output":{"name":"usize"}}],[11,"next","","",310,{"inputs":[{"name":"env"}],"output":{"name":"option"}}],[11,"size_hint","","",310,null],[11,"hash","std::sys::os_str","",311,null],[11,"clone","","",311,{"inputs":[{"name":"buf"}],"output":{"name":"buf"}}],[11,"fmt","","",312,{"inputs":[{"name":"slice"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",311,{"inputs":[{"name":"buf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_string","","",311,{"inputs":[{"name":"buf"},{"name":"string"}],"output":{"name":"buf"}}],[11,"with_capacity","","",311,{"inputs":[{"name":"buf"},{"name":"usize"}],"output":{"name":"buf"}}],[11,"clear","","",311,null],[11,"capacity","","",311,{"inputs":[{"name":"buf"}],"output":{"name":"usize"}}],[11,"reserve","","",311,null],[11,"reserve_exact","","",311,null],[11,"as_slice","","",311,{"inputs":[{"name":"buf"}],"output":{"name":"slice"}}],[11,"into_string","","",311,{"inputs":[{"name":"buf"}],"output":{"name":"result"}}],[11,"push_slice","","",311,null],[11,"from_str","","",312,{"inputs":[{"name":"slice"},{"name":"str"}],"output":{"name":"slice"}}],[11,"to_str","","",312,{"inputs":[{"name":"slice"}],"output":{"name":"option"}}],[11,"to_string_lossy","","",312,{"inputs":[{"name":"slice"}],"output":{"name":"cow"}}],[11,"to_owned","","",312,{"inputs":[{"name":"slice"}],"output":{"name":"buf"}}],[11,"from_fd","std::sys::pipe","",313,{"inputs":[{"name":"anonpipe"},{"name":"i32"}],"output":{"name":"anonpipe"}}],[11,"read","","",313,null],[11,"write","","",313,null],[11,"fd","","",313,{"inputs":[{"name":"anonpipe"}],"output":{"name":"filedesc"}}],[11,"into_fd","","",313,{"inputs":[{"name":"anonpipe"}],"output":{"name":"filedesc"}}],[11,"new","std::sys::process","",314,{"inputs":[{"name":"command"},{"name":"osstr"}],"output":{"name":"command"}}],[11,"arg","","",314,null],[11,"env","","",314,null],[11,"env_remove","","",314,null],[11,"env_clear","","",314,null],[11,"cwd","","",314,null],[11,"uid","","",314,null],[11,"gid","","",314,null],[11,"session_leader","","",314,null],[11,"before_exec","","",314,null],[11,"stdin","","",314,null],[11,"stdout","","",314,null],[11,"stderr","","",314,null],[11,"spawn","","",314,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"result"}}],[11,"exec","","",314,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"error"}}],[11,"fmt","","",314,{"inputs":[{"name":"command"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",315,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",315,{"inputs":[{"name":"exitstatus"}],"output":{"name":"exitstatus"}}],[11,"eq","","",315,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"ne","","",315,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"success","","",315,{"inputs":[{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"code","","",315,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"signal","","",315,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"fmt","","",315,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"id","","",316,{"inputs":[{"name":"process"}],"output":{"name":"u32"}}],[11,"kill","","",316,{"inputs":[{"name":"process"}],"output":{"name":"result"}}],[11,"wait","","",316,{"inputs":[{"name":"process"}],"output":{"name":"result"}}],[11,"new","std::sys::rand::imp","Create a new `OsRng`.",317,{"inputs":[{"name":"osrng"}],"output":{"name":"result"}}],[11,"next_u32","","",317,{"inputs":[{"name":"osrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",317,{"inputs":[{"name":"osrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",317,null],[11,"new","std::sys::rwlock","",318,{"inputs":[{"name":"rwlock"}],"output":{"name":"rwlock"}}],[11,"read","","",318,null],[11,"try_read","","",318,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"write","","",318,null],[11,"try_write","","",318,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"read_unlock","","",318,null],[11,"write_unlock","","",318,null],[11,"destroy","","",318,null],[11,"new","std::sys::stack_overflow","",319,{"inputs":[{"name":"handler"}],"output":{"name":"handler"}}],[11,"drop","","",319,null],[11,"new","std::sys::thread","",320,{"inputs":[{"name":"thread"},{"name":"usize"},{"name":"box"}],"output":{"name":"result"}}],[11,"yield_now","","",320,null],[11,"set_name","","",320,null],[11,"sleep","","",320,null],[11,"join","","",320,null],[11,"id","","",320,{"inputs":[{"name":"thread"}],"output":{"name":"u64"}}],[11,"into_id","","",320,{"inputs":[{"name":"thread"}],"output":{"name":"u64"}}],[11,"drop","","",320,null],[11,"clone","std::sys::time::inner","",321,{"inputs":[{"name":"timespec"}],"output":{"name":"timespec"}}],[11,"cmp","","",322,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",322,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"option"}}],[11,"lt","","",322,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"le","","",322,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"gt","","",322,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"ge","","",322,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"eq","","",322,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"ne","","",322,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"clone","","",322,{"inputs":[{"name":"instant"}],"output":{"name":"instant"}}],[11,"cmp","","",323,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",323,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"option"}}],[11,"lt","","",323,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"le","","",323,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"gt","","",323,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"ge","","",323,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"eq","","",323,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"ne","","",323,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"clone","","",323,{"inputs":[{"name":"systemtime"}],"output":{"name":"systemtime"}}],[11,"now","","",322,{"inputs":[{"name":"instant"}],"output":{"name":"instant"}}],[11,"sub_instant","","",322,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"duration"}}],[11,"add_duration","","",322,{"inputs":[{"name":"instant"},{"name":"duration"}],"output":{"name":"instant"}}],[11,"sub_duration","","",322,{"inputs":[{"name":"instant"},{"name":"duration"}],"output":{"name":"instant"}}],[11,"fmt","","",322,{"inputs":[{"name":"instant"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"now","","",323,{"inputs":[{"name":"systemtime"}],"output":{"name":"systemtime"}}],[11,"sub_time","","",323,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"result"}}],[11,"add_duration","","",323,{"inputs":[{"name":"systemtime"},{"name":"duration"}],"output":{"name":"systemtime"}}],[11,"sub_duration","","",323,{"inputs":[{"name":"systemtime"},{"name":"duration"}],"output":{"name":"systemtime"}}],[11,"from","","",323,{"inputs":[{"name":"systemtime"},{"name":"timespec"}],"output":{"name":"systemtime"}}],[11,"fmt","","",323,{"inputs":[{"name":"systemtime"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"now","","",321,{"inputs":[{"name":"timespec"},{"name":"i32"}],"output":{"name":"timespec"}}],[11,"eq","","",321,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",321,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"option"}}],[11,"cmp","","",321,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"ordering"}}],[11,"new","std::sys::stdio","",324,{"inputs":[{"name":"stdin"}],"output":{"name":"result"}}],[11,"read","","",324,null],[11,"new","","",325,{"inputs":[{"name":"stdout"}],"output":{"name":"result"}}],[11,"write","","",325,null],[11,"new","","",326,{"inputs":[{"name":"stderr"}],"output":{"name":"result"}}],[11,"write","","",326,null],[11,"write","","",326,null],[11,"flush","","",326,{"inputs":[{"name":"stderr"}],"output":{"name":"result"}}],[11,"clone","std::panicking","",327,{"inputs":[{"name":"handler"}],"output":{"name":"handler"}}],[11,"payload","","Returns the payload associated with the panic.",328,{"inputs":[{"name":"panicinfo"}],"output":{"name":"any"}}],[11,"location","","Returns information about the location from which the panic originated,\nif available.",328,{"inputs":[{"name":"panicinfo"}],"output":{"name":"option"}}],[11,"file","","Returns the name of the source file from which the panic originated.",329,{"inputs":[{"name":"location"}],"output":{"name":"str"}}],[11,"line","","Returns the line number from which the panic originated.",329,{"inputs":[{"name":"location"}],"output":{"name":"u32"}}],[11,"new","std::rand::reader","Create a new `ReaderRng` from a `Read`.",330,{"inputs":[{"name":"readerrng"},{"name":"r"}],"output":{"name":"readerrng"}}],[11,"next_u32","","",330,{"inputs":[{"name":"readerrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",330,{"inputs":[{"name":"readerrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",330,null],[11,"clone","std::rand","",331,{"inputs":[{"name":"stdrng"}],"output":{"name":"stdrng"}}],[11,"new","","Create a randomly seeded instance of `StdRng`.",331,{"inputs":[{"name":"stdrng"}],"output":{"name":"result"}}],[11,"next_u32","","",331,{"inputs":[{"name":"stdrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",331,{"inputs":[{"name":"stdrng"}],"output":{"name":"u64"}}],[11,"reseed","","",331,null],[11,"from_seed","","",331,null],[11,"reseed","","",332,null],[11,"clone","","",333,{"inputs":[{"name":"threadrng"}],"output":{"name":"threadrng"}}],[11,"next_u32","","",333,{"inputs":[{"name":"threadrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",333,{"inputs":[{"name":"threadrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",333,null],[11,"new","","Create a new `OsRng`.",334,{"inputs":[{"name":"osrng"}],"output":{"name":"result"}}],[11,"next_u32","","",334,{"inputs":[{"name":"osrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",334,{"inputs":[{"name":"osrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",334,null],[11,"fmt","shared_library::dynamic_library","",335,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",335,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is","","Returns true if the boxed type is the same as `T`",335,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",335,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",335,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",335,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",335,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",335,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"hash","core::any","",336,null],[11,"fmt","","",336,{"inputs":[{"name":"typeid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",336,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"ne","","",336,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"clone","","",336,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",336,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"new","core::cell","Creates a new `Cell` containing the given value.",337,{"inputs":[{"name":"cell"},{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",337,{"inputs":[{"name":"cell"}],"output":{"name":"t"}}],[11,"set","","Sets the contained value.",337,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",337,{"inputs":[{"name":"cell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",337,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"default","","",337,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"eq","","",337,{"inputs":[{"name":"cell"},{"name":"cell"}],"output":{"name":"bool"}}],[11,"fmt","","",338,{"inputs":[{"name":"borrowstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",338,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"ne","","",338,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"clone","","",338,{"inputs":[{"name":"borrowstate"}],"output":{"name":"borrowstate"}}],[11,"new","","Creates a new `RefCell` containing `value`.",339,{"inputs":[{"name":"refcell"},{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",339,{"inputs":[{"name":"refcell"}],"output":{"name":"t"}}],[11,"borrow_state","","Query the current state of this `RefCell`",339,{"inputs":[{"name":"refcell"}],"output":{"name":"borrowstate"}}],[11,"borrow","","Immutably borrows the wrapped value.",339,{"inputs":[{"name":"refcell"}],"output":{"name":"ref"}}],[11,"borrow_mut","","Mutably borrows the wrapped value.",339,{"inputs":[{"name":"refcell"}],"output":{"name":"refmut"}}],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",339,{"inputs":[{"name":"refcell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",339,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"default","","",339,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"eq","","",339,{"inputs":[{"name":"refcell"},{"name":"refcell"}],"output":{"name":"bool"}}],[11,"drop","","",340,null],[11,"clone","","",340,{"inputs":[{"name":"borrowref"}],"output":{"name":"borrowref"}}],[11,"deref","","",341,{"inputs":[{"name":"ref"}],"output":{"name":"t"}}],[11,"clone","","Copies a `Ref`.",341,{"inputs":[{"name":"ref"},{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",341,{"inputs":[{"name":"ref"},{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"filter_map","","Make a new `Ref` for an optional component of the borrowed data, e.g. an\nenum variant.",341,{"inputs":[{"name":"ref"},{"name":"ref"},{"name":"f"}],"output":{"name":"option"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",342,{"inputs":[{"name":"refmut"},{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"filter_map","","Make a new `RefMut` for an optional component of the borrowed data, e.g.\nan enum variant.",342,{"inputs":[{"name":"refmut"},{"name":"refmut"},{"name":"f"}],"output":{"name":"option"}}],[11,"drop","","",343,null],[11,"deref","","",342,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"deref_mut","","",342,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",344,{"inputs":[{"name":"unsafecell"},{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",344,{"inputs":[{"name":"unsafecell"}],"output":{"name":"t"}}],[11,"get","","Gets a mutable pointer to the wrapped value.",344,null],[11,"fmt","core::cmp","",345,{"inputs":[{"name":"ordering"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",345,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"ne","","",345,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"clone","","",345,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"reverse","","Reverse the `Ordering`.",345,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"cmp","","",345,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",345,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"option"}}],[11,"new","core::hash::sip","Creates a new `SipHasher` with the two initial keys set to 0.",346,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",346,{"inputs":[{"name":"siphasher"},{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",346,null],[11,"finish","","",346,{"inputs":[{"name":"siphasher"}],"output":{"name":"u64"}}],[11,"clone","","",346,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"default","","",346,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"build_hasher","core::hash","",347,{"inputs":[{"name":"buildhasherdefault"}],"output":{"name":"h"}}],[11,"clone","","",347,{"inputs":[{"name":"buildhasherdefault"}],"output":{"name":"buildhasherdefault"}}],[11,"default","","",347,{"inputs":[{"name":"buildhasherdefault"}],"output":{"name":"buildhasherdefault"}}],[11,"clone","core::iter","",348,{"inputs":[{"name":"rev"}],"output":{"name":"rev"}}],[11,"next","","",348,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"size_hint","","",348,null],[11,"next_back","","",348,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"clone","","",349,{"inputs":[{"name":"cloned"}],"output":{"name":"cloned"}}],[11,"next","","",349,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"size_hint","","",349,null],[11,"next_back","","",349,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"clone","","",350,{"inputs":[{"name":"cycle"}],"output":{"name":"cycle"}}],[11,"next","","",350,{"inputs":[{"name":"cycle"}],"output":{"name":"option"}}],[11,"size_hint","","",350,null],[11,"clone","","",351,{"inputs":[{"name":"chain"}],"output":{"name":"chain"}}],[11,"clone","","",352,{"inputs":[{"name":"chainstate"}],"output":{"name":"chainstate"}}],[11,"next","","",351,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"count","","",351,{"inputs":[{"name":"chain"}],"output":{"name":"usize"}}],[11,"nth","","",351,{"inputs":[{"name":"chain"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",351,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"size_hint","","",351,null],[11,"next_back","","",351,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"clone","","",353,{"inputs":[{"name":"zip"}],"output":{"name":"zip"}}],[11,"next","","",353,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",353,null],[11,"next_back","","",353,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"clone","","",354,{"inputs":[{"name":"map"}],"output":{"name":"map"}}],[11,"next","","",354,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"size_hint","","",354,null],[11,"next_back","","",354,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"clone","","",355,{"inputs":[{"name":"filter"}],"output":{"name":"filter"}}],[11,"next","","",355,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"size_hint","","",355,null],[11,"next_back","","",355,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"clone","","",356,{"inputs":[{"name":"filtermap"}],"output":{"name":"filtermap"}}],[11,"next","","",356,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"size_hint","","",356,null],[11,"next_back","","",356,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"clone","","",357,{"inputs":[{"name":"enumerate"}],"output":{"name":"enumerate"}}],[11,"next","","# Overflow Behavior",357,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"size_hint","","",357,null],[11,"nth","","",357,{"inputs":[{"name":"enumerate"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",357,{"inputs":[{"name":"enumerate"}],"output":{"name":"usize"}}],[11,"next_back","","",357,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"clone","","",358,{"inputs":[{"name":"peekable"}],"output":{"name":"peekable"}}],[11,"next","","",358,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"count","","",358,{"inputs":[{"name":"peekable"}],"output":{"name":"usize"}}],[11,"nth","","",358,{"inputs":[{"name":"peekable"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",358,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"size_hint","","",358,null],[11,"peek","","Returns a reference to the next() value without advancing the iterator.",358,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"is_empty","","Checks if the iterator has finished iterating.",358,{"inputs":[{"name":"peekable"}],"output":{"name":"bool"}}],[11,"clone","","",359,{"inputs":[{"name":"skipwhile"}],"output":{"name":"skipwhile"}}],[11,"next","","",359,{"inputs":[{"name":"skipwhile"}],"output":{"name":"option"}}],[11,"size_hint","","",359,null],[11,"clone","","",360,{"inputs":[{"name":"takewhile"}],"output":{"name":"takewhile"}}],[11,"next","","",360,{"inputs":[{"name":"takewhile"}],"output":{"name":"option"}}],[11,"size_hint","","",360,null],[11,"clone","","",361,{"inputs":[{"name":"skip"}],"output":{"name":"skip"}}],[11,"next","","",361,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"nth","","",361,{"inputs":[{"name":"skip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",361,{"inputs":[{"name":"skip"}],"output":{"name":"usize"}}],[11,"last","","",361,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"size_hint","","",361,null],[11,"clone","","",362,{"inputs":[{"name":"take"}],"output":{"name":"take"}}],[11,"next","","",362,{"inputs":[{"name":"take"}],"output":{"name":"option"}}],[11,"nth","","",362,{"inputs":[{"name":"take"},{"name":"usize"}],"output":{"name":"option"}}],[11,"size_hint","","",362,null],[11,"clone","","",363,{"inputs":[{"name":"scan"}],"output":{"name":"scan"}}],[11,"next","","",363,{"inputs":[{"name":"scan"}],"output":{"name":"option"}}],[11,"size_hint","","",363,null],[11,"clone","","",364,{"inputs":[{"name":"flatmap"}],"output":{"name":"flatmap"}}],[11,"next","","",364,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"size_hint","","",364,null],[11,"next_back","","",364,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"clone","","",365,{"inputs":[{"name":"fuse"}],"output":{"name":"fuse"}}],[11,"next","","",365,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"nth","","",365,{"inputs":[{"name":"fuse"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",365,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"count","","",365,{"inputs":[{"name":"fuse"}],"output":{"name":"usize"}}],[11,"size_hint","","",365,null],[11,"next_back","","",365,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"clone","","",366,{"inputs":[{"name":"inspect"}],"output":{"name":"inspect"}}],[11,"next","","",366,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"size_hint","","",366,null],[11,"next_back","","",366,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"clone","","",367,{"inputs":[{"name":"stepby"}],"output":{"name":"stepby"}}],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",368,{"inputs":[{"name":"rangefrom"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",369,{"inputs":[{"name":"range"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"next","core::iter","",367,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",367,null],[11,"clone","","",370,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"rangeinclusive"}}],[11,"next","","",370,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"size_hint","","",370,null],[11,"next_back","","",370,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"next","","",367,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",367,null],[11,"next","core::ops","",369,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"size_hint","","",369,null],[11,"next_back","","",369,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next","","",368,{"inputs":[{"name":"rangefrom"}],"output":{"name":"option"}}],[11,"clone","core::iter","",371,{"inputs":[{"name":"repeat"}],"output":{"name":"repeat"}}],[11,"next","","",371,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"size_hint","","",371,null],[11,"next_back","","",371,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"next","","",372,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"size_hint","","",372,null],[11,"next_back","","",372,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"len","","",372,{"inputs":[{"name":"empty"}],"output":{"name":"usize"}}],[11,"clone","","",372,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"default","","",372,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"clone","","",373,{"inputs":[{"name":"once"}],"output":{"name":"once"}}],[11,"next","","",373,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"size_hint","","",373,null],[11,"next_back","","",373,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"len","","",373,{"inputs":[{"name":"once"}],"output":{"name":"usize"}}],[11,"hash","core::marker","",374,null],[11,"eq","","",374,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",374,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"option"}}],[11,"cmp","","",374,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"ordering"}}],[11,"clone","","",374,{"inputs":[{"name":"phantomdata"}],"output":{"name":"phantomdata"}}],[11,"default","","",374,{"inputs":[{"name":"phantomdata"}],"output":{"name":"phantomdata"}}],[11,"eq","core::ops","",375,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"ne","","",375,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"clone","","",375,{"inputs":[{"name":"rangefull"}],"output":{"name":"rangefull"}}],[11,"fmt","","",375,{"inputs":[{"name":"rangefull"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",369,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"ne","","",369,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"clone","","",369,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"fmt","","",369,{"inputs":[{"name":"range"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",368,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"ne","","",368,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"clone","","",368,{"inputs":[{"name":"rangefrom"}],"output":{"name":"rangefrom"}}],[11,"fmt","","",368,{"inputs":[{"name":"rangefrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",376,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"ne","","",376,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"clone","","",376,{"inputs":[{"name":"rangeto"}],"output":{"name":"rangeto"}}],[11,"fmt","","",376,{"inputs":[{"name":"rangeto"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","core::ptr","Creates a new `Unique`.",377,null],[11,"get","","Dereferences the content.",377,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"get_mut","","Mutably dereferences the content.",377,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"deref","","",377,null],[11,"fmt","","",377,{"inputs":[{"name":"unique"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `Shared`.",378,null],[11,"clone","","",378,{"inputs":[{"name":"shared"}],"output":{"name":"shared"}}],[11,"deref","","",378,null],[11,"fmt","","",378,{"inputs":[{"name":"shared"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","core::raw","",379,{"inputs":[{"name":"slice"}],"output":{"name":"slice"}}],[11,"clone","","",380,{"inputs":[{"name":"traitobject"}],"output":{"name":"traitobject"}}],[11,"hash","core::result","",381,null],[11,"fmt","","",381,{"inputs":[{"name":"result"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",381,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",381,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"option"}}],[11,"lt","","",381,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"le","","",381,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"gt","","",381,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ge","","",381,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"eq","","",381,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ne","","",381,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"clone","","",381,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"is_ok","","Returns true if the result is `Ok`",381,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"is_err","","Returns true if the result is `Err`",381,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"ok","","Converts from `Result&lt;T, E&gt;` to `Option&lt;T&gt;`",381,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"err","","Converts from `Result&lt;T, E&gt;` to `Option&lt;E&gt;`",381,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"as_ref","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;T, &amp;E&gt;`",381,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_mut","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;mut T, &amp;mut E&gt;`",381,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"map","","Maps a `Result&lt;T, E&gt;` to `Result&lt;U, E&gt;` by applying a function to a\ncontained `Ok` value, leaving an `Err` value untouched.",381,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"map_err","","Maps a `Result&lt;T, E&gt;` to `Result&lt;T, F&gt;` by applying a function to a\ncontained `Err` value, leaving an `Ok` value untouched.",381,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",381,{"inputs":[{"name":"result"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",381,{"inputs":[{"name":"result"}],"output":{"name":"itermut"}}],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",381,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",381,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",381,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",381,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",381,{"inputs":[{"name":"result"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",381,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"t"}}],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",381,{"inputs":[{"name":"result"}],"output":{"name":"t"}}],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",381,{"inputs":[{"name":"result"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",381,{"inputs":[{"name":"result"}],"output":{"name":"e"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",381,{"inputs":[{"name":"result"}],"output":{"name":"intoiter"}}],[11,"next","","",382,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",382,null],[11,"next_back","","",382,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",382,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",383,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",383,null],[11,"next_back","","",383,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",384,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",384,null],[11,"next_back","","",384,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",381,{"inputs":[{"name":"result"},{"name":"i"}],"output":{"name":"result"}}],[11,"hash","core::option","",385,null],[11,"fmt","","",385,{"inputs":[{"name":"option"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",385,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",385,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"lt","","",385,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"le","","",385,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"gt","","",385,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ge","","",385,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"eq","","",385,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ne","","",385,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"clone","","",385,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"is_some","","Returns `true` if the option is a `Some` value",385,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"is_none","","Returns `true` if the option is a `None` value",385,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"as_ref","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;T&gt;`",385,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;mut T&gt;`",385,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"expect","","Unwraps an option, yielding the content of a `Some`.",385,{"inputs":[{"name":"option"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap","","Moves the value `v` out of the `Option&lt;T&gt;` if it is `Some(v)`.",385,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"unwrap_or","","Returns the contained value or a default.",385,{"inputs":[{"name":"option"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",385,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"t"}}],[11,"map","","Maps an `Option&lt;T&gt;` to `Option&lt;U&gt;` by applying a function to a contained value",385,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",385,{"inputs":[{"name":"option"},{"name":"u"},{"name":"f"}],"output":{"name":"u"}}],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",385,{"inputs":[{"name":"option"},{"name":"d"},{"name":"f"}],"output":{"name":"u"}}],[11,"ok_or","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",385,{"inputs":[{"name":"option"},{"name":"e"}],"output":{"name":"result"}}],[11,"ok_or_else","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",385,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",385,{"inputs":[{"name":"option"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",385,{"inputs":[{"name":"option"}],"output":{"name":"itermut"}}],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",385,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",385,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",385,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",385,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",385,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"cloned","","Maps an `Option&lt;&amp;T&gt;` to an `Option&lt;T&gt;` by cloning the contents of the\noption.",385,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"unwrap_or_default","","Returns the contained value or a default",385,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"default","","",385,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",385,{"inputs":[{"name":"option"}],"output":{"name":"intoiter"}}],[11,"clone","","",386,{"inputs":[{"name":"item"}],"output":{"name":"item"}}],[11,"next","","",386,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"size_hint","","",386,null],[11,"next_back","","",386,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"next","","",387,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",387,null],[11,"next_back","","",387,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",387,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",388,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",388,null],[11,"next_back","","",388,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",389,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"next","","",389,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",389,null],[11,"next_back","","",389,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",385,{"inputs":[{"name":"option"},{"name":"i"}],"output":{"name":"option"}}],[11,"clone","alloc::boxed","",390,{"inputs":[{"name":"exchangeheapsingleton"}],"output":{"name":"exchangeheapsingleton"}}],[11,"pointer","","",391,null],[11,"make_place","","",391,{"inputs":[{"name":"intermediatebox"}],"output":{"name":"intermediatebox"}}],[11,"finalize","","",391,{"inputs":[{"name":"intermediatebox"}],"output":{"name":"box"}}],[11,"finalize","","",2,{"inputs":[{"name":"box"},{"name":"intermediatebox"}],"output":{"name":"box"}}],[11,"make_place","","",390,{"inputs":[{"name":"exchangeheapsingleton"}],"output":{"name":"intermediatebox"}}],[11,"drop","","",391,null],[11,"new","","Allocates memory on the heap and then places `x` into it.",2,{"inputs":[{"name":"box"},{"name":"t"}],"output":{"name":"box"}}],[11,"from_raw","","Constructs a box from a raw pointer.",2,null],[11,"into_raw","","Consumes the `Box`, returning the wrapped raw pointer.",2,null],[11,"default","","",2,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"default","","",2,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone","","Returns a new box with a `clone()` of this box&#39;s contents.",2,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone_from","","Copies `source`&#39;s contents into `self` without creating a new allocation.",2,null],[11,"clone","","",2,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"eq","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"option"}}],[11,"lt","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"le","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"ge","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"gt","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"cmp","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"ordering"}}],[11,"hash","","",2,null],[11,"from","","",2,{"inputs":[{"name":"box"},{"name":"t"}],"output":{"name":"box"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",2,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",2,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",2,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"deref_mut","","",2,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"next","","",2,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"size_hint","","",2,null],[11,"next_back","","",2,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"call_once","","",2,{"inputs":[{"name":"box"},{"name":"a"}],"output":{"name":"r"}}],[11,"call_once","","",2,{"inputs":[{"name":"box"},{"name":"a"}],"output":{"name":"r"}}],[11,"clone","","",2,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"borrow","","",2,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"borrow_mut","","",2,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"as_ref","","",2,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"as_mut","","",2,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"new","alloc::rc","Constructs a new `Rc&lt;T&gt;`.",392,{"inputs":[{"name":"rc"},{"name":"t"}],"output":{"name":"rc"}}],[11,"try_unwrap","","Unwraps the contained value if the `Rc&lt;T&gt;` has only one strong reference.\nThis will succeed even if there are outstanding weak references.",392,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"result"}}],[11,"would_unwrap","","Checks if `Rc::try_unwrap` would return `Ok`.",392,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"downgrade","","Downgrades the `Rc&lt;T&gt;` to a `Weak&lt;T&gt;` reference.",392,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"weak"}}],[11,"weak_count","","Get the number of weak references to this value.",392,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"usize"}}],[11,"strong_count","","Get the number of strong references to this value.",392,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"usize"}}],[11,"is_unique","","Returns true if there are no other `Rc` or `Weak&lt;T&gt;` values that share\nthe same inner value.",392,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the contained value if the `Rc&lt;T&gt;` has\none strong reference and no weak references.",392,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"option"}}],[11,"make_mut","","Make a mutable reference into the given `Rc&lt;T&gt;` by cloning the inner\ndata if the `Rc&lt;T&gt;` doesn&#39;t have one strong reference and no weak\nreferences.",392,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"t"}}],[11,"deref","","",392,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"drop","","Drops the `Rc&lt;T&gt;`.",392,null],[11,"clone","","Makes a clone of the `Rc&lt;T&gt;`.",392,{"inputs":[{"name":"rc"}],"output":{"name":"rc"}}],[11,"default","","Creates a new `Rc&lt;T&gt;`, with the `Default` value for `T`.",392,{"inputs":[{"name":"rc"}],"output":{"name":"rc"}}],[11,"eq","","Equality for two `Rc&lt;T&gt;`s.",392,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"ne","","Inequality for two `Rc&lt;T&gt;`s.",392,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"partial_cmp","","Partial comparison for two `Rc&lt;T&gt;`s.",392,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"option"}}],[11,"lt","","Less-than comparison for two `Rc&lt;T&gt;`s.",392,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"le","","&#39;Less-than or equal to&#39; comparison for two `Rc&lt;T&gt;`s.",392,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"gt","","Greater-than comparison for two `Rc&lt;T&gt;`s.",392,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"ge","","&#39;Greater-than or equal to&#39; comparison for two `Rc&lt;T&gt;`s.",392,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"cmp","","Comparison for two `Rc&lt;T&gt;`s.",392,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"ordering"}}],[11,"hash","","",392,null],[11,"fmt","","",392,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",392,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",392,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",392,{"inputs":[{"name":"rc"},{"name":"t"}],"output":{"name":"rc"}}],[11,"upgrade","","Upgrades a weak reference to a strong reference.",393,{"inputs":[{"name":"weak"}],"output":{"name":"option"}}],[11,"drop","","Drops the `Weak&lt;T&gt;`.",393,null],[11,"clone","","Makes a clone of the `Weak&lt;T&gt;`.",393,{"inputs":[{"name":"weak"}],"output":{"name":"weak"}}],[11,"fmt","","",393,{"inputs":[{"name":"weak"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Constructs a new `Weak&lt;T&gt;` without an accompanying instance of T.",393,{"inputs":[{"name":"weak"}],"output":{"name":"weak"}}],[11,"borrow","","",392,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"as_ref","","",392,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"borrow","collections::borrow","",162,{"inputs":[{"name":"cow"}],"output":{"name":"b"}}],[11,"clone","","",162,{"inputs":[{"name":"cow"}],"output":{"name":"cow"}}],[11,"to_mut","","Acquires a mutable reference to the owned form of the data.",162,null],[11,"into_owned","","Extracts the owned data.",162,null],[11,"deref","","",162,{"inputs":[{"name":"cow"}],"output":{"name":"b"}}],[11,"cmp","","",162,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"ordering"}}],[11,"eq","","",162,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",162,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"option"}}],[11,"fmt","","",162,{"inputs":[{"name":"cow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",162,{"inputs":[{"name":"cow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",162,null],[11,"into_cow","","",162,{"inputs":[{"name":"cow"}],"output":{"name":"cow"}}],[11,"as_ref","","",162,{"inputs":[{"name":"cow"}],"output":{"name":"t"}}],[11,"clone","core::fmt::rt::v1","",394,{"inputs":[{"name":"argument"}],"output":{"name":"argument"}}],[11,"clone","","",395,{"inputs":[{"name":"formatspec"}],"output":{"name":"formatspec"}}],[11,"eq","","",396,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"ne","","",396,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"clone","","",396,{"inputs":[{"name":"alignment"}],"output":{"name":"alignment"}}],[11,"clone","","",397,{"inputs":[{"name":"count"}],"output":{"name":"count"}}],[11,"clone","","",398,{"inputs":[{"name":"position"}],"output":{"name":"position"}}],[11,"borrow","collections::vec","",62,null],[11,"borrow_mut","","",62,null],[11,"clone","collections::str","",399,{"inputs":[{"name":"utf16units"}],"output":{"name":"utf16units"}}],[11,"next","","",399,{"inputs":[{"name":"utf16units"}],"output":{"name":"option"}}],[11,"size_hint","","",399,null],[11,"borrow","collections::string","",90,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"fmt","core::str::pattern","",400,{"inputs":[{"name":"searchstep"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",400,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"ne","","",400,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"clone","","",400,{"inputs":[{"name":"searchstep"}],"output":{"name":"searchstep"}}],[11,"clone","","",401,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"chareqsearcher"}}],[11,"into_searcher","","",402,{"inputs":[{"name":"chareqpattern"},{"name":"str"}],"output":{"name":"chareqsearcher"}}],[11,"haystack","","",401,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"str"}}],[11,"next","","",401,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"next_back","","",401,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"clone","","",403,{"inputs":[{"name":"charsearcher"}],"output":{"name":"charsearcher"}}],[11,"haystack","","",403,{"inputs":[{"name":"charsearcher"}],"output":{"name":"str"}}],[11,"next","","",403,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",403,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",403,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",403,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",403,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",403,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"clone","","",404,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"charslicesearcher"}}],[11,"haystack","","",404,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"str"}}],[11,"next","","",404,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",404,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",404,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",404,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",404,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",404,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"clone","","",405,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"charpredicatesearcher"}}],[11,"haystack","","",405,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"str"}}],[11,"next","","",405,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",405,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",405,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",405,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",405,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",405,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"fmt","","",406,{"inputs":[{"name":"strsearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",406,{"inputs":[{"name":"strsearcher"}],"output":{"name":"strsearcher"}}],[11,"fmt","","",407,{"inputs":[{"name":"strsearcherimpl"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",407,{"inputs":[{"name":"strsearcherimpl"}],"output":{"name":"strsearcherimpl"}}],[11,"fmt","","",408,{"inputs":[{"name":"emptyneedle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",408,{"inputs":[{"name":"emptyneedle"}],"output":{"name":"emptyneedle"}}],[11,"haystack","","",406,{"inputs":[{"name":"strsearcher"}],"output":{"name":"str"}}],[11,"next","","",406,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",406,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",406,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",406,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"fmt","","",409,{"inputs":[{"name":"twowaysearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",409,{"inputs":[{"name":"twowaysearcher"}],"output":{"name":"twowaysearcher"}}],[11,"use_early_reject","","",410,{"inputs":[{"name":"matchonly"}],"output":{"name":"bool"}}],[11,"rejecting","","",410,null],[11,"matching","","",410,null],[11,"use_early_reject","","",411,{"inputs":[{"name":"rejectandmatch"}],"output":{"name":"bool"}}],[11,"rejecting","","",411,null],[11,"matching","","",411,null],[11,"cmp","collections::string","",90,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",90,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"option"}}],[11,"lt","","",90,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"le","","",90,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"gt","","",90,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ge","","",90,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"fmt","","",7,{"inputs":[{"name":"fromutf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"fromutf16error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new empty `String`.",90,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"with_capacity","","Creates a new empty `String` with a particular capacity.",90,{"inputs":[{"name":"string"},{"name":"usize"}],"output":{"name":"string"}}],[11,"from_utf8","","Converts a vector of bytes to a `String`.",90,{"inputs":[{"name":"string"},{"name":"vec"}],"output":{"name":"result"}}],[11,"from_utf8_lossy","","Converts a slice of bytes to a string, including invalid characters.",90,null],[11,"from_utf16","","Decode a UTF-16 encoded vector `v` into a `String`, returning `Err`\nif `v` contains any invalid data.",90,null],[11,"from_utf16_lossy","","Decode a UTF-16 encoded vector `v` into a string, replacing\ninvalid data with the replacement character (U+FFFD).",90,null],[11,"from_raw_parts","","Creates a new `String` from a length, capacity, and pointer.",90,null],[11,"from_utf8_unchecked","","Converts a vector of bytes to a `String` without checking that the\nstring contains valid UTF-8.",90,{"inputs":[{"name":"string"},{"name":"vec"}],"output":{"name":"string"}}],[11,"into_bytes","","Converts a `String` into a byte vector.",90,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"as_str","","Extracts a string slice containing the entire string.",90,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"as_mut_str","","Extracts a string slice containing the entire string.",90,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"push_str","","Appends a given string slice onto the end of this `String`.",90,null],[11,"capacity","","Returns this `String`&#39;s capacity, in bytes.",90,{"inputs":[{"name":"string"}],"output":{"name":"usize"}}],[11,"reserve","","Ensures that this `String`&#39;s capacity is at least `additional` bytes\nlarger than its length.",90,null],[11,"reserve_exact","","Ensures that this `String`&#39;s capacity is `additional` bytes\nlarger than its length.",90,null],[11,"shrink_to_fit","","Shrinks the capacity of this `String` to match its length.",90,null],[11,"push","","Appends the given `char` to the end of this `String`.",90,null],[11,"as_bytes","","Returns a byte slice of this `String`&#39;s contents.",90,null],[11,"truncate","","Shortens this `String` to the specified length.",90,null],[11,"pop","","Removes the last character from the string buffer and returns it.",90,{"inputs":[{"name":"string"}],"output":{"name":"option"}}],[11,"remove","","Removes a `char` from this `String` at a byte position and returns it.",90,{"inputs":[{"name":"string"},{"name":"usize"}],"output":{"name":"char"}}],[11,"insert","","Inserts a character into this `String` at a byte position.",90,null],[11,"as_mut_vec","","Returns a mutable reference to the contents of this `String`.",90,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"len","","Returns the length of this `String`, in bytes.",90,{"inputs":[{"name":"string"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns `true` if this `String` has a length of zero.",90,{"inputs":[{"name":"string"}],"output":{"name":"bool"}}],[11,"clear","","Truncates this `String`, removing all contents.",90,null],[11,"drain","","Create a draining iterator that removes the specified range in the string\nand yields the removed chars.",90,{"inputs":[{"name":"string"},{"name":"r"}],"output":{"name":"drain"}}],[11,"into_boxed_str","","Converts this `String` into a `Box&lt;str&gt;`.",90,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"into_bytes","","Returns the bytes that were attempted to convert to a `String`.",7,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"vec"}}],[11,"utf8_error","","Fetch a `Utf8Error` to get more details about the conversion failure.",7,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"utf8error"}}],[11,"fmt","","",7,{"inputs":[{"name":"fromutf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"fromutf16error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",90,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"clone_from","","",90,null],[11,"from_iter","","",90,{"inputs":[{"name":"string"},{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",90,{"inputs":[{"name":"string"},{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",90,{"inputs":[{"name":"string"},{"name":"i"}],"output":{"name":"string"}}],[11,"extend","","",90,null],[11,"extend","","",90,null],[11,"extend","","",90,null],[11,"extend","","",90,null],[11,"eq","","",90,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ne","","",90,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"eq","","",90,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",90,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",90,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",90,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","collections::borrow","",162,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",162,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",162,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",162,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",162,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ne","","",162,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"bool"}}],[11,"eq","collections::string","",90,{"inputs":[{"name":"string"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"ne","","",90,{"inputs":[{"name":"string"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"default","","",90,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"fmt","","",90,{"inputs":[{"name":"string"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",90,{"inputs":[{"name":"string"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",90,null],[11,"add","","",90,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"string"}}],[11,"index","","",90,{"inputs":[{"name":"string"},{"name":"range"}],"output":{"name":"str"}}],[11,"index","","",90,{"inputs":[{"name":"string"},{"name":"rangeto"}],"output":{"name":"str"}}],[11,"index","","",90,{"inputs":[{"name":"string"},{"name":"rangefrom"}],"output":{"name":"str"}}],[11,"index","","",90,{"inputs":[{"name":"string"},{"name":"rangefull"}],"output":{"name":"str"}}],[11,"index_mut","","",90,{"inputs":[{"name":"string"},{"name":"range"}],"output":{"name":"str"}}],[11,"index_mut","","",90,{"inputs":[{"name":"string"},{"name":"rangeto"}],"output":{"name":"str"}}],[11,"index_mut","","",90,{"inputs":[{"name":"string"},{"name":"rangefrom"}],"output":{"name":"str"}}],[11,"index_mut","","",90,{"inputs":[{"name":"string"},{"name":"rangefull"}],"output":{"name":"str"}}],[11,"deref","","",90,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"deref_mut","","",90,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"from_str","","",90,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",9,{"inputs":[{"name":"parseerror"}],"output":{"name":"parseerror"}}],[11,"fmt","","",9,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",9,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",9,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"as_ref","","",90,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"as_ref","","",90,null],[11,"from","","",90,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"string"}}],[11,"from","collections::borrow","",162,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"cow"}}],[11,"from","","",162,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"cow"}}],[11,"into","collections::string","",90,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"into_cow","","",90,{"inputs":[{"name":"string"}],"output":{"name":"cow"}}],[11,"write_str","","",90,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_char","","",90,{"inputs":[{"name":"string"},{"name":"char"}],"output":{"name":"result"}}],[11,"drop","","",412,null],[11,"next","","",412,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",412,null],[11,"next_back","","",412,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"new","collections::vec","Constructs a new, empty `Vec&lt;T&gt;`.",62,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"with_capacity","","Constructs a new, empty `Vec&lt;T&gt;` with the specified capacity.",62,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"vec"}}],[11,"from_raw_parts","","Creates a `Vec&lt;T&gt;` directly from the raw components of another vector.",62,null],[11,"capacity","","Returns the number of elements the vector can hold without\nreallocating.",62,{"inputs":[{"name":"vec"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the given `Vec&lt;T&gt;`. The collection may reserve more space to avoid\nfrequent reallocations.",62,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to\nbe inserted in the given `Vec&lt;T&gt;`. Does nothing if the capacity is already\nsufficient.",62,null],[11,"shrink_to_fit","","Shrinks the capacity of the vector as much as possible.",62,null],[11,"into_boxed_slice","","Converts the vector into Box&lt;[T]&gt;.",62,{"inputs":[{"name":"vec"}],"output":{"name":"box"}}],[11,"truncate","","Shorten a vector to be `len` elements long, dropping excess elements.",62,null],[11,"as_slice","","Extracts a slice containing the entire vector.",62,null],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",62,null],[11,"set_len","","Sets the length of a vector.",62,null],[11,"swap_remove","","Removes an element from anywhere in the vector and return it, replacing\nit with the last element.",62,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"insert","","Inserts an element at position `index` within the vector, shifting all\nelements after it to the right.",62,null],[11,"remove","","Removes and returns the element at position `index` within the vector,\nshifting all elements after it to the left.",62,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"retain","","Retains only the elements specified by the predicate.",62,null],[11,"push","","Appends an element to the back of a collection.",62,null],[11,"pop","","Removes the last element from a vector and returns it, or `None` if it\nis empty.",62,{"inputs":[{"name":"vec"}],"output":{"name":"option"}}],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",62,null],[11,"drain","","Create a draining iterator that removes the specified range in the vector\nand yields the removed items.",62,{"inputs":[{"name":"vec"},{"name":"r"}],"output":{"name":"drain"}}],[11,"clear","","Clears the vector, removing all values.",62,null],[11,"len","","Returns the number of elements in the vector.",62,{"inputs":[{"name":"vec"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns `true` if the vector contains no elements.",62,{"inputs":[{"name":"vec"}],"output":{"name":"bool"}}],[11,"split_off","","Splits the collection into two at the given index.",62,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"vec"}}],[11,"resize","","Resizes the `Vec` in-place so that `len()` is equal to `new_len`.",62,null],[11,"push_all","","",62,null],[11,"extend_from_slice","","Appends all elements in a slice to the `Vec`.",62,null],[11,"dedup","","Removes consecutive repeated elements in the vector.",62,null],[11,"clone","","",62,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"clone_from","","",62,null],[11,"hash","","",62,null],[11,"index","","",62,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index_mut","","",62,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index","","",62,null],[11,"index","","",62,null],[11,"index","","",62,null],[11,"index","","",62,null],[11,"index_mut","","",62,null],[11,"index_mut","","",62,null],[11,"index_mut","","",62,null],[11,"index_mut","","",62,null],[11,"deref","","",62,null],[11,"deref_mut","","",62,null],[11,"from_iter","","",62,{"inputs":[{"name":"vec"},{"name":"i"}],"output":{"name":"vec"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe vector (from start to end). The vector cannot be used after calling\nthis.",62,{"inputs":[{"name":"vec"}],"output":{"name":"intoiter"}}],[11,"extend","","",62,null],[11,"extend","","",62,null],[11,"eq","","",62,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"ne","","",62,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","collections::borrow","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,{"inputs":[{"name":"cow"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"ne","","",162,{"inputs":[{"name":"cow"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"eq","collections::vec","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"partial_cmp","","",62,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"option"}}],[11,"cmp","","",62,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"ordering"}}],[11,"drop","","",62,null],[11,"default","","",62,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"fmt","","",62,{"inputs":[{"name":"vec"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",62,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"as_mut","","",62,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"as_ref","","",62,null],[11,"as_mut","","",62,null],[11,"from","","",62,null],[11,"from","","",62,{"inputs":[{"name":"vec"},{"name":"str"}],"output":{"name":"vec"}}],[11,"from","collections::borrow","",162,null],[11,"from","","",162,{"inputs":[{"name":"cow"},{"name":"vec"}],"output":{"name":"cow"}}],[11,"from_iter","","",162,{"inputs":[{"name":"cow"},{"name":"i"}],"output":{"name":"cow"}}],[11,"into_cow","collections::vec","",62,{"inputs":[{"name":"vec"}],"output":{"name":"cow"}}],[11,"next","","",413,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",413,null],[11,"count","","",413,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next_back","","",413,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"drop","","",413,null],[11,"next","","",414,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",414,null],[11,"next_back","","",414,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"drop","","",414,null],[11,"next","rustc_unicode::char","",415,{"inputs":[{"name":"tolowercase"}],"output":{"name":"option"}}],[11,"next","","",416,{"inputs":[{"name":"touppercase"}],"output":{"name":"option"}}],[11,"next","","",417,{"inputs":[{"name":"casemappingiter"}],"output":{"name":"option"}}],[11,"clone","","",418,{"inputs":[{"name":"decodeutf16"}],"output":{"name":"decodeutf16"}}],[11,"next","","",418,{"inputs":[{"name":"decodeutf16"}],"output":{"name":"option"}}],[11,"size_hint","","",418,null],[11,"drop","shared_library::dynamic_library","",419,{"inputs":[{"name":"dynamiclibrary"}],"output":null}],[11,"open","","Lazily open a dynamic library. When passed None it gives a\nhandle to the calling process",419,{"inputs":[{"name":"dynamiclibrary"},{"name":"option"}],"output":{"name":"result"}}],[11,"prepend_search_path","","Prepends a path to this process&#39;s search path for dynamic libraries",419,{"inputs":[{"name":"dynamiclibrary"},{"name":"path"}],"output":null}],[11,"create_path","","From a slice of paths, create a new vector which is suitable to be an\nenvironment variable for this platforms dylib search path.",419,null],[11,"envvar","","Returns the environment variable for this process&#39;s dynamic library\nsearch path",419,{"inputs":[{"name":"dynamiclibrary"}],"output":{"name":"str"}}],[11,"search_path","","Returns the current search path for dynamic libraries being used by this\nprocess",419,{"inputs":[{"name":"dynamiclibrary"}],"output":{"name":"vec"}}],[11,"symbol","","Access the value at the symbol of the dynamic library",419,{"inputs":[{"name":"dynamiclibrary"},{"name":"str"}],"output":{"name":"result"}}],[11,"clone","shared_library","",0,{"inputs":[{"name":"loadingerror"}],"output":{"name":"loadingerror"}}],[11,"fmt","","",0,{"inputs":[{"name":"loadingerror"},{"name":"formatter"}],"output":{"name":"result"}}],[14,"shared_library!","","",null,null]],"paths":[[4,"LoadingError"],[3,"Mutex"],[3,"Box"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"ParseIntError"],[3,"ParseFloatError"],[3,"FromUtf8Error"],[3,"FromUtf16Error"],[4,"ParseError"],[8,"Error"],[3,"EscapeDefault"],[3,"Wrapping"],[4,"LocalKeyState"],[3,"LocalKey"],[3,"Key"],[3,"Key"],[3,"ScopedKey"],[3,"KeyInner"],[3,"Builder"],[3,"Thread"],[3,"JoinHandle"],[3,"RawBucket"],[3,"Bucket"],[3,"SafeHash"],[3,"FullBucket"],[3,"EmptyBucket"],[4,"BucketState"],[3,"GapThenFull"],[3,"RawTable"],[3,"RawBuckets"],[3,"RevMoveBuckets"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"DefaultResizePolicy"],[3,"HashMap"],[3,"Iter"],[3,"Keys"],[3,"Values"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[4,"Entry"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"RandomState"],[3,"HashSet"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Union"],[3,"DefaultState"],[3,"BinaryHeap"],[3,"Hole"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Vec"],[3,"Iter"],[3,"IntoIter"],[3,"Rawlink"],[3,"LinkedList"],[3,"IterMut"],[3,"FrontPlace"],[3,"BackPlace"],[3,"VecDeque"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"DynamicLibrary"],[3,"Vars"],[3,"VarsOs"],[4,"VarError"],[3,"SplitPaths"],[3,"JoinPathsError"],[3,"Args"],[3,"ArgsOs"],[3,"CString"],[3,"CStr"],[3,"NulError"],[3,"IntoStringError"],[3,"Error"],[3,"OsString"],[3,"OsStr"],[3,"String"],[3,"Metadata"],[3,"OpenOptions"],[3,"Permissions"],[3,"FileType"],[3,"File"],[3,"ReadDir"],[3,"DirEntry"],[3,"WalkDir"],[3,"DirBuilder"],[3,"BufReader"],[3,"IntoInnerError"],[3,"BufWriter"],[3,"LineWriter"],[3,"Cursor"],[3,"Custom"],[4,"ErrorKind"],[4,"Repr"],[3,"Lazy"],[3,"Empty"],[3,"Repeat"],[3,"Sink"],[3,"StdinRaw"],[3,"StdoutRaw"],[3,"StderrRaw"],[4,"Maybe"],[3,"Stdin"],[3,"StdinLock"],[3,"Stdout"],[3,"StdoutLock"],[3,"Stderr"],[3,"StderrLock"],[4,"SeekFrom"],[3,"Broadcast"],[3,"Chain"],[3,"Take"],[3,"Tee"],[3,"Bytes"],[4,"CharsError"],[3,"Chars"],[3,"Split"],[3,"Lines"],[4,"IpAddr"],[4,"Ipv6MulticastScope"],[3,"Ipv4Addr"],[3,"Ipv6Addr"],[4,"SocketAddr"],[3,"SocketAddrV4"],[3,"SocketAddrV6"],[3,"TcpStream"],[3,"TcpListener"],[3,"Incoming"],[3,"UdpSocket"],[3,"AddrParseError"],[4,"Shutdown"],[3,"LookupHost"],[3,"stat"],[3,"Command"],[3,"ExitStatus"],[3,"Stdio"],[3,"ChildStdin"],[3,"ChildStdout"],[3,"ChildStderr"],[3,"AssertRecoverSafe"],[4,"Prefix"],[4,"State"],[3,"PrefixComponent"],[4,"Component"],[3,"Components"],[3,"Iter"],[3,"PathBuf"],[3,"Path"],[4,"Cow"],[3,"StripPrefixError"],[3,"Display"],[3,"Output"],[3,"Child"],[3,"SignalToken"],[3,"WaitToken"],[3,"Packet"],[4,"StartResult"],[3,"Select"],[3,"Handle"],[3,"Packets"],[3,"Packet"],[3,"Packet"],[4,"Failure"],[3,"Packet"],[3,"Queue"],[3,"Queue"],[3,"SendError"],[3,"RecvError"],[4,"TryRecvError"],[4,"TrySendError"],[3,"Sender"],[3,"SyncSender"],[3,"Receiver"],[3,"Iter"],[3,"IntoIter"],[3,"Barrier"],[3,"BarrierWaitResult"],[3,"WaitTimeoutResult"],[3,"Condvar"],[3,"StaticCondvar"],[3,"StaticMutex"],[3,"MutexGuard"],[3,"Once"],[3,"RwLock"],[3,"StaticRwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"Semaphore"],[3,"SemaphoreGuard"],[3,"AtomicBool"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"AtomicPtr"],[4,"Ordering"],[3,"Duration"],[3,"Instant"],[3,"SystemTime"],[3,"SystemTimeError"],[3,"Condvar"],[3,"EHContext"],[3,"DwarfReader"],[4,"_Unwind_Action"],[4,"_Unwind_Reason_Code"],[3,"Mutex"],[3,"LookupHost"],[3,"TcpStream"],[3,"TcpListener"],[3,"UdpSocket"],[3,"Flag"],[3,"PoisonError"],[4,"TryLockError"],[3,"ReentrantMutex"],[3,"ReentrantMutexGuard"],[3,"RWLock"],[3,"StaticKey"],[3,"Key"],[3,"CodePoint"],[3,"Wtf8Buf"],[3,"Wtf8"],[3,"Wtf8CodePoints"],[3,"EncodeWide"],[3,"Weak"],[3,"Condvar"],[3,"FileDesc"],[3,"FileAttr"],[3,"OpenOptions"],[3,"FilePermissions"],[3,"FileType"],[3,"ReadDir"],[3,"Dir"],[3,"DirEntry"],[3,"File"],[3,"DirBuilder"],[3,"Mutex"],[3,"ReentrantMutex"],[3,"Socket"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_ll"],[3,"fd_set"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"passwd"],[3,"statvfs"],[3,"sockaddr_nl"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"fsid_t"],[3,"mq_attr"],[3,"cpu_set_t"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"ucred"],[3,"statfs"],[3,"msghdr"],[3,"termios"],[3,"flock"],[3,"sigset_t"],[3,"stat"],[3,"stat64"],[3,"pthread_attr_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"SplitPaths"],[3,"JoinPathsError"],[3,"Args"],[3,"Env"],[3,"Buf"],[3,"Slice"],[3,"AnonPipe"],[3,"Command"],[3,"ExitStatus"],[3,"Process"],[3,"OsRng"],[3,"RWLock"],[3,"Handler"],[3,"Thread"],[3,"Timespec"],[3,"Instant"],[3,"SystemTime"],[3,"Stdin"],[3,"Stdout"],[3,"Stderr"],[4,"Handler"],[3,"PanicInfo"],[3,"Location"],[3,"ReaderRng"],[3,"StdRng"],[3,"ThreadRngReseeder"],[3,"ThreadRng"],[3,"OsRng"],[8,"Any"],[3,"TypeId"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"BorrowRef"],[3,"Ref"],[3,"RefMut"],[3,"BorrowRefMut"],[3,"UnsafeCell"],[4,"Ordering"],[3,"SipHasher"],[3,"BuildHasherDefault"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[4,"ChainState"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"StepBy"],[3,"RangeFrom"],[3,"Range"],[3,"RangeInclusive"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[3,"PhantomData"],[3,"RangeFull"],[3,"RangeTo"],[3,"Unique"],[3,"Shared"],[3,"Slice"],[3,"TraitObject"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[4,"Option"],[3,"Item"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"ExchangeHeapSingleton"],[3,"IntermediateBox"],[3,"Rc"],[3,"Weak"],[3,"Argument"],[3,"FormatSpec"],[4,"Alignment"],[4,"Count"],[4,"Position"],[3,"Utf16Units"],[4,"SearchStep"],[3,"CharEqSearcher"],[3,"CharEqPattern"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[4,"StrSearcherImpl"],[3,"EmptyNeedle"],[3,"TwoWaySearcher"],[4,"MatchOnly"],[4,"RejectAndMatch"],[3,"Drain"],[3,"IntoIter"],[3,"Drain"],[3,"ToLowercase"],[3,"ToUppercase"],[4,"CaseMappingIter"],[3,"DecodeUtf16"],[3,"DynamicLibrary"]]};
searchIndex['libc'] = {"items":[[3,"utimbuf","libc","",null,null],[12,"actime","","",0,null],[12,"modtime","","",0,null],[3,"timeval","","",null,null],[12,"tv_sec","","",1,null],[12,"tv_usec","","",1,null],[3,"timespec","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_nsec","","",2,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",3,null],[12,"rlim_max","","",3,null],[3,"rusage","","",null,null],[12,"ru_utime","","",4,null],[12,"ru_stime","","",4,null],[12,"ru_maxrss","","",4,null],[12,"ru_ixrss","","",4,null],[12,"ru_idrss","","",4,null],[12,"ru_isrss","","",4,null],[12,"ru_minflt","","",4,null],[12,"ru_majflt","","",4,null],[12,"ru_nswap","","",4,null],[12,"ru_inblock","","",4,null],[12,"ru_oublock","","",4,null],[12,"ru_msgsnd","","",4,null],[12,"ru_msgrcv","","",4,null],[12,"ru_nsignals","","",4,null],[12,"ru_nvcsw","","",4,null],[12,"ru_nivcsw","","",4,null],[3,"in_addr","","",null,null],[12,"s_addr","","",5,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",6,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",7,null],[12,"imr_interface","","",7,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",8,null],[12,"ipv6mr_interface","","",8,null],[3,"hostent","","",null,null],[12,"h_name","","",9,null],[12,"h_aliases","","",9,null],[12,"h_addrtype","","",9,null],[12,"h_length","","",9,null],[12,"h_addr_list","","",9,null],[3,"iovec","","",null,null],[12,"iov_base","","",10,null],[12,"iov_len","","",10,null],[3,"pollfd","","",null,null],[12,"fd","","",11,null],[12,"events","","",11,null],[12,"revents","","",11,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",12,null],[12,"sa_data","","",12,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",13,null],[12,"sin_port","","",13,null],[12,"sin_addr","","",13,null],[12,"sin_zero","","",13,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",14,null],[12,"sin6_port","","",14,null],[12,"sin6_flowinfo","","",14,null],[12,"sin6_addr","","",14,null],[12,"sin6_scope_id","","",14,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",15,null],[12,"sun_path","","",15,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",16,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",17,null],[12,"ai_family","","",17,null],[12,"ai_socktype","","",17,null],[12,"ai_protocol","","",17,null],[12,"ai_addrlen","","",17,null],[12,"ai_addr","","",17,null],[12,"ai_canonname","","",17,null],[12,"ai_next","","",17,null],[3,"sockaddr_ll","","",null,null],[12,"sll_family","","",18,null],[12,"sll_protocol","","",18,null],[12,"sll_ifindex","","",18,null],[12,"sll_hatype","","",18,null],[12,"sll_pkttype","","",18,null],[12,"sll_halen","","",18,null],[12,"sll_addr","","",18,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",19,null],[12,"tm_min","","",19,null],[12,"tm_hour","","",19,null],[12,"tm_mday","","",19,null],[12,"tm_mon","","",19,null],[12,"tm_year","","",19,null],[12,"tm_wday","","",19,null],[12,"tm_yday","","",19,null],[12,"tm_isdst","","",19,null],[12,"tm_gmtoff","","",19,null],[12,"tm_zone","","",19,null],[3,"sched_param","","",null,null],[12,"sched_priority","","",20,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",21,null],[12,"dli_fbase","","",21,null],[12,"dli_sname","","",21,null],[12,"dli_saddr","","",21,null],[3,"epoll_event","","",null,null],[12,"events","","",22,null],[12,"u64","","",22,null],[3,"utsname","","",null,null],[12,"sysname","","",23,null],[12,"nodename","","",23,null],[12,"release","","",23,null],[12,"version","","",23,null],[12,"machine","","",23,null],[12,"domainname","","",23,null],[3,"dirent","","",null,null],[12,"d_ino","","",24,null],[12,"d_off","","",24,null],[12,"d_reclen","","",24,null],[12,"d_type","","",24,null],[12,"d_name","","",24,null],[3,"dirent64","","",null,null],[12,"d_ino","","",25,null],[12,"d_off","","",25,null],[12,"d_reclen","","",25,null],[12,"d_type","","",25,null],[12,"d_name","","",25,null],[3,"rlimit64","","",null,null],[12,"rlim_cur","","",26,null],[12,"rlim_max","","",26,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",27,null],[12,"gl_pathv","","",27,null],[12,"gl_offs","","",27,null],[12,"gl_flags","","",27,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",28,null],[12,"ifa_name","","",28,null],[12,"ifa_flags","","",28,null],[12,"ifa_addr","","",28,null],[12,"ifa_netmask","","",28,null],[12,"ifa_ifu","","",28,null],[12,"ifa_data","","",28,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_cond_t","","",null,null],[3,"passwd","","",null,null],[12,"pw_name","","",29,null],[12,"pw_passwd","","",29,null],[12,"pw_uid","","",29,null],[12,"pw_gid","","",29,null],[12,"pw_gecos","","",29,null],[12,"pw_dir","","",29,null],[12,"pw_shell","","",29,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",30,null],[12,"f_frsize","","",30,null],[12,"f_blocks","","",30,null],[12,"f_bfree","","",30,null],[12,"f_bavail","","",30,null],[12,"f_files","","",30,null],[12,"f_ffree","","",30,null],[12,"f_favail","","",30,null],[12,"f_fsid","","",30,null],[12,"f_flag","","",30,null],[12,"f_namemax","","",30,null],[3,"sockaddr_nl","","",null,null],[12,"nl_family","","",31,null],[12,"nl_pid","","",31,null],[12,"nl_groups","","",31,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",32,null],[12,"dqb_bsoftlimit","","",32,null],[12,"dqb_curspace","","",32,null],[12,"dqb_ihardlimit","","",32,null],[12,"dqb_isoftlimit","","",32,null],[12,"dqb_curinodes","","",32,null],[12,"dqb_btime","","",32,null],[12,"dqb_itime","","",32,null],[12,"dqb_valid","","",32,null],[3,"signalfd_siginfo","","",null,null],[12,"ssi_signo","","",33,null],[12,"ssi_errno","","",33,null],[12,"ssi_code","","",33,null],[12,"ssi_pid","","",33,null],[12,"ssi_uid","","",33,null],[12,"ssi_fd","","",33,null],[12,"ssi_tid","","",33,null],[12,"ssi_band","","",33,null],[12,"ssi_overrun","","",33,null],[12,"ssi_trapno","","",33,null],[12,"ssi_status","","",33,null],[12,"ssi_int","","",33,null],[12,"ssi_ptr","","",33,null],[12,"ssi_utime","","",33,null],[12,"ssi_stime","","",33,null],[12,"ssi_addr","","",33,null],[3,"fsid_t","","",null,null],[3,"mq_attr","","",null,null],[12,"mq_flags","","",34,null],[12,"mq_maxmsg","","",34,null],[12,"mq_msgsize","","",34,null],[12,"mq_curmsgs","","",34,null],[3,"cpu_set_t","","",null,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",35,null],[12,"sa_mask","","",35,null],[12,"sa_flags","","",35,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",36,null],[12,"ss_flags","","",36,null],[12,"ss_size","","",36,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",37,null],[12,"si_errno","","",37,null],[12,"si_code","","",37,null],[12,"_pad","","",37,null],[3,"glob64_t","","",null,null],[12,"gl_pathc","","",38,null],[12,"gl_pathv","","",38,null],[12,"gl_offs","","",38,null],[12,"gl_flags","","",38,null],[3,"ucred","","",null,null],[12,"pid","","",39,null],[12,"uid","","",39,null],[12,"gid","","",39,null],[3,"statfs","","",null,null],[12,"f_type","","",40,null],[12,"f_bsize","","",40,null],[12,"f_blocks","","",40,null],[12,"f_bfree","","",40,null],[12,"f_bavail","","",40,null],[12,"f_files","","",40,null],[12,"f_ffree","","",40,null],[12,"f_fsid","","",40,null],[12,"f_namelen","","",40,null],[12,"f_frsize","","",40,null],[3,"msghdr","","",null,null],[12,"msg_name","","",41,null],[12,"msg_namelen","","",41,null],[12,"msg_iov","","",41,null],[12,"msg_iovlen","","",41,null],[12,"msg_control","","",41,null],[12,"msg_controllen","","",41,null],[12,"msg_flags","","",41,null],[3,"termios","","",null,null],[12,"c_iflag","","",42,null],[12,"c_oflag","","",42,null],[12,"c_cflag","","",42,null],[12,"c_lflag","","",42,null],[12,"c_line","","",42,null],[12,"c_cc","","",42,null],[12,"c_ispeed","","",42,null],[12,"c_ospeed","","",42,null],[3,"flock","","",null,null],[12,"l_type","","",43,null],[12,"l_whence","","",43,null],[12,"l_start","","",43,null],[12,"l_len","","",43,null],[12,"l_pid","","",43,null],[3,"sigset_t","","",null,null],[3,"stat","","",null,null],[12,"st_dev","","",44,null],[12,"st_ino","","",44,null],[12,"st_nlink","","",44,null],[12,"st_mode","","",44,null],[12,"st_uid","","",44,null],[12,"st_gid","","",44,null],[12,"st_rdev","","",44,null],[12,"st_size","","",44,null],[12,"st_blksize","","",44,null],[12,"st_blocks","","",44,null],[12,"st_atime","","",44,null],[12,"st_atime_nsec","","",44,null],[12,"st_mtime","","",44,null],[12,"st_mtime_nsec","","",44,null],[12,"st_ctime","","",44,null],[12,"st_ctime_nsec","","",44,null],[3,"stat64","","",null,null],[12,"st_dev","","",45,null],[12,"st_ino","","",45,null],[12,"st_nlink","","",45,null],[12,"st_mode","","",45,null],[12,"st_uid","","",45,null],[12,"st_gid","","",45,null],[12,"st_rdev","","",45,null],[12,"st_size","","",45,null],[12,"st_blksize","","",45,null],[12,"st_blocks","","",45,null],[12,"st_atime","","",45,null],[12,"st_atime_nsec","","",45,null],[12,"st_mtime","","",45,null],[12,"st_mtime_nsec","","",45,null],[12,"st_ctime","","",45,null],[12,"st_ctime_nsec","","",45,null],[3,"pthread_attr_t","","",null,null],[3,"ipc_perm","","",null,null],[12,"__key","","",46,null],[12,"uid","","",46,null],[12,"gid","","",46,null],[12,"cuid","","",46,null],[12,"cgid","","",46,null],[12,"mode","","",46,null],[12,"__seq","","",46,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",47,null],[12,"shm_segsz","","",47,null],[12,"shm_atime","","",47,null],[12,"shm_dtime","","",47,null],[12,"shm_ctime","","",47,null],[12,"shm_cpid","","",47,null],[12,"shm_lpid","","",47,null],[12,"shm_nattch","","",47,null],[4,"c_void","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"DIR","","",null,null],[4,"timezone","","",null,null],[4,"fpos64_t","","",null,null],[5,"FD_CLR","","",null,null],[5,"FD_ISSET","","",null,null],[5,"FD_SET","","",null,null],[5,"FD_ZERO","","",null,null],[5,"WIFEXITED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WEXITSTATUS","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WTERMSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"CPU_ZERO","","",null,null],[5,"CPU_SET","","",null,null],[5,"CPU_ISSET","","",null,{"inputs":[{"name":"usize"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"CPU_EQUAL","","",null,{"inputs":[{"name":"cpu_set_t"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"memcmp","","",null,null],[5,"memchr","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"bind","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"popen","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"chown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pause","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"getrusage","","",null,null],[5,"getdtablesize","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"gettimeofday","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_create","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"strerror_r","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"sigaltstack","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"mknod","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"uname","","",null,null],[5,"daemon","","",null,null],[5,"gethostname","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"poll","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"getsid","","",null,null],[5,"madvise","","",null,null],[5,"readlink","","",null,null],[5,"msync","","",null,null],[5,"sysconf","","",null,null],[5,"recvfrom","","",null,null],[5,"mkfifo","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"select","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"timegm","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcsendbreak","","",null,null],[5,"getpwuid_r","","",null,null],[5,"fdatasync","","",null,null],[5,"mincore","","",null,null],[5,"clock_gettime","","",null,null],[5,"prctl","","",null,null],[5,"pthread_getattr_np","","",null,null],[5,"pthread_attr_getguardsize","","",null,null],[5,"pthread_attr_getstack","","",null,null],[5,"memalign","","",null,null],[5,"setgroups","","",null,null],[5,"sched_setscheduler","","",null,null],[5,"sched_getscheduler","","",null,null],[5,"sched_get_priority_max","","",null,null],[5,"sched_get_priority_min","","",null,null],[5,"epoll_create","","",null,null],[5,"epoll_ctl","","",null,null],[5,"epoll_wait","","",null,null],[5,"pipe2","","",null,null],[5,"mount","","",null,null],[5,"umount","","",null,null],[5,"umount2","","",null,null],[5,"clone","","",null,null],[5,"statfs","","",null,null],[5,"fstatfs","","",null,null],[5,"memrchr","","",null,null],[5,"syscall","","",null,null],[5,"sendfile","","",null,null],[5,"splice","","",null,null],[5,"tee","","",null,null],[5,"vmsplice","","",null,null],[5,"shm_open","","",null,null],[5,"shmget","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"mprotect","","",null,null],[5,"__errno_location","","",null,null],[5,"fopen64","","",null,null],[5,"freopen64","","",null,null],[5,"tmpfile64","","",null,null],[5,"fgetpos64","","",null,null],[5,"fsetpos64","","",null,null],[5,"fstat64","","",null,null],[5,"stat64","","",null,null],[5,"open64","","",null,null],[5,"creat64","","",null,null],[5,"lseek64","","",null,null],[5,"pread64","","",null,null],[5,"pwrite64","","",null,null],[5,"mmap64","","",null,null],[5,"lstat64","","",null,null],[5,"ftruncate64","","",null,null],[5,"readdir64_r","","",null,null],[5,"getrlimit64","","",null,null],[5,"setrlimit64","","",null,null],[5,"fseeko64","","",null,null],[5,"ftello64","","",null,null],[5,"fallocate","","",null,null],[5,"posix_fallocate","","",null,null],[5,"readahead","","",null,null],[5,"getxattr","","",null,null],[5,"lgetxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"lsetxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"llistxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"lremovexattr","","",null,null],[5,"fremovexattr","","",null,null],[5,"signalfd","","",null,null],[5,"pwritev","","",null,null],[5,"preadv","","",null,null],[5,"quotactl","","",null,null],[5,"mq_open","","",null,null],[5,"mq_close","","",null,null],[5,"mq_unlink","","",null,null],[5,"mq_receive","","",null,null],[5,"mq_send","","",null,null],[5,"mq_getattr","","",null,null],[5,"mq_setattr","","",null,null],[5,"sched_getaffinity","","",null,null],[5,"sched_setaffinity","","",null,null],[5,"epoll_pwait","","",null,null],[5,"dup3","","",null,null],[5,"unshare","","",null,null],[5,"sethostname","","",null,null],[5,"setns","","",null,null],[5,"sysctl","","",null,null],[5,"ioctl","","",null,null],[5,"backtrace","","",null,null],[5,"glob64","","",null,null],[5,"globfree64","","",null,null],[5,"getnameinfo","","",null,null],[5,"eventfd","","",null,null],[5,"ptrace","","",null,null],[5,"pthread_attr_getaffinity_np","","",null,null],[5,"pthread_attr_setaffinity_np","","",null,null],[11,"is_some","core::option","Returns `true` if the option is a `Some` value",48,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"is_none","","Returns `true` if the option is a `None` value",48,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"as_ref","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;T&gt;`",48,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;mut T&gt;`",48,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"expect","","Unwraps an option, yielding the content of a `Some`.",48,{"inputs":[{"name":"option"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap","","Moves the value `v` out of the `Option&lt;T&gt;` if it is `Some(v)`.",48,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"unwrap_or","","Returns the contained value or a default.",48,{"inputs":[{"name":"option"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",48,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"t"}}],[11,"map","","Maps an `Option&lt;T&gt;` to `Option&lt;U&gt;` by applying a function to a contained value",48,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",48,{"inputs":[{"name":"option"},{"name":"u"},{"name":"f"}],"output":{"name":"u"}}],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",48,{"inputs":[{"name":"option"},{"name":"d"},{"name":"f"}],"output":{"name":"u"}}],[11,"ok_or","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",48,{"inputs":[{"name":"option"},{"name":"e"}],"output":{"name":"result"}}],[11,"ok_or_else","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",48,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",48,{"inputs":[{"name":"option"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",48,{"inputs":[{"name":"option"}],"output":{"name":"itermut"}}],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",48,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",48,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",48,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",48,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",48,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"cloned","","Maps an `Option&lt;&amp;T&gt;` to an `Option&lt;T&gt;` by cloning the contents of the\noption.",48,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"unwrap_or_default","","Returns the contained value or a default",48,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"default","core::num","",49,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"fmt","","",49,{"inputs":[{"name":"wrapping"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",49,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"cmp","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"option"}}],[11,"lt","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"le","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"gt","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ge","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"eq","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ne","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"shl","","",49,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",49,null],[11,"shr","","",49,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",49,null],[11,"shl","","",49,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",49,null],[11,"shr","","",49,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",49,null],[11,"shl","","",49,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",49,null],[11,"shr","","",49,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",49,null],[11,"shl","","",49,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",49,null],[11,"shr","","",49,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",49,null],[11,"shl","","",49,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",49,null],[11,"shr","","",49,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",49,null],[11,"shl","","",49,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",49,null],[11,"shr","","",49,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",49,null],[11,"shl","","",49,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",49,null],[11,"shr","","",49,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",49,null],[11,"shl","","",49,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",49,null],[11,"shr","","",49,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",49,null],[11,"shl","","",49,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",49,null],[11,"shr","","",49,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",49,null],[11,"shl","","",49,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",49,null],[11,"shr","","",49,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",49,null],[11,"add","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",49,null],[11,"sub","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",49,null],[11,"mul","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",49,null],[11,"div","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",49,null],[11,"rem","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",49,null],[11,"not","","",49,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",49,null],[11,"bitor","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",49,null],[11,"bitand","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",49,null],[11,"add","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",49,null],[11,"sub","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",49,null],[11,"mul","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",49,null],[11,"div","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",49,null],[11,"rem","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",49,null],[11,"not","","",49,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",49,null],[11,"bitor","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",49,null],[11,"bitand","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",49,null],[11,"add","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",49,null],[11,"sub","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",49,null],[11,"mul","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",49,null],[11,"div","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",49,null],[11,"rem","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",49,null],[11,"not","","",49,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",49,null],[11,"bitor","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",49,null],[11,"bitand","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",49,null],[11,"add","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",49,null],[11,"sub","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",49,null],[11,"mul","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",49,null],[11,"div","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",49,null],[11,"rem","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",49,null],[11,"not","","",49,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",49,null],[11,"bitor","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",49,null],[11,"bitand","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",49,null],[11,"add","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",49,null],[11,"sub","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",49,null],[11,"mul","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",49,null],[11,"div","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",49,null],[11,"rem","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",49,null],[11,"not","","",49,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",49,null],[11,"bitor","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",49,null],[11,"bitand","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",49,null],[11,"add","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",49,null],[11,"sub","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",49,null],[11,"mul","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",49,null],[11,"div","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",49,null],[11,"rem","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",49,null],[11,"not","","",49,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",49,null],[11,"bitor","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",49,null],[11,"bitand","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",49,null],[11,"add","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",49,null],[11,"sub","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",49,null],[11,"mul","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",49,null],[11,"div","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",49,null],[11,"rem","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",49,null],[11,"not","","",49,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",49,null],[11,"bitor","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",49,null],[11,"bitand","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",49,null],[11,"add","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",49,null],[11,"sub","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",49,null],[11,"mul","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",49,null],[11,"div","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",49,null],[11,"rem","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",49,null],[11,"not","","",49,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",49,null],[11,"bitor","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",49,null],[11,"bitand","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",49,null],[11,"add","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",49,null],[11,"sub","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",49,null],[11,"mul","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",49,null],[11,"div","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",49,null],[11,"rem","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",49,null],[11,"not","","",49,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",49,null],[11,"bitor","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",49,null],[11,"bitand","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",49,null],[11,"add","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",49,null],[11,"sub","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",49,null],[11,"mul","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",49,null],[11,"div","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",49,null],[11,"rem","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",49,null],[11,"not","","",49,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",49,null],[11,"bitor","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",49,null],[11,"bitand","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",49,null],[11,"eq","core::num::flt2dec::decoder","",50,{"inputs":[{"name":"decoded"},{"name":"decoded"}],"output":{"name":"bool"}}],[11,"ne","","",50,{"inputs":[{"name":"decoded"},{"name":"decoded"}],"output":{"name":"bool"}}],[11,"fmt","","",50,{"inputs":[{"name":"decoded"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",50,{"inputs":[{"name":"decoded"}],"output":{"name":"decoded"}}],[11,"eq","","",51,{"inputs":[{"name":"fulldecoded"},{"name":"fulldecoded"}],"output":{"name":"bool"}}],[11,"ne","","",51,{"inputs":[{"name":"fulldecoded"},{"name":"fulldecoded"}],"output":{"name":"bool"}}],[11,"fmt","","",51,{"inputs":[{"name":"fulldecoded"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",51,{"inputs":[{"name":"fulldecoded"}],"output":{"name":"fulldecoded"}}],[11,"fmt","core::num::flt2dec","",52,{"inputs":[{"name":"part"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",52,{"inputs":[{"name":"part"},{"name":"part"}],"output":{"name":"bool"}}],[11,"ne","","",52,{"inputs":[{"name":"part"},{"name":"part"}],"output":{"name":"bool"}}],[11,"clone","","",52,{"inputs":[{"name":"part"}],"output":{"name":"part"}}],[11,"len","","Returns the exact byte length of given part.",52,{"inputs":[{"name":"part"}],"output":{"name":"usize"}}],[11,"write","","Writes a part into the supplied buffer.\nReturns the number of written bytes, or `None` if the buffer is not enough.\n(It may still leave partially written bytes in the buffer; do not rely on that.)",52,null],[11,"clone","","",53,{"inputs":[{"name":"formatted"}],"output":{"name":"formatted"}}],[11,"len","","Returns the exact byte length of combined formatted result.",53,{"inputs":[{"name":"formatted"}],"output":{"name":"usize"}}],[11,"write","","Writes all formatted parts into the supplied buffer.\nReturns the number of written bytes, or `None` if the buffer is not enough.\n(It may still leave partially written bytes in the buffer; do not rely on that.)",53,null],[11,"fmt","","",54,{"inputs":[{"name":"sign"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",54,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"ne","","",54,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"clone","","",54,{"inputs":[{"name":"sign"}],"output":{"name":"sign"}}],[11,"fmt","core::num::dec2flt::rawfp","",55,{"inputs":[{"name":"unpacked"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",55,{"inputs":[{"name":"unpacked"}],"output":{"name":"unpacked"}}],[11,"new","","",55,{"inputs":[{"name":"unpacked"},{"name":"u64"},{"name":"i16"}],"output":{"name":"unpacked"}}],[11,"fmt","core::num::dec2flt::parse","",56,{"inputs":[{"name":"sign"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",57,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"ne","","",57,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"fmt","","",57,{"inputs":[{"name":"decimal"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",57,null],[11,"eq","","",58,{"inputs":[{"name":"parseresult"},{"name":"parseresult"}],"output":{"name":"bool"}}],[11,"ne","","",58,{"inputs":[{"name":"parseresult"},{"name":"parseresult"}],"output":{"name":"bool"}}],[11,"fmt","","",58,{"inputs":[{"name":"parseresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","core::num::dec2flt","",59,{"inputs":[{"name":"parsefloaterror"},{"name":"parsefloaterror"}],"output":{"name":"bool"}}],[11,"ne","","",59,{"inputs":[{"name":"parsefloaterror"},{"name":"parsefloaterror"}],"output":{"name":"bool"}}],[11,"clone","","",59,{"inputs":[{"name":"parsefloaterror"}],"output":{"name":"parsefloaterror"}}],[11,"fmt","","",59,{"inputs":[{"name":"parsefloaterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",60,{"inputs":[{"name":"floaterrorkind"},{"name":"floaterrorkind"}],"output":{"name":"bool"}}],[11,"ne","","",60,{"inputs":[{"name":"floaterrorkind"},{"name":"floaterrorkind"}],"output":{"name":"bool"}}],[11,"clone","","",60,{"inputs":[{"name":"floaterrorkind"}],"output":{"name":"floaterrorkind"}}],[11,"fmt","","",60,{"inputs":[{"name":"floaterrorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",59,{"inputs":[{"name":"parsefloaterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_small","core::num::bignum","Makes a bignum from one digit.",61,{"inputs":[{"name":"big32x40"},{"name":"u32"}],"output":{"name":"big32x40"}}],[11,"from_u64","","Makes a bignum from `u64` value.",61,{"inputs":[{"name":"big32x40"},{"name":"u64"}],"output":{"name":"big32x40"}}],[11,"digits","","Return the internal digits as a slice `[a, b, c, ...]` such that the numeric\nvalue is `a + b * 2^W + c * 2^(2W) + ...` where `W` is the number of bits in\nthe digit type.",61,null],[11,"get_bit","","Return the `i`-th bit where bit 0 is the least significant one.\nIn other words, the bit with weight `2^i`.",61,{"inputs":[{"name":"big32x40"},{"name":"usize"}],"output":{"name":"u8"}}],[11,"is_zero","","Returns true if the bignum is zero.",61,{"inputs":[{"name":"big32x40"}],"output":{"name":"bool"}}],[11,"bit_length","","Returns the number of bits necessary to represent this value. Note that zero\nis considered to need 0 bits.",61,{"inputs":[{"name":"big32x40"}],"output":{"name":"usize"}}],[11,"add","","Adds `other` to itself and returns its own mutable reference.",61,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"big32x40"}}],[11,"add_small","","",61,{"inputs":[{"name":"big32x40"},{"name":"u32"}],"output":{"name":"big32x40"}}],[11,"sub","","Subtracts `other` from itself and returns its own mutable reference.",61,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"big32x40"}}],[11,"mul_small","","Multiplies itself by a digit-sized `other` and returns its own\nmutable reference.",61,{"inputs":[{"name":"big32x40"},{"name":"u32"}],"output":{"name":"big32x40"}}],[11,"mul_pow2","","Multiplies itself by `2^bits` and returns its own mutable reference.",61,{"inputs":[{"name":"big32x40"},{"name":"usize"}],"output":{"name":"big32x40"}}],[11,"mul_pow5","","Multiplies itself by `5^e` and returns its own mutable reference.",61,{"inputs":[{"name":"big32x40"},{"name":"usize"}],"output":{"name":"big32x40"}}],[11,"mul_digits","","Multiplies itself by a number described by `other[0] + other[1] * 2^W +\nother[2] * 2^(2W) + ...` (where `W` is the number of bits in the digit type)\nand returns its own mutable reference.",61,null],[11,"div_rem_small","","Divides itself by a digit-sized `other` and returns its own\nmutable reference *and* the remainder.",61,null],[11,"div_rem","","Divide self by another bignum, overwriting `q` with the quotient and `r` with the\nremainder.",61,null],[11,"eq","","",61,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",61,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"option"}}],[11,"cmp","","",61,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"ordering"}}],[11,"clone","","",61,{"inputs":[{"name":"big32x40"}],"output":{"name":"big32x40"}}],[11,"fmt","","",61,{"inputs":[{"name":"big32x40"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_small","core::num::bignum::tests","Makes a bignum from one digit.",62,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"from_u64","","Makes a bignum from `u64` value.",62,{"inputs":[{"name":"big8x3"},{"name":"u64"}],"output":{"name":"big8x3"}}],[11,"digits","","Return the internal digits as a slice `[a, b, c, ...]` such that the numeric\nvalue is `a + b * 2^W + c * 2^(2W) + ...` where `W` is the number of bits in\nthe digit type.",62,null],[11,"get_bit","","Return the `i`-th bit where bit 0 is the least significant one.\nIn other words, the bit with weight `2^i`.",62,{"inputs":[{"name":"big8x3"},{"name":"usize"}],"output":{"name":"u8"}}],[11,"is_zero","","Returns true if the bignum is zero.",62,{"inputs":[{"name":"big8x3"}],"output":{"name":"bool"}}],[11,"bit_length","","Returns the number of bits necessary to represent this value. Note that zero\nis considered to need 0 bits.",62,{"inputs":[{"name":"big8x3"}],"output":{"name":"usize"}}],[11,"add","","Adds `other` to itself and returns its own mutable reference.",62,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"add_small","","",62,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"sub","","Subtracts `other` from itself and returns its own mutable reference.",62,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"mul_small","","Multiplies itself by a digit-sized `other` and returns its own\nmutable reference.",62,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"mul_pow2","","Multiplies itself by `2^bits` and returns its own mutable reference.",62,{"inputs":[{"name":"big8x3"},{"name":"usize"}],"output":{"name":"big8x3"}}],[11,"mul_pow5","","Multiplies itself by `5^e` and returns its own mutable reference.",62,{"inputs":[{"name":"big8x3"},{"name":"usize"}],"output":{"name":"big8x3"}}],[11,"mul_digits","","Multiplies itself by a number described by `other[0] + other[1] * 2^W +\nother[2] * 2^(2W) + ...` (where `W` is the number of bits in the digit type)\nand returns its own mutable reference.",62,null],[11,"div_rem_small","","Divides itself by a digit-sized `other` and returns its own\nmutable reference *and* the remainder.",62,null],[11,"div_rem","","Divide self by another bignum, overwriting `q` with the quotient and `r` with the\nremainder.",62,null],[11,"eq","","",62,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",62,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"option"}}],[11,"cmp","","",62,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"ordering"}}],[11,"clone","","",62,{"inputs":[{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"fmt","","",62,{"inputs":[{"name":"big8x3"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::num::diy_float","",63,{"inputs":[{"name":"fp"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",63,{"inputs":[{"name":"fp"}],"output":{"name":"fp"}}],[11,"mul","","Returns a correctly rounded product of itself and `other`.",63,{"inputs":[{"name":"fp"},{"name":"fp"}],"output":{"name":"fp"}}],[11,"normalize","","Normalizes itself so that the resulting mantissa is at least `2^63`.",63,{"inputs":[{"name":"fp"}],"output":{"name":"fp"}}],[11,"normalize_to","","Normalizes itself to have the shared exponent.\nIt can only decrease the exponent (and thus increase the mantissa).",63,{"inputs":[{"name":"fp"},{"name":"i16"}],"output":{"name":"fp"}}],[11,"fmt","core::num","",64,{"inputs":[{"name":"fpcategory"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",64,{"inputs":[{"name":"fpcategory"},{"name":"fpcategory"}],"output":{"name":"bool"}}],[11,"ne","","",64,{"inputs":[{"name":"fpcategory"},{"name":"fpcategory"}],"output":{"name":"bool"}}],[11,"clone","","",64,{"inputs":[{"name":"fpcategory"}],"output":{"name":"fpcategory"}}],[11,"eq","","",65,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"ne","","",65,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"clone","","",65,{"inputs":[{"name":"parseinterror"}],"output":{"name":"parseinterror"}}],[11,"fmt","","",65,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",66,{"inputs":[{"name":"interrorkind"},{"name":"interrorkind"}],"output":{"name":"bool"}}],[11,"ne","","",66,{"inputs":[{"name":"interrorkind"},{"name":"interrorkind"}],"output":{"name":"bool"}}],[11,"clone","","",66,{"inputs":[{"name":"interrorkind"}],"output":{"name":"interrorkind"}}],[11,"fmt","","",66,{"inputs":[{"name":"interrorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",65,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::nonzero","",67,null],[11,"fmt","","",67,{"inputs":[{"name":"nonzero"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",67,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"option"}}],[11,"lt","","",67,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"le","","",67,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"gt","","",67,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ge","","",67,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"cmp","","",67,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"ordering"}}],[11,"eq","","",67,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ne","","",67,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"clone","","",67,{"inputs":[{"name":"nonzero"}],"output":{"name":"nonzero"}}],[11,"new","","Creates an instance of NonZero with the provided value.\nYou must indeed ensure that the value is actually &quot;non-zero&quot;.",67,{"inputs":[{"name":"nonzero"},{"name":"t"}],"output":{"name":"nonzero"}}],[11,"deref","","",67,{"inputs":[{"name":"nonzero"}],"output":{"name":"t"}}],[11,"new","core::ptr","Creates a new `Unique`.",68,null],[11,"get","","Dereferences the content.",68,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"get_mut","","Mutably dereferences the content.",68,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"deref","","",68,null],[11,"fmt","","",68,{"inputs":[{"name":"unique"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `Shared`.",69,null],[11,"clone","","",69,{"inputs":[{"name":"shared"}],"output":{"name":"shared"}}],[11,"deref","","",69,null],[11,"fmt","","",69,{"inputs":[{"name":"shared"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::marker","",70,null],[11,"eq","","",70,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",70,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"option"}}],[11,"cmp","","",70,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"ordering"}}],[11,"clone","","",70,{"inputs":[{"name":"phantomdata"}],"output":{"name":"phantomdata"}}],[11,"default","","",70,{"inputs":[{"name":"phantomdata"}],"output":{"name":"phantomdata"}}],[11,"eq","core::ops","",71,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"ne","","",71,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"clone","","",71,{"inputs":[{"name":"rangefull"}],"output":{"name":"rangefull"}}],[11,"fmt","","",71,{"inputs":[{"name":"rangefull"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",72,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"ne","","",72,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"clone","","",72,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"fmt","","",72,{"inputs":[{"name":"range"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",73,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"ne","","",73,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"clone","","",73,{"inputs":[{"name":"rangefrom"}],"output":{"name":"rangefrom"}}],[11,"fmt","","",73,{"inputs":[{"name":"rangefrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",74,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"ne","","",74,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"clone","","",74,{"inputs":[{"name":"rangeto"}],"output":{"name":"rangeto"}}],[11,"fmt","","",74,{"inputs":[{"name":"rangeto"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::cmp","",75,{"inputs":[{"name":"ordering"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",75,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"ne","","",75,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"clone","","",75,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"reverse","","Reverse the `Ordering`.",75,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"cmp","","",75,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",75,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"option"}}],[11,"fmt","libc","",76,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",76,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is","","Returns true if the boxed type is the same as `T`",76,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",76,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",76,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",76,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",76,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",76,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"hash","core::any","",77,null],[11,"fmt","","",77,{"inputs":[{"name":"typeid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",77,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"ne","","",77,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"clone","","",77,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",77,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"default","core::sync::atomic","",78,{"inputs":[{"name":"atomicbool"}],"output":{"name":"atomicbool"}}],[11,"default","","",79,{"inputs":[{"name":"atomicisize"}],"output":{"name":"atomicisize"}}],[11,"default","","",80,{"inputs":[{"name":"atomicusize"}],"output":{"name":"atomicusize"}}],[11,"default","","",81,{"inputs":[{"name":"atomicptr"}],"output":{"name":"atomicptr"}}],[11,"clone","","",82,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"new","","Creates a new `AtomicBool`.",78,{"inputs":[{"name":"atomicbool"},{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",78,{"inputs":[{"name":"atomicbool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"store","","Stores a value into the bool.",78,null],[11,"swap","","Stores a value into the bool, returning the old value.",78,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",78,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_and","","Logical &quot;and&quot; with a boolean value.",78,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_nand","","Logical &quot;nand&quot; with a boolean value.",78,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_or","","Logical &quot;or&quot; with a boolean value.",78,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_xor","","Logical &quot;xor&quot; with a boolean value.",78,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `AtomicIsize`.",79,{"inputs":[{"name":"atomicisize"},{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the isize.",79,{"inputs":[{"name":"atomicisize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"store","","Stores a value into the isize.",79,null],[11,"swap","","Stores a value into the isize, returning the old value.",79,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"compare_and_swap","","Stores a value into the `isize` if the current value is the same as the `current` value.",79,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_add","","Add an isize to the current value, returning the previous value.",79,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_sub","","Subtract an isize from the current value, returning the previous value.",79,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_and","","Bitwise and with the current isize, returning the previous value.",79,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_or","","Bitwise or with the current isize, returning the previous value.",79,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_xor","","Bitwise xor with the current isize, returning the previous value.",79,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"new","","Creates a new `AtomicUsize`.",80,{"inputs":[{"name":"atomicusize"},{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the usize.",80,{"inputs":[{"name":"atomicusize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"store","","Stores a value into the usize.",80,null],[11,"swap","","Stores a value into the usize, returning the old value.",80,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_and_swap","","Stores a value into the `usize` if the current value is the same as the `current` value.",80,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_add","","Add to the current usize, returning the previous value.",80,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_sub","","Subtract from the current usize, returning the previous value.",80,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_and","","Bitwise and with the current usize, returning the previous value.",80,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_or","","Bitwise or with the current usize, returning the previous value.",80,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_xor","","Bitwise xor with the current usize, returning the previous value.",80,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"new","","Creates a new `AtomicPtr`.",81,null],[11,"load","","Loads a value from the pointer.",81,null],[11,"store","","Stores a value into the pointer.",81,null],[11,"swap","","Stores a value into the pointer, returning the old value.",81,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",81,null],[11,"fmt","","",80,{"inputs":[{"name":"atomicusize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",79,{"inputs":[{"name":"atomicisize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",78,{"inputs":[{"name":"atomicbool"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",81,{"inputs":[{"name":"atomicptr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","core::cell","Creates a new `Cell` containing the given value.",83,{"inputs":[{"name":"cell"},{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",83,{"inputs":[{"name":"cell"}],"output":{"name":"t"}}],[11,"set","","Sets the contained value.",83,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",83,{"inputs":[{"name":"cell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",83,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"default","","",83,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"eq","","",83,{"inputs":[{"name":"cell"},{"name":"cell"}],"output":{"name":"bool"}}],[11,"fmt","","",84,{"inputs":[{"name":"borrowstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",84,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"ne","","",84,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"clone","","",84,{"inputs":[{"name":"borrowstate"}],"output":{"name":"borrowstate"}}],[11,"new","","Creates a new `RefCell` containing `value`.",85,{"inputs":[{"name":"refcell"},{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",85,{"inputs":[{"name":"refcell"}],"output":{"name":"t"}}],[11,"borrow_state","","Query the current state of this `RefCell`",85,{"inputs":[{"name":"refcell"}],"output":{"name":"borrowstate"}}],[11,"borrow","","Immutably borrows the wrapped value.",85,{"inputs":[{"name":"refcell"}],"output":{"name":"ref"}}],[11,"borrow_mut","","Mutably borrows the wrapped value.",85,{"inputs":[{"name":"refcell"}],"output":{"name":"refmut"}}],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",85,{"inputs":[{"name":"refcell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",85,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"default","","",85,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"eq","","",85,{"inputs":[{"name":"refcell"},{"name":"refcell"}],"output":{"name":"bool"}}],[11,"drop","","",86,null],[11,"clone","","",86,{"inputs":[{"name":"borrowref"}],"output":{"name":"borrowref"}}],[11,"deref","","",87,{"inputs":[{"name":"ref"}],"output":{"name":"t"}}],[11,"clone","","Copies a `Ref`.",87,{"inputs":[{"name":"ref"},{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",87,{"inputs":[{"name":"ref"},{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"filter_map","","Make a new `Ref` for an optional component of the borrowed data, e.g. an\nenum variant.",87,{"inputs":[{"name":"ref"},{"name":"ref"},{"name":"f"}],"output":{"name":"option"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",88,{"inputs":[{"name":"refmut"},{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"filter_map","","Make a new `RefMut` for an optional component of the borrowed data, e.g.\nan enum variant.",88,{"inputs":[{"name":"refmut"},{"name":"refmut"},{"name":"f"}],"output":{"name":"option"}}],[11,"drop","","",89,null],[11,"deref","","",88,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"deref_mut","","",88,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",90,{"inputs":[{"name":"unsafecell"},{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",90,{"inputs":[{"name":"unsafecell"}],"output":{"name":"t"}}],[11,"get","","Gets a mutable pointer to the wrapped value.",90,null],[11,"clone","core::char","",91,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"escapeunicode"}}],[11,"clone","","",92,{"inputs":[{"name":"escapeunicodestate"}],"output":{"name":"escapeunicodestate"}}],[11,"next","","",91,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"option"}}],[11,"size_hint","","",91,null],[11,"clone","","",93,{"inputs":[{"name":"escapedefault"}],"output":{"name":"escapedefault"}}],[11,"clone","","",94,{"inputs":[{"name":"escapedefaultstate"}],"output":{"name":"escapedefaultstate"}}],[11,"next","","",93,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"size_hint","","",93,null],[11,"count","","",93,{"inputs":[{"name":"escapedefault"}],"output":{"name":"usize"}}],[11,"nth","","",93,{"inputs":[{"name":"escapedefault"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",93,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"clone","core::iter","",95,{"inputs":[{"name":"rev"}],"output":{"name":"rev"}}],[11,"next","","",95,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"size_hint","","",95,null],[11,"next_back","","",95,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"clone","","",96,{"inputs":[{"name":"cloned"}],"output":{"name":"cloned"}}],[11,"next","","",96,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"size_hint","","",96,null],[11,"next_back","","",96,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"clone","","",97,{"inputs":[{"name":"cycle"}],"output":{"name":"cycle"}}],[11,"next","","",97,{"inputs":[{"name":"cycle"}],"output":{"name":"option"}}],[11,"size_hint","","",97,null],[11,"clone","","",98,{"inputs":[{"name":"chain"}],"output":{"name":"chain"}}],[11,"clone","","",99,{"inputs":[{"name":"chainstate"}],"output":{"name":"chainstate"}}],[11,"next","","",98,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"count","","",98,{"inputs":[{"name":"chain"}],"output":{"name":"usize"}}],[11,"nth","","",98,{"inputs":[{"name":"chain"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",98,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"size_hint","","",98,null],[11,"next_back","","",98,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"clone","","",100,{"inputs":[{"name":"zip"}],"output":{"name":"zip"}}],[11,"next","","",100,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",100,null],[11,"next_back","","",100,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"clone","","",101,{"inputs":[{"name":"map"}],"output":{"name":"map"}}],[11,"next","","",101,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"size_hint","","",101,null],[11,"next_back","","",101,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"clone","","",102,{"inputs":[{"name":"filter"}],"output":{"name":"filter"}}],[11,"next","","",102,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"size_hint","","",102,null],[11,"next_back","","",102,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"clone","","",103,{"inputs":[{"name":"filtermap"}],"output":{"name":"filtermap"}}],[11,"next","","",103,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"size_hint","","",103,null],[11,"next_back","","",103,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"clone","","",104,{"inputs":[{"name":"enumerate"}],"output":{"name":"enumerate"}}],[11,"next","","# Overflow Behavior",104,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"size_hint","","",104,null],[11,"nth","","",104,{"inputs":[{"name":"enumerate"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",104,{"inputs":[{"name":"enumerate"}],"output":{"name":"usize"}}],[11,"next_back","","",104,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"clone","","",105,{"inputs":[{"name":"peekable"}],"output":{"name":"peekable"}}],[11,"next","","",105,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"count","","",105,{"inputs":[{"name":"peekable"}],"output":{"name":"usize"}}],[11,"nth","","",105,{"inputs":[{"name":"peekable"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",105,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"size_hint","","",105,null],[11,"peek","","Returns a reference to the next() value without advancing the iterator.",105,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"is_empty","","Checks if the iterator has finished iterating.",105,{"inputs":[{"name":"peekable"}],"output":{"name":"bool"}}],[11,"clone","","",106,{"inputs":[{"name":"skipwhile"}],"output":{"name":"skipwhile"}}],[11,"next","","",106,{"inputs":[{"name":"skipwhile"}],"output":{"name":"option"}}],[11,"size_hint","","",106,null],[11,"clone","","",107,{"inputs":[{"name":"takewhile"}],"output":{"name":"takewhile"}}],[11,"next","","",107,{"inputs":[{"name":"takewhile"}],"output":{"name":"option"}}],[11,"size_hint","","",107,null],[11,"clone","","",108,{"inputs":[{"name":"skip"}],"output":{"name":"skip"}}],[11,"next","","",108,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"nth","","",108,{"inputs":[{"name":"skip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",108,{"inputs":[{"name":"skip"}],"output":{"name":"usize"}}],[11,"last","","",108,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"size_hint","","",108,null],[11,"clone","","",109,{"inputs":[{"name":"take"}],"output":{"name":"take"}}],[11,"next","","",109,{"inputs":[{"name":"take"}],"output":{"name":"option"}}],[11,"nth","","",109,{"inputs":[{"name":"take"},{"name":"usize"}],"output":{"name":"option"}}],[11,"size_hint","","",109,null],[11,"clone","","",110,{"inputs":[{"name":"scan"}],"output":{"name":"scan"}}],[11,"next","","",110,{"inputs":[{"name":"scan"}],"output":{"name":"option"}}],[11,"size_hint","","",110,null],[11,"clone","","",111,{"inputs":[{"name":"flatmap"}],"output":{"name":"flatmap"}}],[11,"next","","",111,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"size_hint","","",111,null],[11,"next_back","","",111,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"clone","","",112,{"inputs":[{"name":"fuse"}],"output":{"name":"fuse"}}],[11,"next","","",112,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"nth","","",112,{"inputs":[{"name":"fuse"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",112,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"count","","",112,{"inputs":[{"name":"fuse"}],"output":{"name":"usize"}}],[11,"size_hint","","",112,null],[11,"next_back","","",112,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"clone","","",113,{"inputs":[{"name":"inspect"}],"output":{"name":"inspect"}}],[11,"next","","",113,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"size_hint","","",113,null],[11,"next_back","","",113,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"clone","","",114,{"inputs":[{"name":"stepby"}],"output":{"name":"stepby"}}],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",73,{"inputs":[{"name":"rangefrom"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",72,{"inputs":[{"name":"range"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"next","core::iter","",114,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",114,null],[11,"clone","","",115,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"rangeinclusive"}}],[11,"next","","",115,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"size_hint","","",115,null],[11,"next_back","","",115,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"next","","",114,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",114,null],[11,"next","core::ops","",72,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"size_hint","","",72,null],[11,"next_back","","",72,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next","","",73,{"inputs":[{"name":"rangefrom"}],"output":{"name":"option"}}],[11,"clone","core::iter","",116,{"inputs":[{"name":"repeat"}],"output":{"name":"repeat"}}],[11,"next","","",116,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"size_hint","","",116,null],[11,"next_back","","",116,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"next","","",117,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"size_hint","","",117,null],[11,"next_back","","",117,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"len","","",117,{"inputs":[{"name":"empty"}],"output":{"name":"usize"}}],[11,"clone","","",117,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"default","","",117,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"clone","","",118,{"inputs":[{"name":"once"}],"output":{"name":"once"}}],[11,"next","","",118,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"size_hint","","",118,null],[11,"next_back","","",118,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"len","","",118,{"inputs":[{"name":"once"}],"output":{"name":"usize"}}],[11,"hash","core::option","",48,null],[11,"fmt","","",48,{"inputs":[{"name":"option"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",48,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",48,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"lt","","",48,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"le","","",48,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"gt","","",48,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ge","","",48,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"eq","","",48,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ne","","",48,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"clone","","",48,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"default","","",48,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",48,{"inputs":[{"name":"option"}],"output":{"name":"intoiter"}}],[11,"clone","","",119,{"inputs":[{"name":"item"}],"output":{"name":"item"}}],[11,"next","","",119,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"size_hint","","",119,null],[11,"next_back","","",119,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"next","","",120,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",120,null],[11,"next_back","","",120,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",120,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",121,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",121,null],[11,"next_back","","",121,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",122,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"next","","",122,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",122,null],[11,"next_back","","",122,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",48,{"inputs":[{"name":"option"},{"name":"i"}],"output":{"name":"option"}}],[11,"clone","core::raw","",123,{"inputs":[{"name":"slice"}],"output":{"name":"slice"}}],[11,"clone","","",124,{"inputs":[{"name":"traitobject"}],"output":{"name":"traitobject"}}],[11,"hash","core::result","",125,null],[11,"fmt","","",125,{"inputs":[{"name":"result"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",125,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",125,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"option"}}],[11,"lt","","",125,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"le","","",125,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"gt","","",125,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ge","","",125,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"eq","","",125,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ne","","",125,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"clone","","",125,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"is_ok","","Returns true if the result is `Ok`",125,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"is_err","","Returns true if the result is `Err`",125,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"ok","","Converts from `Result&lt;T, E&gt;` to `Option&lt;T&gt;`",125,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"err","","Converts from `Result&lt;T, E&gt;` to `Option&lt;E&gt;`",125,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"as_ref","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;T, &amp;E&gt;`",125,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_mut","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;mut T, &amp;mut E&gt;`",125,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"map","","Maps a `Result&lt;T, E&gt;` to `Result&lt;U, E&gt;` by applying a function to a\ncontained `Ok` value, leaving an `Err` value untouched.",125,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"map_err","","Maps a `Result&lt;T, E&gt;` to `Result&lt;T, F&gt;` by applying a function to a\ncontained `Err` value, leaving an `Ok` value untouched.",125,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",125,{"inputs":[{"name":"result"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",125,{"inputs":[{"name":"result"}],"output":{"name":"itermut"}}],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",125,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",125,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",125,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",125,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",125,{"inputs":[{"name":"result"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",125,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"t"}}],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",125,{"inputs":[{"name":"result"}],"output":{"name":"t"}}],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",125,{"inputs":[{"name":"result"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",125,{"inputs":[{"name":"result"}],"output":{"name":"e"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",125,{"inputs":[{"name":"result"}],"output":{"name":"intoiter"}}],[11,"next","","",126,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",126,null],[11,"next_back","","",126,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",126,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",127,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",127,null],[11,"next_back","","",127,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",128,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",128,null],[11,"next_back","","",128,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",125,{"inputs":[{"name":"result"},{"name":"i"}],"output":{"name":"result"}}],[11,"as_slice","core::slice","View the underlying data as a subslice of the original data.",129,null],[11,"next","","",129,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",129,null],[11,"count","","",129,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"nth","","",129,{"inputs":[{"name":"iter"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",129,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next_back","","",129,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",129,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"into_slice","","View the underlying data as a subslice of the original data.",130,null],[11,"next","","",130,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",130,null],[11,"count","","",130,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"nth","","",130,{"inputs":[{"name":"itermut"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",130,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next_back","","",130,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",131,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[11,"next","","",131,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"size_hint","","",131,null],[11,"next_back","","",131,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"finish","","",131,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"finish","","",132,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"next","","",132,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"size_hint","","",132,null],[11,"next_back","","",132,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"next","","",133,{"inputs":[{"name":"genericsplitn"}],"output":{"name":"option"}}],[11,"size_hint","","",133,null],[11,"next","","",134,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"size_hint","","",134,null],[11,"next","","",135,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"size_hint","","",135,null],[11,"next","","",136,{"inputs":[{"name":"splitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",136,null],[11,"next","","",137,{"inputs":[{"name":"rsplitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",137,null],[11,"clone","","",138,{"inputs":[{"name":"windows"}],"output":{"name":"windows"}}],[11,"next","","",138,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"size_hint","","",138,null],[11,"count","","",138,{"inputs":[{"name":"windows"}],"output":{"name":"usize"}}],[11,"nth","","",138,{"inputs":[{"name":"windows"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",138,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"next_back","","",138,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"clone","","",139,{"inputs":[{"name":"chunks"}],"output":{"name":"chunks"}}],[11,"next","","",139,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"size_hint","","",139,null],[11,"count","","",139,{"inputs":[{"name":"chunks"}],"output":{"name":"usize"}}],[11,"nth","","",139,{"inputs":[{"name":"chunks"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",139,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"next_back","","",139,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"next","","",140,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"size_hint","","",140,null],[11,"count","","",140,{"inputs":[{"name":"chunksmut"}],"output":{"name":"usize"}}],[11,"nth","","",140,{"inputs":[{"name":"chunksmut"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",140,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"next_back","","",140,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"fmt","core::str::pattern","",141,{"inputs":[{"name":"searchstep"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",141,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"ne","","",141,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"clone","","",141,{"inputs":[{"name":"searchstep"}],"output":{"name":"searchstep"}}],[11,"clone","","",142,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"chareqsearcher"}}],[11,"into_searcher","","",143,{"inputs":[{"name":"chareqpattern"},{"name":"str"}],"output":{"name":"chareqsearcher"}}],[11,"haystack","","",142,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"str"}}],[11,"next","","",142,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"next_back","","",142,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"clone","","",144,{"inputs":[{"name":"charsearcher"}],"output":{"name":"charsearcher"}}],[11,"haystack","","",144,{"inputs":[{"name":"charsearcher"}],"output":{"name":"str"}}],[11,"next","","",144,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",144,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",144,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",144,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",144,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",144,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"clone","","",145,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"charslicesearcher"}}],[11,"haystack","","",145,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"str"}}],[11,"next","","",145,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",145,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",145,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",145,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",145,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",145,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"clone","","",146,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"charpredicatesearcher"}}],[11,"haystack","","",146,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"str"}}],[11,"next","","",146,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",146,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",146,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",146,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",146,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",146,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"fmt","","",147,{"inputs":[{"name":"strsearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",147,{"inputs":[{"name":"strsearcher"}],"output":{"name":"strsearcher"}}],[11,"fmt","","",148,{"inputs":[{"name":"strsearcherimpl"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",148,{"inputs":[{"name":"strsearcherimpl"}],"output":{"name":"strsearcherimpl"}}],[11,"fmt","","",149,{"inputs":[{"name":"emptyneedle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",149,{"inputs":[{"name":"emptyneedle"}],"output":{"name":"emptyneedle"}}],[11,"haystack","","",147,{"inputs":[{"name":"strsearcher"}],"output":{"name":"str"}}],[11,"next","","",147,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",147,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",147,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",147,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"fmt","","",150,{"inputs":[{"name":"twowaysearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",150,{"inputs":[{"name":"twowaysearcher"}],"output":{"name":"twowaysearcher"}}],[11,"use_early_reject","","",151,{"inputs":[{"name":"matchonly"}],"output":{"name":"bool"}}],[11,"rejecting","","",151,null],[11,"matching","","",151,null],[11,"use_early_reject","","",152,{"inputs":[{"name":"rejectandmatch"}],"output":{"name":"bool"}}],[11,"rejecting","","",152,null],[11,"matching","","",152,null],[11,"eq","core::str","",153,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"ne","","",153,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"clone","","",153,{"inputs":[{"name":"parseboolerror"}],"output":{"name":"parseboolerror"}}],[11,"fmt","","",153,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",153,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",154,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",154,{"inputs":[{"name":"utf8error"}],"output":{"name":"utf8error"}}],[11,"eq","","",154,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"ne","","",154,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"valid_up_to","","Returns the index in the given string up to which valid UTF-8 was\nverified.",154,{"inputs":[{"name":"utf8error"}],"output":{"name":"usize"}}],[11,"fmt","","",154,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",155,{"inputs":[{"name":"chars"}],"output":{"name":"chars"}}],[11,"next","","",155,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"size_hint","","",155,null],[11,"next_back","","",155,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"as_str","","View the underlying data as a subslice of the original data.",155,{"inputs":[{"name":"chars"}],"output":{"name":"str"}}],[11,"clone","","",156,{"inputs":[{"name":"charindices"}],"output":{"name":"charindices"}}],[11,"next","","",156,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"size_hint","","",156,null],[11,"next_back","","",156,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"as_str","","View the underlying data as a subslice of the original data.",156,{"inputs":[{"name":"charindices"}],"output":{"name":"str"}}],[11,"clone","","",157,{"inputs":[{"name":"bytes"}],"output":{"name":"bytes"}}],[11,"next","","",157,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"size_hint","","",157,null],[11,"count","","",157,{"inputs":[{"name":"bytes"}],"output":{"name":"usize"}}],[11,"last","","",157,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"nth","","",157,{"inputs":[{"name":"bytes"},{"name":"usize"}],"output":{"name":"option"}}],[11,"next_back","","",157,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"len","","",157,{"inputs":[{"name":"bytes"}],"output":{"name":"usize"}}],[11,"clone","","",158,{"inputs":[{"name":"splitinternal"}],"output":{"name":"splitinternal"}}],[11,"next","","",159,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"clone","","",159,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[11,"next","","",160,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[11,"clone","","",160,{"inputs":[{"name":"rsplit"}],"output":{"name":"rsplit"}}],[11,"next_back","","",159,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"next_back","","",160,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[11,"next","","",161,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"clone","","",161,{"inputs":[{"name":"splitterminator"}],"output":{"name":"splitterminator"}}],[11,"next","","",162,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"clone","","",162,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"rsplitterminator"}}],[11,"next_back","","",161,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"next_back","","",162,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"clone","","",163,{"inputs":[{"name":"splitninternal"}],"output":{"name":"splitninternal"}}],[11,"next","","",164,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"clone","","",164,{"inputs":[{"name":"splitn"}],"output":{"name":"splitn"}}],[11,"next","","",165,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"clone","","",165,{"inputs":[{"name":"rsplitn"}],"output":{"name":"rsplitn"}}],[11,"clone","","",166,{"inputs":[{"name":"matchindicesinternal"}],"output":{"name":"matchindicesinternal"}}],[11,"next","","",167,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"clone","","",167,{"inputs":[{"name":"matchindices"}],"output":{"name":"matchindices"}}],[11,"next","","",168,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"clone","","",168,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"rmatchindices"}}],[11,"next_back","","",167,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"next_back","","",168,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"clone","","",169,{"inputs":[{"name":"matchesinternal"}],"output":{"name":"matchesinternal"}}],[11,"next","","",170,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"clone","","",170,{"inputs":[{"name":"matches"}],"output":{"name":"matches"}}],[11,"next","","",171,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"clone","","",171,{"inputs":[{"name":"rmatches"}],"output":{"name":"rmatches"}}],[11,"next_back","","",170,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"next_back","","",171,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"clone","","",172,{"inputs":[{"name":"lines"}],"output":{"name":"lines"}}],[11,"next","","",172,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"size_hint","","",172,null],[11,"next_back","","",172,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"clone","","",173,{"inputs":[{"name":"linesany"}],"output":{"name":"linesany"}}],[11,"clone","","",174,{"inputs":[{"name":"linesanymap"}],"output":{"name":"linesanymap"}}],[11,"call","","",174,null],[11,"call_mut","","",174,null],[11,"call_once","","",174,null],[11,"next","","",173,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"size_hint","","",173,null],[11,"next_back","","",173,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"clone","","",175,{"inputs":[{"name":"charrange"}],"output":{"name":"charrange"}}],[11,"new","core::hash::sip","Creates a new `SipHasher` with the two initial keys set to 0.",176,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",176,{"inputs":[{"name":"siphasher"},{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",176,null],[11,"finish","","",176,{"inputs":[{"name":"siphasher"}],"output":{"name":"u64"}}],[11,"clone","","",176,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"default","","",176,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"build_hasher","core::hash","",177,{"inputs":[{"name":"buildhasherdefault"}],"output":{"name":"h"}}],[11,"clone","","",177,{"inputs":[{"name":"buildhasherdefault"}],"output":{"name":"buildhasherdefault"}}],[11,"default","","",177,{"inputs":[{"name":"buildhasherdefault"}],"output":{"name":"buildhasherdefault"}}],[11,"eq","core::fmt::num","",178,{"inputs":[{"name":"binary"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"ne","","",178,{"inputs":[{"name":"binary"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"clone","","",178,{"inputs":[{"name":"binary"}],"output":{"name":"binary"}}],[11,"eq","","",179,{"inputs":[{"name":"octal"},{"name":"octal"}],"output":{"name":"bool"}}],[11,"ne","","",179,{"inputs":[{"name":"octal"},{"name":"octal"}],"output":{"name":"bool"}}],[11,"clone","","",179,{"inputs":[{"name":"octal"}],"output":{"name":"octal"}}],[11,"eq","","",180,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"ne","","",180,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"clone","","",180,{"inputs":[{"name":"decimal"}],"output":{"name":"decimal"}}],[11,"eq","","",181,{"inputs":[{"name":"lowerhex"},{"name":"lowerhex"}],"output":{"name":"bool"}}],[11,"ne","","",181,{"inputs":[{"name":"lowerhex"},{"name":"lowerhex"}],"output":{"name":"bool"}}],[11,"clone","","",181,{"inputs":[{"name":"lowerhex"}],"output":{"name":"lowerhex"}}],[11,"eq","","",182,{"inputs":[{"name":"upperhex"},{"name":"upperhex"}],"output":{"name":"bool"}}],[11,"ne","","",182,{"inputs":[{"name":"upperhex"},{"name":"upperhex"}],"output":{"name":"bool"}}],[11,"clone","","",182,{"inputs":[{"name":"upperhex"}],"output":{"name":"upperhex"}}],[11,"eq","","",183,{"inputs":[{"name":"radix"},{"name":"radix"}],"output":{"name":"bool"}}],[11,"ne","","",183,{"inputs":[{"name":"radix"},{"name":"radix"}],"output":{"name":"bool"}}],[11,"clone","","",183,{"inputs":[{"name":"radix"}],"output":{"name":"radix"}}],[11,"clone","","",184,{"inputs":[{"name":"radixfmt"}],"output":{"name":"radixfmt"}}],[11,"fmt","","",184,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",184,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",184,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",184,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",184,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",184,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",184,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",184,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",184,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",184,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",184,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",184,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",184,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",184,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",184,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",184,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",184,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",184,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",184,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",184,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"write_str","core::fmt::builders","",185,{"inputs":[{"name":"padadapter"},{"name":"str"}],"output":{"name":"result"}}],[11,"field","","Adds a new field to the generated struct output.",186,{"inputs":[{"name":"debugstruct"},{"name":"str"},{"name":"debug"}],"output":{"name":"debugstruct"}}],[11,"finish","","Finishes output and returns any error encountered.",186,{"inputs":[{"name":"debugstruct"}],"output":{"name":"result"}}],[11,"field","","Adds a new field to the generated tuple struct output.",187,{"inputs":[{"name":"debugtuple"},{"name":"debug"}],"output":{"name":"debugtuple"}}],[11,"finish","","Finishes output and returns any error encountered.",187,{"inputs":[{"name":"debugtuple"}],"output":{"name":"result"}}],[11,"formatter","","Returns the wrapped `Formatter`.",187,{"inputs":[{"name":"debugtuple"}],"output":{"name":"formatter"}}],[11,"finish","","",188,null],[11,"entry","","Adds a new entry to the set output.",189,{"inputs":[{"name":"debugset"},{"name":"debug"}],"output":{"name":"debugset"}}],[11,"entries","","Adds the contents of an iterator of entries to the set output.",189,{"inputs":[{"name":"debugset"},{"name":"i"}],"output":{"name":"debugset"}}],[11,"finish","","Finishes output and returns any error encountered.",189,{"inputs":[{"name":"debugset"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the list output.",190,{"inputs":[{"name":"debuglist"},{"name":"debug"}],"output":{"name":"debuglist"}}],[11,"entries","","Adds the contents of an iterator of entries to the list output.",190,{"inputs":[{"name":"debuglist"},{"name":"i"}],"output":{"name":"debuglist"}}],[11,"finish","","Finishes output and returns any error encountered.",190,{"inputs":[{"name":"debuglist"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the map output.",191,{"inputs":[{"name":"debugmap"},{"name":"debug"},{"name":"debug"}],"output":{"name":"debugmap"}}],[11,"entries","","Adds the contents of an iterator of entries to the map output.",191,{"inputs":[{"name":"debugmap"},{"name":"i"}],"output":{"name":"debugmap"}}],[11,"finish","","Finishes output and returns any error encountered.",191,{"inputs":[{"name":"debugmap"}],"output":{"name":"result"}}],[11,"clone","core::fmt::rt::v1","",192,{"inputs":[{"name":"argument"}],"output":{"name":"argument"}}],[11,"clone","","",193,{"inputs":[{"name":"formatspec"}],"output":{"name":"formatspec"}}],[11,"eq","","",194,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"ne","","",194,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"clone","","",194,{"inputs":[{"name":"alignment"}],"output":{"name":"alignment"}}],[11,"clone","","",195,{"inputs":[{"name":"count"}],"output":{"name":"count"}}],[11,"clone","","",196,{"inputs":[{"name":"position"}],"output":{"name":"position"}}],[11,"fmt","core::fmt","",197,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",197,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"clone","","",198,{"inputs":[{"name":"argumentv1"}],"output":{"name":"argumentv1"}}],[11,"clone","","",199,{"inputs":[{"name":"flagv1"}],"output":{"name":"flagv1"}}],[11,"clone","","",200,{"inputs":[{"name":"arguments"}],"output":{"name":"arguments"}}],[11,"fmt","","",200,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",200,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"pad_integral","","Performs the correct padding for an integer which has already been\nemitted into a str. The str should *not* contain the sign for the\ninteger, that will be added by this method.",201,{"inputs":[{"name":"formatter"},{"name":"bool"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"pad","","This function takes a string slice and emits it to the internal buffer\nafter applying the relevant formatting flags specified. The flags\nrecognized for generic strings are:",201,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_str","","Writes some data to the underlying buffer contained within this\nformatter.",201,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_fmt","","Writes some formatted information into this instance",201,{"inputs":[{"name":"formatter"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"flags","","Flags for formatting (packed version of rt::Flag)",201,{"inputs":[{"name":"formatter"}],"output":{"name":"u32"}}],[11,"fill","","Character used as &#39;fill&#39; whenever there is alignment",201,{"inputs":[{"name":"formatter"}],"output":{"name":"char"}}],[11,"align","","Flag indicating what form of alignment was requested",201,{"inputs":[{"name":"formatter"}],"output":{"name":"alignment"}}],[11,"width","","Optionally specified integer width that the output should be",201,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"precision","","Optionally specified precision for numeric types",201,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"sign_plus","","Determines if the `+` flag was specified.",201,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"sign_minus","","Determines if the `-` flag was specified.",201,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"alternate","","Determines if the `#` flag was specified.",201,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"sign_aware_zero_pad","","Determines if the `0` flag was specified.",201,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"debug_struct","","Creates a `DebugStruct` builder designed to assist with creation of\n`fmt::Debug` implementations for structs.",201,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugstruct"}}],[11,"debug_tuple","","Creates a `DebugTuple` builder designed to assist with creation of\n`fmt::Debug` implementations for tuple structs.",201,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugtuple"}}],[11,"debug_list","","Creates a `DebugList` builder designed to assist with creation of\n`fmt::Debug` implementations for list-like structures.",201,{"inputs":[{"name":"formatter"}],"output":{"name":"debuglist"}}],[11,"debug_set","","Creates a `DebugSet` builder designed to assist with creation of\n`fmt::Debug` implementations for set-like structures.",201,{"inputs":[{"name":"formatter"}],"output":{"name":"debugset"}}],[11,"debug_map","","Creates a `DebugMap` builder designed to assist with creation of\n`fmt::Debug` implementations for map-like structures.",201,{"inputs":[{"name":"formatter"}],"output":{"name":"debugmap"}}],[11,"write_str","","",201,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_char","","",201,{"inputs":[{"name":"formatter"},{"name":"char"}],"output":{"name":"result"}}],[11,"write_fmt","","",201,{"inputs":[{"name":"formatter"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"fmt","","",197,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::marker","",70,{"inputs":[{"name":"phantomdata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::cell","",83,{"inputs":[{"name":"cell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",85,{"inputs":[{"name":"refcell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",87,{"inputs":[{"name":"ref"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",88,{"inputs":[{"name":"refmut"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone_from","libc::dox","Performs copy-assignment from `source`.",202,null],[11,"clone_from","libc::dox::imp","Performs copy-assignment from `source`.",202,null],[11,"clone","libc","",44,{"inputs":[{"name":"stat"}],"output":{"name":"stat"}}],[11,"clone","","",45,{"inputs":[{"name":"stat64"}],"output":{"name":"stat64"}}],[11,"clone","","",203,{"inputs":[{"name":"pthread_attr_t"}],"output":{"name":"pthread_attr_t"}}],[11,"clone","","",204,{"inputs":[{"name":"sigset_t"}],"output":{"name":"sigset_t"}}],[11,"clone","","",35,{"inputs":[{"name":"sigaction"}],"output":{"name":"sigaction"}}],[11,"clone","","",36,{"inputs":[{"name":"stack_t"}],"output":{"name":"stack_t"}}],[11,"clone","","",37,{"inputs":[{"name":"siginfo_t"}],"output":{"name":"siginfo_t"}}],[11,"clone","","",38,{"inputs":[{"name":"glob64_t"}],"output":{"name":"glob64_t"}}],[11,"clone","","",39,{"inputs":[{"name":"ucred"}],"output":{"name":"ucred"}}],[11,"clone","","",40,{"inputs":[{"name":"statfs"}],"output":{"name":"statfs"}}],[11,"clone","","",41,{"inputs":[{"name":"msghdr"}],"output":{"name":"msghdr"}}],[11,"clone","","",42,{"inputs":[{"name":"termios"}],"output":{"name":"termios"}}],[11,"clone","","",43,{"inputs":[{"name":"flock"}],"output":{"name":"flock"}}],[11,"clone","","",46,{"inputs":[{"name":"ipc_perm"}],"output":{"name":"ipc_perm"}}],[11,"clone","","",47,{"inputs":[{"name":"shmid_ds"}],"output":{"name":"shmid_ds"}}],[11,"clone","","",24,{"inputs":[{"name":"dirent"}],"output":{"name":"dirent"}}],[11,"clone","","",25,{"inputs":[{"name":"dirent64"}],"output":{"name":"dirent64"}}],[11,"clone","","",26,{"inputs":[{"name":"rlimit64"}],"output":{"name":"rlimit64"}}],[11,"clone","","",27,{"inputs":[{"name":"glob_t"}],"output":{"name":"glob_t"}}],[11,"clone","","",28,{"inputs":[{"name":"ifaddrs"}],"output":{"name":"ifaddrs"}}],[11,"clone","","",205,{"inputs":[{"name":"pthread_mutex_t"}],"output":{"name":"pthread_mutex_t"}}],[11,"clone","","",206,{"inputs":[{"name":"pthread_rwlock_t"}],"output":{"name":"pthread_rwlock_t"}}],[11,"clone","","",207,{"inputs":[{"name":"pthread_mutexattr_t"}],"output":{"name":"pthread_mutexattr_t"}}],[11,"clone","","",208,{"inputs":[{"name":"pthread_cond_t"}],"output":{"name":"pthread_cond_t"}}],[11,"clone","","",29,{"inputs":[{"name":"passwd"}],"output":{"name":"passwd"}}],[11,"clone","","",30,{"inputs":[{"name":"statvfs"}],"output":{"name":"statvfs"}}],[11,"clone","","",31,{"inputs":[{"name":"sockaddr_nl"}],"output":{"name":"sockaddr_nl"}}],[11,"clone","","",32,{"inputs":[{"name":"dqblk"}],"output":{"name":"dqblk"}}],[11,"clone","","",33,{"inputs":[{"name":"signalfd_siginfo"}],"output":{"name":"signalfd_siginfo"}}],[11,"clone","","",209,{"inputs":[{"name":"fsid_t"}],"output":{"name":"fsid_t"}}],[11,"clone","","",34,{"inputs":[{"name":"mq_attr"}],"output":{"name":"mq_attr"}}],[11,"clone","","",210,{"inputs":[{"name":"cpu_set_t"}],"output":{"name":"cpu_set_t"}}],[11,"clone","","",12,{"inputs":[{"name":"sockaddr"}],"output":{"name":"sockaddr"}}],[11,"clone","","",13,{"inputs":[{"name":"sockaddr_in"}],"output":{"name":"sockaddr_in"}}],[11,"clone","","",14,{"inputs":[{"name":"sockaddr_in6"}],"output":{"name":"sockaddr_in6"}}],[11,"clone","","",15,{"inputs":[{"name":"sockaddr_un"}],"output":{"name":"sockaddr_un"}}],[11,"clone","","",16,{"inputs":[{"name":"sockaddr_storage"}],"output":{"name":"sockaddr_storage"}}],[11,"clone","","",17,{"inputs":[{"name":"addrinfo"}],"output":{"name":"addrinfo"}}],[11,"clone","","",18,{"inputs":[{"name":"sockaddr_ll"}],"output":{"name":"sockaddr_ll"}}],[11,"clone","","",211,{"inputs":[{"name":"fd_set"}],"output":{"name":"fd_set"}}],[11,"clone","","",19,{"inputs":[{"name":"tm"}],"output":{"name":"tm"}}],[11,"clone","","",20,{"inputs":[{"name":"sched_param"}],"output":{"name":"sched_param"}}],[11,"clone","","",21,{"inputs":[{"name":"dl_info"}],"output":{"name":"dl_info"}}],[11,"clone","","",22,{"inputs":[{"name":"epoll_event"}],"output":{"name":"epoll_event"}}],[11,"clone","","",23,{"inputs":[{"name":"utsname"}],"output":{"name":"utsname"}}],[11,"clone","","",0,{"inputs":[{"name":"utimbuf"}],"output":{"name":"utimbuf"}}],[11,"clone","","",1,{"inputs":[{"name":"timeval"}],"output":{"name":"timeval"}}],[11,"clone","","",2,{"inputs":[{"name":"timespec"}],"output":{"name":"timespec"}}],[11,"clone","","",3,{"inputs":[{"name":"rlimit"}],"output":{"name":"rlimit"}}],[11,"clone","","",4,{"inputs":[{"name":"rusage"}],"output":{"name":"rusage"}}],[11,"clone","","",5,{"inputs":[{"name":"in_addr"}],"output":{"name":"in_addr"}}],[11,"clone","","",6,{"inputs":[{"name":"in6_addr"}],"output":{"name":"in6_addr"}}],[11,"clone","","",7,{"inputs":[{"name":"ip_mreq"}],"output":{"name":"ip_mreq"}}],[11,"clone","","",8,{"inputs":[{"name":"ipv6_mreq"}],"output":{"name":"ipv6_mreq"}}],[11,"clone","","",9,{"inputs":[{"name":"hostent"}],"output":{"name":"hostent"}}],[11,"clone","","",10,{"inputs":[{"name":"iovec"}],"output":{"name":"iovec"}}],[11,"clone","","",11,{"inputs":[{"name":"pollfd"}],"output":{"name":"pollfd"}}],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"loff_t","","",null,null],[6,"useconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"socklen_t","","",null,null],[6,"pthread_t","","",null,null],[6,"mode_t","","",null,null],[6,"ino64_t","","",null,null],[6,"off64_t","","",null,null],[6,"blkcnt64_t","","",null,null],[6,"rlim64_t","","",null,null],[6,"key_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"mqd_t","","",null,null],[6,"nfds_t","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"rlim_t","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"ino_t","","",null,null],[6,"off_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"SIGTRAP","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"SOCK_CLOEXEC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_RDONLY","","",null,null],[17,"MS_NOSUID","","",null,null],[17,"MS_NODEV","","",null,null],[17,"MS_NOEXEC","","",null,null],[17,"MS_SYNCHRONOUS","","",null,null],[17,"MS_REMOUNT","","",null,null],[17,"MS_MANDLOCK","","",null,null],[17,"MS_DIRSYNC","","",null,null],[17,"MS_NOATIME","","",null,null],[17,"MS_NODIRATIME","","",null,null],[17,"MS_BIND","","",null,null],[17,"MS_MOVE","","",null,null],[17,"MS_REC","","",null,null],[17,"MS_SILENT","","",null,null],[17,"MS_POSIXACL","","",null,null],[17,"MS_UNBINDABLE","","",null,null],[17,"MS_PRIVATE","","",null,null],[17,"MS_SLAVE","","",null,null],[17,"MS_SHARED","","",null,null],[17,"MS_ACTIVE","","",null,null],[17,"MS_NOUSER","","",null,null],[17,"MS_MGC_VAL","","",null,null],[17,"MS_MGC_MSK","","",null,null],[17,"MS_RMT_MASK","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EDOTDOT","","",null,null],[17,"AF_PACKET","","",null,null],[17,"IPPROTO_RAW","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_INET6","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_TRANSPARENT","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"PATH_MAX","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"EPOLLIN","","",null,null],[17,"EPOLLPRI","","",null,null],[17,"EPOLLOUT","","",null,null],[17,"EPOLLRDNORM","","",null,null],[17,"EPOLLRDBAND","","",null,null],[17,"EPOLLWRNORM","","",null,null],[17,"EPOLLWRBAND","","",null,null],[17,"EPOLLMSG","","",null,null],[17,"EPOLLERR","","",null,null],[17,"EPOLLHUP","","",null,null],[17,"EPOLLET","","",null,null],[17,"EPOLL_CTL_ADD","","",null,null],[17,"EPOLL_CTL_MOD","","",null,null],[17,"EPOLL_CTL_DEL","","",null,null],[17,"MNT_DETACH","","",null,null],[17,"MNT_EXPIRE","","",null,null],[17,"Q_GETFMT","","",null,null],[17,"Q_GETINFO","","",null,null],[17,"Q_SETINFO","","",null,null],[17,"QIF_BLIMITS","","",null,null],[17,"QIF_SPACE","","",null,null],[17,"QIF_ILIMITS","","",null,null],[17,"QIF_INODES","","",null,null],[17,"QIF_BTIME","","",null,null],[17,"QIF_ITIME","","",null,null],[17,"QIF_LIMITS","","",null,null],[17,"QIF_USAGE","","",null,null],[17,"QIF_TIMES","","",null,null],[17,"QIF_ALL","","",null,null],[17,"CBAUD","","",null,null],[17,"EFD_CLOEXEC","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"TAB3","","",null,null],[17,"CR0","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF0","","",null,null],[17,"FF1","","",null,null],[17,"BS0","","",null,null],[17,"BS1","","",null,null],[17,"VT0","","",null,null],[17,"VT1","","",null,null],[17,"VERASE","","",null,null],[17,"VWERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VREPRINT","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VLNEXT","","",null,null],[17,"VDISCARD","","",null,null],[17,"VTIME","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS5","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"CRTSCTS","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHO","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"CLONE_VM","","",null,null],[17,"CLONE_FS","","",null,null],[17,"CLONE_FILES","","",null,null],[17,"CLONE_SIGHAND","","",null,null],[17,"CLONE_PTRACE","","",null,null],[17,"CLONE_VFORK","","",null,null],[17,"CLONE_PARENT","","",null,null],[17,"CLONE_THREAD","","",null,null],[17,"CLONE_NEWNS","","",null,null],[17,"CLONE_SYSVSEM","","",null,null],[17,"CLONE_SETTLS","","",null,null],[17,"CLONE_PARENT_SETTID","","",null,null],[17,"CLONE_CHILD_CLEARTID","","",null,null],[17,"CLONE_DETACHED","","",null,null],[17,"CLONE_UNTRACED","","",null,null],[17,"CLONE_CHILD_SETTID","","",null,null],[17,"WNOHANG","","",null,null],[17,"SPLICE_F_MOVE","","",null,null],[17,"SPLICE_F_NONBLOCK","","",null,null],[17,"SPLICE_F_MORE","","",null,null],[17,"SPLICE_F_GIFT","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"ST_NODEV","","",null,null],[17,"ST_NOEXEC","","",null,null],[17,"ST_SYNCHRONOUS","","",null,null],[17,"ST_MANDLOCK","","",null,null],[17,"ST_WRITE","","",null,null],[17,"ST_APPEND","","",null,null],[17,"ST_IMMUTABLE","","",null,null],[17,"ST_NOATIME","","",null,null],[17,"ST_NODIRATIME","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"SCHED_OTHER","","",null,null],[17,"SCHED_FIFO","","",null,null],[17,"SCHED_RR","","",null,null],[17,"SCHED_BATCH","","",null,null],[17,"SCHED_IDLE","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_INFO","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHM_REMAP","","",null,null],[17,"SHM_EXEC","","",null,null],[17,"SHM_LOCK","","",null,null],[17,"SHM_UNLOCK","","",null,null],[17,"SHM_HUGETLB","","",null,null],[17,"SHM_NORESERVE","","",null,null],[17,"MS_RELATIME","","",null,null],[17,"MS_KERNMOUNT","","",null,null],[17,"MS_I_VERSION","","",null,null],[17,"MS_STRICTATIME","","",null,null],[17,"EPOLLRDHUP","","",null,null],[17,"EPOLLONESHOT","","",null,null],[17,"QFMT_VFS_OLD","","",null,null],[17,"QFMT_VFS_V0","","",null,null],[17,"SFD_CLOEXEC","","",null,null],[17,"EFD_SEMAPHORE","","",null,null],[17,"NCCS","","",null,null],[17,"CLONE_NEWUTS","","",null,null],[17,"CLONE_NEWIPC","","",null,null],[17,"CLONE_NEWUSER","","",null,null],[17,"CLONE_NEWPID","","",null,null],[17,"CLONE_NEWNET","","",null,null],[17,"CLONE_IO","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"SOCK_NONBLOCK","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EBADMSG","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EHWPOISON","","",null,null],[17,"ERFKILL","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGSTKFLT","","",null,null],[17,"SIGUNUSED","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGPWR","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"FALLOC_FL_KEEP_SIZE","","",null,null],[17,"FALLOC_FL_PUNCH_HOLE","","",null,null],[17,"BUFSIZ","","",null,null],[17,"TMP_MAX","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"ST_RELATIME","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"ADFS_SUPER_MAGIC","","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"VEOF","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VMIN","","",null,null],[17,"IEXTEN","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"IUTF8","","",null,null],[17,"CPU_SETSIZE","","",null,null],[17,"EXTPROC","","",null,null],[17,"QFMT_VFS_V1","","",null,null],[17,"PTRACE_TRACEME","","",null,null],[17,"PTRACE_PEEKTEXT","","",null,null],[17,"PTRACE_PEEKDATA","","",null,null],[17,"PTRACE_PEEKUSER","","",null,null],[17,"PTRACE_POKETEXT","","",null,null],[17,"PTRACE_POKEDATA","","",null,null],[17,"PTRACE_POKEUSER","","",null,null],[17,"PTRACE_CONT","","",null,null],[17,"PTRACE_KILL","","",null,null],[17,"PTRACE_SINGLESTEP","","",null,null],[17,"PTRACE_ATTACH","","",null,null],[17,"PTRACE_DETACH","","",null,null],[17,"PTRACE_SYSCALL","","",null,null],[17,"PTRACE_SETOPTIONS","","",null,null],[17,"PTRACE_GETEVENTMSG","","",null,null],[17,"PTRACE_GETSIGINFO","","",null,null],[17,"PTRACE_SETSIGINFO","","",null,null],[17,"PTRACE_GETREGSET","","",null,null],[17,"PTRACE_SETREGSET","","",null,null],[17,"PTRACE_SEIZE","","",null,null],[17,"PTRACE_INTERRUPT","","",null,null],[17,"PTRACE_LISTEN","","",null,null],[17,"PTRACE_PEEKSIGINFO","","",null,null],[17,"MADV_DODUMP","","",null,null],[17,"MADV_DONTDUMP","","",null,null],[17,"EPOLLWAKEUP","","",null,null],[17,"MADV_HUGEPAGE","","",null,null],[17,"MADV_NOHUGEPAGE","","",null,null],[17,"MAP_HUGETLB","","",null,null],[17,"EFD_NONBLOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"SFD_NONBLOCK","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"TCGETS","","",null,null],[17,"TCSETS","","",null,null],[17,"TCSETSW","","",null,null],[17,"TCSETSF","","",null,null],[17,"TCGETA","","",null,null],[17,"TCSETA","","",null,null],[17,"TCSETAW","","",null,null],[17,"TCSETAF","","",null,null],[17,"TCSBRK","","",null,null],[17,"TCXONC","","",null,null],[17,"TCFLSH","","",null,null],[17,"TIOCGSOFTCAR","","",null,null],[17,"TIOCSSOFTCAR","","",null,null],[17,"TIOCINQ","","",null,null],[17,"TIOCLINUX","","",null,null],[17,"TIOCGSERIAL","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMSET","","",null,null],[17,"FIONREAD","","",null,null],[17,"TIOCCONS","","",null,null],[17,"RTLD_DEEPBIND","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null],[17,"O_DIRECT","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"SO_PEERCRED","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PTRACE_GETFPREGS","","",null,null],[17,"PTRACE_SETFPREGS","","",null,null],[17,"PTRACE_GETFPXREGS","","",null,null],[17,"PTRACE_SETFPXREGS","","",null,null],[17,"PTRACE_GETREGS","","",null,null],[17,"PTRACE_SETREGS","","",null,null],[17,"AF_NETLINK","","",null,null]],"paths":[[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"passwd"],[3,"statvfs"],[3,"sockaddr_nl"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"mq_attr"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"ucred"],[3,"statfs"],[3,"msghdr"],[3,"termios"],[3,"flock"],[3,"stat"],[3,"stat64"],[3,"ipc_perm"],[3,"shmid_ds"],[4,"Option"],[3,"Wrapping"],[3,"Decoded"],[4,"FullDecoded"],[4,"Part"],[3,"Formatted"],[4,"Sign"],[3,"Unpacked"],[4,"Sign"],[3,"Decimal"],[4,"ParseResult"],[3,"ParseFloatError"],[4,"FloatErrorKind"],[3,"Big32x40"],[3,"Big8x3"],[3,"Fp"],[4,"FpCategory"],[3,"ParseIntError"],[4,"IntErrorKind"],[3,"NonZero"],[3,"Unique"],[3,"Shared"],[3,"PhantomData"],[3,"RangeFull"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"Ordering"],[8,"Any"],[3,"TypeId"],[3,"AtomicBool"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"AtomicPtr"],[4,"Ordering"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"BorrowRef"],[3,"Ref"],[3,"RefMut"],[3,"BorrowRefMut"],[3,"UnsafeCell"],[3,"EscapeUnicode"],[4,"EscapeUnicodeState"],[3,"EscapeDefault"],[4,"EscapeDefaultState"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[4,"ChainState"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"StepBy"],[3,"RangeInclusive"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[3,"Item"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Slice"],[3,"TraitObject"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Split"],[3,"SplitMut"],[3,"GenericSplitN"],[3,"SplitN"],[3,"RSplitN"],[3,"SplitNMut"],[3,"RSplitNMut"],[3,"Windows"],[3,"Chunks"],[3,"ChunksMut"],[4,"SearchStep"],[3,"CharEqSearcher"],[3,"CharEqPattern"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[4,"StrSearcherImpl"],[3,"EmptyNeedle"],[3,"TwoWaySearcher"],[4,"MatchOnly"],[4,"RejectAndMatch"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"SplitInternal"],[3,"Split"],[3,"RSplit"],[3,"SplitTerminator"],[3,"RSplitTerminator"],[3,"SplitNInternal"],[3,"SplitN"],[3,"RSplitN"],[3,"MatchIndicesInternal"],[3,"MatchIndices"],[3,"RMatchIndices"],[3,"MatchesInternal"],[3,"Matches"],[3,"RMatches"],[3,"Lines"],[3,"LinesAny"],[3,"LinesAnyMap"],[3,"CharRange"],[3,"SipHasher"],[3,"BuildHasherDefault"],[3,"Binary"],[3,"Octal"],[3,"Decimal"],[3,"LowerHex"],[3,"UpperHex"],[3,"Radix"],[3,"RadixFmt"],[3,"PadAdapter"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"DebugInner"],[3,"DebugSet"],[3,"DebugList"],[3,"DebugMap"],[3,"Argument"],[3,"FormatSpec"],[4,"Alignment"],[4,"Count"],[4,"Position"],[3,"Error"],[3,"ArgumentV1"],[4,"FlagV1"],[3,"Arguments"],[3,"Formatter"],[8,"Clone"],[3,"pthread_attr_t"],[3,"sigset_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"fd_set"]]};
searchIndex['lazy_static'] = {"items":[[14,"lazy_static!","lazy_static","",null,null]],"paths":[]};
initSearch(searchIndex);
